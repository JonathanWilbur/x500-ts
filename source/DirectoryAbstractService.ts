/**
 * @module DirectoryAbstractService
 * @summary The ASN.1 module `DirectoryAbstractService`.
 * @description
 *
 * OID: joint-iso-itu-t.ds.module.directoryAbstractService.9
 * IRI: undefined
 * EXTENSIBLE: false
 * ENCODINGREF: undefined
 * FILE: undefined
 *
 * This file was compiled by Wildboar Software's ASN.1 Compiler.
 *
 * @see {@link https://wildboarsoftware.com|Wildboar Software's Website}
 * /


/* eslint-disable */
import {
    ASN1ConstructionError as _ConstructionError,
    ASN1Element as _Element,
    ASN1TagClass as _TagClass,
    BIT_STRING,
    BOOLEAN,
    ENUMERATED,
    EXTERNAL,
    GeneralizedTime,
    INTEGER,
    NULL,
    ObjectIdentifier as _OID,
    OBJECT_IDENTIFIER,
    OCTET_STRING,
    OPTIONAL,
    TRUE_BIT,
    UTCTime,
} from "asn1-ts";
import * as $ from "asn1-ts/dist/node/functional";
import {
    AttributeCertificationPath,
    _decode_AttributeCertificationPath,
    _encode_AttributeCertificationPath,
} from "./AttributeCertificateDefinitions";
import {
    AlgorithmIdentifier,
    CertificationPath,
    ENCRYPTED,
    HASH,
    SIGNED,
    _decode_AlgorithmIdentifier,
    _decode_CertificationPath,
    _encode_AlgorithmIdentifier,
    _encode_CertificationPath,
    _get_decoder_for_ENCRYPTED,
    _get_decoder_for_HASH,
    _get_decoder_for_SIGNED,
    _get_encoder_for_ENCRYPTED,
    _get_encoder_for_HASH,
    _get_encoder_for_SIGNED,
} from "./AuthenticationFramework";
import {
    Code,
    ERROR,
    id_errcode_abandoned,
    id_errcode_abandonFailed,
    id_errcode_attributeError,
    id_errcode_nameError,
    id_errcode_referral,
    id_errcode_securityError,
    id_errcode_serviceError,
    id_errcode_updateError,
    id_opcode_abandon,
    id_opcode_addEntry,
    id_opcode_administerPassword,
    id_opcode_changePassword,
    id_opcode_compare,
    id_opcode_ldapTransport,
    id_opcode_linkedLDAP,
    id_opcode_list,
    id_opcode_modifyDN,
    id_opcode_modifyEntry,
    id_opcode_read,
    id_opcode_removeEntry,
    id_opcode_search,
    InvokeId,
    OPERATION,
    _decode_Code,
    _decode_InvokeId,
    _encode_Code,
    _encode_InvokeId,
} from "./CommonProtocolSpecification";
import {
    AgreementID,
    _decode_AgreementID,
    _encode_AgreementID,
} from "./DirectoryShadowAbstractService";
import {
    AccessPoint,
    ContinuationReference,
    Exclusions,
    OperationProgress,
    ReferenceType,
    _decode_AccessPoint,
    _decode_ContinuationReference,
    _decode_Exclusions,
    _decode_OperationProgress,
    _decode_ReferenceType,
    _encode_AccessPoint,
    _encode_ContinuationReference,
    _encode_Exclusions,
    _encode_OperationProgress,
    _encode_ReferenceType,
    _enum_for_ReferenceType,
} from "./DistributedOperations";
import {
    OPTIONALLY_PROTECTED,
    OPTIONALLY_PROTECTED_SEQ,
    _get_decoder_for_OPTIONALLY_PROTECTED,
    _get_decoder_for_OPTIONALLY_PROTECTED_SEQ,
    _get_encoder_for_OPTIONALLY_PROTECTED,
    _get_encoder_for_OPTIONALLY_PROTECTED_SEQ,
} from "./EnhancedSecurity";
import * as InformationFramework from "./InformationFramework";
import {
    Attribute,
    ATTRIBUTE,
    AttributeType,
    AttributeTypeAndValue,
    AttributeTypeAssertion,
    AttributeValue,
    AttributeValueAssertion,
    ContextAssertion,
    DistinguishedName,
    Name,
    RelativeDistinguishedName,
    _decode_Attribute,
    _decode_AttributeType,
    _decode_AttributeTypeAndValue,
    _decode_AttributeTypeAssertion,
    _decode_AttributeValue,
    _decode_AttributeValueAssertion,
    _decode_ContextAssertion,
    _decode_DistinguishedName,
    _decode_Name,
    _decode_RelativeDistinguishedName,
    _encode_Attribute,
    _encode_AttributeType,
    _encode_AttributeTypeAndValue,
    _encode_AttributeTypeAssertion,
    _encode_AttributeValue,
    _encode_AttributeValueAssertion,
    _encode_ContextAssertion,
    _encode_DistinguishedName,
    _encode_Name,
    _encode_RelativeDistinguishedName,
} from "./InformationFramework";
import {
    LDAPMessage,
    _decode_LDAPMessage,
    _encode_LDAPMessage,
} from "./Lightweight-Directory-Access-Protocol-V3";
import { UserPwd, _decode_UserPwd, _encode_UserPwd } from "./PasswordPolicy";
import {
    DirectoryString,
    UnboundedDirectoryString,
    _decode_DirectoryString,
    _decode_UnboundedDirectoryString,
    _encode_DirectoryString,
    _encode_UnboundedDirectoryString,
} from "./SelectedAttributeTypes";
import {
    RelaxationPolicy,
    _decode_RelaxationPolicy,
    _encode_RelaxationPolicy,
} from "./ServiceAdministration";
import {
    SPKM_ERROR,
    SPKM_REP_TI,
    SPKM_REQ,
    _decode_SPKM_ERROR,
    _decode_SPKM_REP_TI,
    _decode_SPKM_REQ,
    _encode_SPKM_ERROR,
    _encode_SPKM_REP_TI,
    _encode_SPKM_REQ,
} from "./SpkmGssTokens";
import { id_at } from "./UsefulDefinitions";
export {
    AttributeCertificationPath,
    _decode_AttributeCertificationPath,
    _encode_AttributeCertificationPath,
} from "./AttributeCertificateDefinitions";
export {
    AlgorithmIdentifier,
    CertificationPath,
    ENCRYPTED,
    HASH,
    SIGNED,
    SupportedAlgorithms,
    _decode_AlgorithmIdentifier,
    _decode_CertificationPath,
    _encode_AlgorithmIdentifier,
    _encode_CertificationPath,
    _get_decoder_for_ENCRYPTED,
    _get_decoder_for_HASH,
    _get_decoder_for_SIGNED,
    _get_encoder_for_ENCRYPTED,
    _get_encoder_for_HASH,
    _get_encoder_for_SIGNED,
} from "./AuthenticationFramework";
export {
    Code,
    ERROR,
    id_errcode_abandoned,
    id_errcode_abandonFailed,
    id_errcode_attributeError,
    id_errcode_nameError,
    id_errcode_referral,
    id_errcode_securityError,
    id_errcode_serviceError,
    id_errcode_updateError,
    id_opcode_abandon,
    id_opcode_addEntry,
    id_opcode_administerPassword,
    id_opcode_changePassword,
    id_opcode_compare,
    id_opcode_ldapTransport,
    id_opcode_linkedLDAP,
    id_opcode_list,
    id_opcode_modifyDN,
    id_opcode_modifyEntry,
    id_opcode_read,
    id_opcode_removeEntry,
    id_opcode_search,
    InvokeId,
    OPERATION,
    _decode_Code,
    _decode_InvokeId,
    _encode_Code,
    _encode_InvokeId,
} from "./CommonProtocolSpecification";
export {
    AgreementID,
    _decode_AgreementID,
    _encode_AgreementID,
} from "./DirectoryShadowAbstractService";
export {
    AccessPoint,
    ContinuationReference,
    Exclusions,
    OperationProgress,
    ReferenceType,
    ReferenceType_cross /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_ditBridge /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_immediateSuperior /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_master /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_nonSpecificSubordinate /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_self /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_subordinate /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_superior /* IMPORTED_ENUMERATION_ITEM */,
    ReferenceType_supplier /* IMPORTED_ENUMERATION_ITEM */,
    _decode_AccessPoint,
    _decode_ContinuationReference,
    _decode_Exclusions,
    _decode_OperationProgress,
    _decode_ReferenceType,
    _encode_AccessPoint,
    _encode_ContinuationReference,
    _encode_Exclusions,
    _encode_OperationProgress,
    _encode_ReferenceType,
    _enum_for_ReferenceType,
} from "./DistributedOperations";
export {
    OPTIONALLY_PROTECTED,
    OPTIONALLY_PROTECTED_SEQ,
    _get_decoder_for_OPTIONALLY_PROTECTED,
    _get_decoder_for_OPTIONALLY_PROTECTED_SEQ,
    _get_encoder_for_OPTIONALLY_PROTECTED,
    _get_encoder_for_OPTIONALLY_PROTECTED_SEQ,
} from "./EnhancedSecurity";
export {
    Attribute,
    ATTRIBUTE,
    AttributeType,
    AttributeTypeAndValue,
    AttributeTypeAssertion,
    AttributeValue,
    AttributeValueAssertion,
    CONTEXT,
    ContextAssertion,
    DistinguishedName,
    MATCHING_RULE,
    Name,
    OBJECT_CLASS,
    RelativeDistinguishedName,
    SupportedAttributes,
    SupportedContexts,
    _decode_Attribute,
    _decode_AttributeType,
    _decode_AttributeTypeAndValue,
    _decode_AttributeTypeAssertion,
    _decode_AttributeValue,
    _decode_AttributeValueAssertion,
    _decode_ContextAssertion,
    _decode_DistinguishedName,
    _decode_Name,
    _decode_RelativeDistinguishedName,
    _encode_Attribute,
    _encode_AttributeType,
    _encode_AttributeTypeAndValue,
    _encode_AttributeTypeAssertion,
    _encode_AttributeValue,
    _encode_AttributeValueAssertion,
    _encode_ContextAssertion,
    _encode_DistinguishedName,
    _encode_Name,
    _encode_RelativeDistinguishedName,
} from "./InformationFramework";
export {
    LDAPMessage,
    _decode_LDAPMessage,
    _encode_LDAPMessage,
} from "./Lightweight-Directory-Access-Protocol-V3";
export { UserPwd, _decode_UserPwd, _encode_UserPwd } from "./PasswordPolicy";
export {
    DirectoryString,
    UnboundedDirectoryString,
    _decode_DirectoryString,
    _decode_UnboundedDirectoryString,
    _encode_DirectoryString,
    _encode_UnboundedDirectoryString,
} from "./SelectedAttributeTypes";
export {
    RelaxationPolicy,
    _decode_RelaxationPolicy,
    _encode_RelaxationPolicy,
} from "./ServiceAdministration";
export {
    SPKM_ERROR,
    SPKM_REP_TI,
    SPKM_REQ,
    _decode_SPKM_ERROR,
    _decode_SPKM_REP_TI,
    _decode_SPKM_REQ,
    _encode_SPKM_ERROR,
    _encode_SPKM_REP_TI,
    _encode_SPKM_REQ,
} from "./SpkmGssTokens";
export { id_at } from "./UsefulDefinitions";

/**
 * @summary FamilyEntry_information_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FamilyEntry-information-Item ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type FamilyEntry_information_Item =
    | { attributeType: AttributeType } /* CHOICE_ALT_ROOT */
    | { attribute: Attribute } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_FamilyEntry_information_Item: $.ASN1Decoder<
    FamilyEntry_information_Item
> | null = null;
let _cached_encoder_for_FamilyEntry_information_Item: $.ASN1Encoder<
    FamilyEntry_information_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FamilyEntry_information_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FamilyEntry_information_Item} The decoded data structure.
 */
export function _decode_FamilyEntry_information_Item(el: _Element) {
    if (!_cached_decoder_for_FamilyEntry_information_Item) {
        _cached_decoder_for_FamilyEntry_information_Item = $._decode_extensible_choice<
            FamilyEntry_information_Item
        >({
            "UNIVERSAL 6": ["attributeType", _decode_AttributeType],
            "UNIVERSAL 16": ["attribute", _decode_Attribute],
        });
    }
    return _cached_decoder_for_FamilyEntry_information_Item(el);
}
/**
 * @summary Encodes a(n) FamilyEntry_information_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FamilyEntry_information_Item, encoded as an ASN.1 Element.
 */
export function _encode_FamilyEntry_information_Item(
    value: FamilyEntry_information_Item,
    elGetter: $.ASN1Encoder<FamilyEntry_information_Item>
) {
    if (!_cached_encoder_for_FamilyEntry_information_Item) {
        _cached_encoder_for_FamilyEntry_information_Item = $._encode_choice<
            FamilyEntry_information_Item
        >(
            {
                attributeType: _encode_AttributeType,
                attribute: _encode_Attribute,
            },
            $.BER
        );
    }
    return _cached_encoder_for_FamilyEntry_information_Item(value, elGetter);
}

/**
 * @summary FamilyEntry
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FamilyEntry ::= SEQUENCE {
 *   rdn            RelativeDistinguishedName,
 *   information    SEQUENCE OF CHOICE {
 *     attributeType  AttributeType,
 *     attribute      Attribute{{SupportedAttributes}},
 *     ...},
 *   family-info    SEQUENCE SIZE (1..MAX) OF FamilyEntries OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class FamilyEntry {
    constructor(
        /**
         * @summary `rdn`.
         * @public
         * @readonly
         */
        readonly rdn: RelativeDistinguishedName,
        /**
         * @summary `information`.
         * @public
         * @readonly
         */
        readonly information: FamilyEntry_information_Item[],
        /**
         * @summary `family_info`.
         * @public
         * @readonly
         */
        readonly family_info: OPTIONAL<FamilyEntries[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a FamilyEntry
     * @description
     *
     * This takes an `object` and converts it to a `FamilyEntry`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `FamilyEntry`.
     * @returns {FamilyEntry}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof FamilyEntry]: FamilyEntry[_K] }>
    ): FamilyEntry {
        return new FamilyEntry(
            _o.rdn,
            _o.information,
            _o.family_info,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of FamilyEntry
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_FamilyEntry: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "rdn",
        false,
        $.hasTag(_TagClass.universal, 17),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "information",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "family-info",
        true,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of FamilyEntry
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_FamilyEntry: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of FamilyEntry
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_FamilyEntry: $.ComponentSpec[] = [];
let _cached_decoder_for_FamilyEntry: $.ASN1Decoder<FamilyEntry> | null = null;
let _cached_encoder_for_FamilyEntry: $.ASN1Encoder<FamilyEntry> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FamilyEntry
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FamilyEntry} The decoded data structure.
 */
export function _decode_FamilyEntry(el: _Element) {
    if (!_cached_decoder_for_FamilyEntry) {
        _cached_decoder_for_FamilyEntry = function (el: _Element): FamilyEntry {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let rdn!: RelativeDistinguishedName;
            let information!: FamilyEntry_information_Item[];
            let family_info: OPTIONAL<FamilyEntries[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                rdn: (_el: _Element): void => {
                    rdn = _decode_RelativeDistinguishedName(_el);
                },
                information: (_el: _Element): void => {
                    information = $._decodeSequenceOf<
                        FamilyEntry_information_Item
                    >(() => _decode_FamilyEntry_information_Item)(_el);
                },
                "family-info": (_el: _Element): void => {
                    family_info = $._decodeSequenceOf<FamilyEntries>(
                        () => _decode_FamilyEntries
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_FamilyEntry,
                _extension_additions_list_spec_for_FamilyEntry,
                _root_component_type_list_2_spec_for_FamilyEntry,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new FamilyEntry(
                /* SEQUENCE_CONSTRUCTOR_CALL */ rdn,
                information,
                family_info,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_FamilyEntry(el);
}
/**
 * @summary Encodes a(n) FamilyEntry into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FamilyEntry, encoded as an ASN.1 Element.
 */
export function _encode_FamilyEntry(
    value: FamilyEntry,
    elGetter: $.ASN1Encoder<FamilyEntry>
) {
    if (!_cached_encoder_for_FamilyEntry) {
        _cached_encoder_for_FamilyEntry = function (
            value: FamilyEntry,
            elGetter: $.ASN1Encoder<FamilyEntry>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_RelativeDistinguishedName(
                                value.rdn,
                                $.BER
                            ),
                            /* REQUIRED   */ $._encodeSequenceOf<
                                FamilyEntry_information_Item
                            >(
                                () => _encode_FamilyEntry_information_Item,
                                $.BER
                            )(value.information, $.BER),
                            /* IF_ABSENT  */ value.family_info === undefined
                                ? undefined
                                : $._encodeSequenceOf<FamilyEntries>(
                                      () => _encode_FamilyEntries,
                                      $.BER
                                  )(value.family_info, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_FamilyEntry(value, elGetter);
}

/**
 * @summary FamilyEntries
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FamilyEntries ::= SEQUENCE {
 *   family-class   OBJECT-CLASS.&id, -- structural object class value
 *   familyEntries  SEQUENCE OF FamilyEntry,
 *   ... }
 * ```
 *
 * @class
 */
export class FamilyEntries {
    constructor(
        /**
         * @summary `family_class`.
         * @public
         * @readonly
         */
        readonly family_class: OBJECT_IDENTIFIER,
        /**
         * @summary `familyEntries`.
         * @public
         * @readonly
         */
        readonly familyEntries: FamilyEntry[],
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a FamilyEntries
     * @description
     *
     * This takes an `object` and converts it to a `FamilyEntries`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `FamilyEntries`.
     * @returns {FamilyEntries}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof FamilyEntries]: FamilyEntries[_K] }>
    ): FamilyEntries {
        return new FamilyEntries(
            _o.family_class,
            _o.familyEntries,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of FamilyEntries
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_FamilyEntries: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "family-class",
        false,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyEntries",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of FamilyEntries
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_FamilyEntries: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of FamilyEntries
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_FamilyEntries: $.ComponentSpec[] = [];
let _cached_decoder_for_FamilyEntries: $.ASN1Decoder<
    FamilyEntries
> | null = null;
let _cached_encoder_for_FamilyEntries: $.ASN1Encoder<
    FamilyEntries
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FamilyEntries
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FamilyEntries} The decoded data structure.
 */
export function _decode_FamilyEntries(el: _Element) {
    if (!_cached_decoder_for_FamilyEntries) {
        _cached_decoder_for_FamilyEntries = function (
            el: _Element
        ): FamilyEntries {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 2) {
                throw new _ConstructionError(
                    "FamilyEntries contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "family-class";
            sequence[1].name = "familyEntries";
            let family_class!: OBJECT_IDENTIFIER;
            let familyEntries!: FamilyEntry[];
            family_class = $._decodeObjectIdentifier(sequence[0]);
            familyEntries = $._decodeSequenceOf<FamilyEntry>(
                () => _decode_FamilyEntry
            )(sequence[1]);
            return new FamilyEntries(
                family_class,
                familyEntries,
                sequence.slice(2)
            );
        };
    }
    return _cached_decoder_for_FamilyEntries(el);
}
/**
 * @summary Encodes a(n) FamilyEntries into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FamilyEntries, encoded as an ASN.1 Element.
 */
export function _encode_FamilyEntries(
    value: FamilyEntries,
    elGetter: $.ASN1Encoder<FamilyEntries>
) {
    if (!_cached_encoder_for_FamilyEntries) {
        _cached_encoder_for_FamilyEntries = function (
            value: FamilyEntries,
            elGetter: $.ASN1Encoder<FamilyEntries>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encodeObjectIdentifier(
                                value.family_class,
                                $.BER
                            ),
                            /* REQUIRED   */ $._encodeSequenceOf<FamilyEntry>(
                                () => _encode_FamilyEntry,
                                $.BER
                            )(value.familyEntries, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_FamilyEntries(value, elGetter);
}

/**
 * @summary id_at_family_information
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * id-at-family-information OBJECT IDENTIFIER ::= {id-at 64}
 * ```
 *
 * @constant
 */
export const id_at_family_information: OBJECT_IDENTIFIER = new _OID(
    [64],
    id_at
);

/**
 * @summary family_information
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * family-information ATTRIBUTE ::= {
 *   WITH SYNTAX  FamilyEntries
 *   USAGE        directoryOperation
 *   ID           id-at-family-information }
 * ```
 *
 * @constant
 * @type {ATTRIBUTE}
 * @implements {ATTRIBUTE}
 */
export const family_information: ATTRIBUTE = {
    class: "ATTRIBUTE",
    decoderFor: {
        "&Type": _decode_FamilyEntries,
    },
    encoderFor: {
        "&Type": _encode_FamilyEntries,
    },
    "&usage":
        InformationFramework.AttributeUsage_directoryOperation /* OBJECT_FIELD_SETTING */,
    "&id": id_at_family_information /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&Type": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&single-valued": false /* OBJECT_FIELD_SETTING DEFAULT_OBJECT_FIELD_SETTING */,
    "&collective": false /* OBJECT_FIELD_SETTING DEFAULT_OBJECT_FIELD_SETTING */,
    "&dummy": false /* OBJECT_FIELD_SETTING DEFAULT_OBJECT_FIELD_SETTING */,
    "&no-user-modification": false /* OBJECT_FIELD_SETTING DEFAULT_OBJECT_FIELD_SETTING */,
    "&obsolete": false /* OBJECT_FIELD_SETTING DEFAULT_OBJECT_FIELD_SETTING */,
};

/**
 * @summary SimpleCredentials_validity_time1
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SimpleCredentials-validity-time1 ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type SimpleCredentials_validity_time1 =
    | { utc: UTCTime } /* CHOICE_ALT_ROOT */
    | { gt: GeneralizedTime } /* CHOICE_ALT_ROOT */;
let _cached_decoder_for_SimpleCredentials_validity_time1: $.ASN1Decoder<
    SimpleCredentials_validity_time1
> | null = null;
let _cached_encoder_for_SimpleCredentials_validity_time1: $.ASN1Encoder<
    SimpleCredentials_validity_time1
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SimpleCredentials_validity_time1
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SimpleCredentials_validity_time1} The decoded data structure.
 */
export function _decode_SimpleCredentials_validity_time1(el: _Element) {
    if (!_cached_decoder_for_SimpleCredentials_validity_time1) {
        _cached_decoder_for_SimpleCredentials_validity_time1 = $._decode_inextensible_choice<
            SimpleCredentials_validity_time1
        >({
            "UNIVERSAL 23": ["utc", $._decodeUTCTime],
            "UNIVERSAL 24": ["gt", $._decodeGeneralizedTime],
        });
    }
    return _cached_decoder_for_SimpleCredentials_validity_time1(el);
}
/**
 * @summary Encodes a(n) SimpleCredentials_validity_time1 into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SimpleCredentials_validity_time1, encoded as an ASN.1 Element.
 */
export function _encode_SimpleCredentials_validity_time1(
    value: SimpleCredentials_validity_time1,
    elGetter: $.ASN1Encoder<SimpleCredentials_validity_time1>
) {
    if (!_cached_encoder_for_SimpleCredentials_validity_time1) {
        _cached_encoder_for_SimpleCredentials_validity_time1 = $._encode_choice<
            SimpleCredentials_validity_time1
        >(
            {
                utc: $._encodeUTCTime,
                gt: $._encodeGeneralizedTime,
            },
            $.BER
        );
    }
    return _cached_encoder_for_SimpleCredentials_validity_time1(
        value,
        elGetter
    );
}

/**
 * @summary SimpleCredentials_validity_time2
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SimpleCredentials-validity-time2 ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type SimpleCredentials_validity_time2 =
    | { utc: UTCTime } /* CHOICE_ALT_ROOT */
    | { gt: GeneralizedTime } /* CHOICE_ALT_ROOT */;
let _cached_decoder_for_SimpleCredentials_validity_time2: $.ASN1Decoder<
    SimpleCredentials_validity_time2
> | null = null;
let _cached_encoder_for_SimpleCredentials_validity_time2: $.ASN1Encoder<
    SimpleCredentials_validity_time2
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SimpleCredentials_validity_time2
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SimpleCredentials_validity_time2} The decoded data structure.
 */
export function _decode_SimpleCredentials_validity_time2(el: _Element) {
    if (!_cached_decoder_for_SimpleCredentials_validity_time2) {
        _cached_decoder_for_SimpleCredentials_validity_time2 = $._decode_inextensible_choice<
            SimpleCredentials_validity_time2
        >({
            "UNIVERSAL 23": ["utc", $._decodeUTCTime],
            "UNIVERSAL 24": ["gt", $._decodeGeneralizedTime],
        });
    }
    return _cached_decoder_for_SimpleCredentials_validity_time2(el);
}
/**
 * @summary Encodes a(n) SimpleCredentials_validity_time2 into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SimpleCredentials_validity_time2, encoded as an ASN.1 Element.
 */
export function _encode_SimpleCredentials_validity_time2(
    value: SimpleCredentials_validity_time2,
    elGetter: $.ASN1Encoder<SimpleCredentials_validity_time2>
) {
    if (!_cached_encoder_for_SimpleCredentials_validity_time2) {
        _cached_encoder_for_SimpleCredentials_validity_time2 = $._encode_choice<
            SimpleCredentials_validity_time2
        >(
            {
                utc: $._encodeUTCTime,
                gt: $._encodeGeneralizedTime,
            },
            $.BER
        );
    }
    return _cached_encoder_for_SimpleCredentials_validity_time2(
        value,
        elGetter
    );
}

/**
 * @summary SimpleCredentials_validity
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SimpleCredentials-validity ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class SimpleCredentials_validity {
    constructor(
        /**
         * @summary `time1`.
         * @public
         * @readonly
         */
        readonly time1: OPTIONAL<SimpleCredentials_validity_time1>,
        /**
         * @summary `time2`.
         * @public
         * @readonly
         */
        readonly time2: OPTIONAL<SimpleCredentials_validity_time2>,
        /**
         * @summary `random1`.
         * @public
         * @readonly
         */
        readonly random1: OPTIONAL<BIT_STRING>,
        /**
         * @summary `random2`.
         * @public
         * @readonly
         */
        readonly random2: OPTIONAL<BIT_STRING>
    ) {}

    /**
     * @summary Restructures an object into a SimpleCredentials_validity
     * @description
     *
     * This takes an `object` and converts it to a `SimpleCredentials_validity`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SimpleCredentials_validity`.
     * @returns {SimpleCredentials_validity}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof SimpleCredentials_validity]: SimpleCredentials_validity[_K];
            }
        >
    ): SimpleCredentials_validity {
        return new SimpleCredentials_validity(
            _o.time1,
            _o.time2,
            _o.random1,
            _o.random2
        );
    }
}
/**
 * @summary The Leading Root Component Types of SimpleCredentials_validity
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SimpleCredentials_validity: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "time1",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "time2",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "random1",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "random2",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SimpleCredentials_validity
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SimpleCredentials_validity: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of SimpleCredentials_validity
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SimpleCredentials_validity: $.ComponentSpec[] = [];
let _cached_decoder_for_SimpleCredentials_validity: $.ASN1Decoder<
    SimpleCredentials_validity
> | null = null;
let _cached_encoder_for_SimpleCredentials_validity: $.ASN1Encoder<
    SimpleCredentials_validity
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SimpleCredentials_validity
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SimpleCredentials_validity} The decoded data structure.
 */
export function _decode_SimpleCredentials_validity(el: _Element) {
    if (!_cached_decoder_for_SimpleCredentials_validity) {
        _cached_decoder_for_SimpleCredentials_validity = function (
            el: _Element
        ): SimpleCredentials_validity {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let time1: OPTIONAL<SimpleCredentials_validity_time1>;
            let time2: OPTIONAL<SimpleCredentials_validity_time2>;
            let random1: OPTIONAL<BIT_STRING>;
            let random2: OPTIONAL<BIT_STRING>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                time1: (_el: _Element): void => {
                    time1 = $._decode_explicit<
                        SimpleCredentials_validity_time1
                    >(() => _decode_SimpleCredentials_validity_time1)(_el);
                },
                time2: (_el: _Element): void => {
                    time2 = $._decode_explicit<
                        SimpleCredentials_validity_time2
                    >(() => _decode_SimpleCredentials_validity_time2)(_el);
                },
                random1: (_el: _Element): void => {
                    random1 = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                random2: (_el: _Element): void => {
                    random2 = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SimpleCredentials_validity,
                _extension_additions_list_spec_for_SimpleCredentials_validity,
                _root_component_type_list_2_spec_for_SimpleCredentials_validity,
                undefined
            );
            return new SimpleCredentials_validity(
                /* SET_CONSTRUCTOR_CALL */ time1,
                time2,
                random1,
                random2
            );
        };
    }
    return _cached_decoder_for_SimpleCredentials_validity(el);
}
/**
 * @summary Encodes a(n) SimpleCredentials_validity into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SimpleCredentials_validity, encoded as an ASN.1 Element.
 */
export function _encode_SimpleCredentials_validity(
    value: SimpleCredentials_validity,
    elGetter: $.ASN1Encoder<SimpleCredentials_validity>
) {
    if (!_cached_encoder_for_SimpleCredentials_validity) {
        _cached_encoder_for_SimpleCredentials_validity = function (
            value: SimpleCredentials_validity,
            elGetter: $.ASN1Encoder<SimpleCredentials_validity>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat([
                        /* IF_ABSENT  */ value.time1 === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  0,
                                  () =>
                                      _encode_SimpleCredentials_validity_time1,
                                  $.BER
                              )(value.time1, $.BER),
                        /* IF_ABSENT  */ value.time2 === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  1,
                                  () =>
                                      _encode_SimpleCredentials_validity_time2,
                                  $.BER
                              )(value.time2, $.BER),
                        /* IF_ABSENT  */ value.random1 === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  2,
                                  () => $._encodeBitString,
                                  $.BER
                              )(value.random1, $.BER),
                        /* IF_ABSENT  */ value.random2 === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  3,
                                  () => $._encodeBitString,
                                  $.BER
                              )(value.random2, $.BER),
                    ])
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SimpleCredentials_validity(value, elGetter);
}

/**
 * @summary SimpleCredentials_password
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SimpleCredentials-password ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type SimpleCredentials_password =
    | { unprotected: OCTET_STRING } /* CHOICE_ALT_ROOT */
    | { protected_: HASH<OCTET_STRING> } /* CHOICE_ALT_ROOT */
    | { userPwd: UserPwd } /* CHOICE_ALT_EXT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_SimpleCredentials_password: $.ASN1Decoder<
    SimpleCredentials_password
> | null = null;
let _cached_encoder_for_SimpleCredentials_password: $.ASN1Encoder<
    SimpleCredentials_password
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SimpleCredentials_password
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SimpleCredentials_password} The decoded data structure.
 */
export function _decode_SimpleCredentials_password(el: _Element) {
    if (!_cached_decoder_for_SimpleCredentials_password) {
        _cached_decoder_for_SimpleCredentials_password = $._decode_extensible_choice<
            SimpleCredentials_password
        >({
            "UNIVERSAL 4": ["unprotected", $._decodeOctetString],
            "UNIVERSAL 16": [
                "protected_",
                _get_decoder_for_HASH<OCTET_STRING>($._decodeOctetString),
            ],
            "CONTEXT 0": [
                "userPwd",
                $._decode_explicit<UserPwd>(() => _decode_UserPwd),
            ],
        });
    }
    return _cached_decoder_for_SimpleCredentials_password(el);
}
/**
 * @summary Encodes a(n) SimpleCredentials_password into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SimpleCredentials_password, encoded as an ASN.1 Element.
 */
export function _encode_SimpleCredentials_password(
    value: SimpleCredentials_password,
    elGetter: $.ASN1Encoder<SimpleCredentials_password>
) {
    if (!_cached_encoder_for_SimpleCredentials_password) {
        _cached_encoder_for_SimpleCredentials_password = $._encode_choice<
            SimpleCredentials_password
        >(
            {
                unprotected: $._encodeOctetString,
                protected_: _get_encoder_for_HASH<OCTET_STRING>(
                    $._encodeOctetString
                ),
                userPwd: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => _encode_UserPwd,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_SimpleCredentials_password(value, elGetter);
}

/**
 * @summary SimpleCredentials
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SimpleCredentials ::= SEQUENCE {
 *   name      [0]  DistinguishedName,
 *   validity  [1]  SET {
 *     time1     [0]  CHOICE {
 *       utc            UTCTime,
 *       gt             GeneralizedTime} OPTIONAL,
 *     time2     [1]  CHOICE {
 *       utc            UTCTime,
 *       gt             GeneralizedTime} OPTIONAL,
 *     random1   [2]  BIT STRING OPTIONAL,
 *     random2   [3]  BIT STRING OPTIONAL} OPTIONAL,
 *   password  [2]  CHOICE {
 *     unprotected    OCTET STRING,
 *     protected      HASH{OCTET STRING},
 *     ...,
 *     userPwd   [0]  UserPwd } OPTIONAL }
 * ```
 *
 * @class
 */
export class SimpleCredentials {
    constructor(
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: DistinguishedName,
        /**
         * @summary `validity`.
         * @public
         * @readonly
         */
        readonly validity: OPTIONAL<SimpleCredentials_validity>,
        /**
         * @summary `password`.
         * @public
         * @readonly
         */
        readonly password: OPTIONAL<SimpleCredentials_password>
    ) {}

    /**
     * @summary Restructures an object into a SimpleCredentials
     * @description
     *
     * This takes an `object` and converts it to a `SimpleCredentials`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SimpleCredentials`.
     * @returns {SimpleCredentials}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof SimpleCredentials]: SimpleCredentials[_K] }>
    ): SimpleCredentials {
        return new SimpleCredentials(_o.name, _o.validity, _o.password);
    }
}
/**
 * @summary The Leading Root Component Types of SimpleCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SimpleCredentials: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "name",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "validity",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "password",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SimpleCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SimpleCredentials: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of SimpleCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SimpleCredentials: $.ComponentSpec[] = [];
let _cached_decoder_for_SimpleCredentials: $.ASN1Decoder<
    SimpleCredentials
> | null = null;
let _cached_encoder_for_SimpleCredentials: $.ASN1Encoder<
    SimpleCredentials
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SimpleCredentials
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SimpleCredentials} The decoded data structure.
 */
export function _decode_SimpleCredentials(el: _Element) {
    if (!_cached_decoder_for_SimpleCredentials) {
        _cached_decoder_for_SimpleCredentials = function (
            el: _Element
        ): SimpleCredentials {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let name!: DistinguishedName;
            let validity: OPTIONAL<SimpleCredentials_validity>;
            let password: OPTIONAL<SimpleCredentials_password>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                name: (_el: _Element): void => {
                    name = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                validity: (_el: _Element): void => {
                    validity = $._decode_explicit<SimpleCredentials_validity>(
                        () => _decode_SimpleCredentials_validity
                    )(_el);
                },
                password: (_el: _Element): void => {
                    password = $._decode_explicit<SimpleCredentials_password>(
                        () => _decode_SimpleCredentials_password
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SimpleCredentials,
                _extension_additions_list_spec_for_SimpleCredentials,
                _root_component_type_list_2_spec_for_SimpleCredentials,
                undefined
            );
            return new SimpleCredentials(
                /* SEQUENCE_CONSTRUCTOR_CALL */ name,
                validity,
                password
            );
        };
    }
    return _cached_decoder_for_SimpleCredentials(el);
}
/**
 * @summary Encodes a(n) SimpleCredentials into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SimpleCredentials, encoded as an ASN.1 Element.
 */
export function _encode_SimpleCredentials(
    value: SimpleCredentials,
    elGetter: $.ASN1Encoder<SimpleCredentials>
) {
    if (!_cached_encoder_for_SimpleCredentials) {
        _cached_encoder_for_SimpleCredentials = function (
            value: SimpleCredentials,
            elGetter: $.ASN1Encoder<SimpleCredentials>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat([
                        /* REQUIRED   */ $._encode_explicit(
                            _TagClass.context,
                            0,
                            () => _encode_DistinguishedName,
                            $.BER
                        )(value.name, $.BER),
                        /* IF_ABSENT  */ value.validity === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  1,
                                  () => _encode_SimpleCredentials_validity,
                                  $.BER
                              )(value.validity, $.BER),
                        /* IF_ABSENT  */ value.password === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  2,
                                  () => _encode_SimpleCredentials_password,
                                  $.BER
                              )(value.password, $.BER),
                    ])
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SimpleCredentials(value, elGetter);
}

/**
 * @summary Time
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * Time  ::=  CHOICE {
 *   utcTime          UTCTime,
 *   generalizedTime  GeneralizedTime,
 *   ... }
 * ```
 */
export type Time =
    | { utcTime: UTCTime } /* CHOICE_ALT_ROOT */
    | { generalizedTime: GeneralizedTime } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_Time: $.ASN1Decoder<Time> | null = null;
let _cached_encoder_for_Time: $.ASN1Encoder<Time> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) Time
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {Time} The decoded data structure.
 */
export function _decode_Time(el: _Element) {
    if (!_cached_decoder_for_Time) {
        _cached_decoder_for_Time = $._decode_extensible_choice<Time>({
            "UNIVERSAL 23": ["utcTime", $._decodeUTCTime],
            "UNIVERSAL 24": ["generalizedTime", $._decodeGeneralizedTime],
        });
    }
    return _cached_decoder_for_Time(el);
}
/**
 * @summary Encodes a(n) Time into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The Time, encoded as an ASN.1 Element.
 */
export function _encode_Time(value: Time, elGetter: $.ASN1Encoder<Time>) {
    if (!_cached_encoder_for_Time) {
        _cached_encoder_for_Time = $._encode_choice<Time>(
            {
                utcTime: $._encodeUTCTime,
                generalizedTime: $._encodeGeneralizedTime,
            },
            $.BER
        );
    }
    return _cached_encoder_for_Time(value, elGetter);
}

/**
 * @summary TokenContent
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * TokenContent ::= SEQUENCE {
 *   algorithm  [0]  AlgorithmIdentifier{{SupportedAlgorithms}},
 *   name       [1]  DistinguishedName,
 *   time       [2]  Time,
 *   random     [3]  BIT STRING,
 *   response   [4]  BIT STRING OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class TokenContent {
    constructor(
        /**
         * @summary `algorithm`.
         * @public
         * @readonly
         */
        readonly algorithm: AlgorithmIdentifier,
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: DistinguishedName,
        /**
         * @summary `time`.
         * @public
         * @readonly
         */
        readonly time: Time,
        /**
         * @summary `random`.
         * @public
         * @readonly
         */
        readonly random: BIT_STRING,
        /**
         * @summary `response`.
         * @public
         * @readonly
         */
        readonly response: OPTIONAL<BIT_STRING>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a TokenContent
     * @description
     *
     * This takes an `object` and converts it to a `TokenContent`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `TokenContent`.
     * @returns {TokenContent}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof TokenContent]: TokenContent[_K] }>
    ): TokenContent {
        return new TokenContent(
            _o.algorithm,
            _o.name,
            _o.time,
            _o.random,
            _o.response,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of TokenContent
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_TokenContent: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "algorithm",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "name",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "time",
        false,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "random",
        false,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "response",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of TokenContent
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_TokenContent: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of TokenContent
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_TokenContent: $.ComponentSpec[] = [];
let _cached_decoder_for_TokenContent: $.ASN1Decoder<TokenContent> | null = null;
let _cached_encoder_for_TokenContent: $.ASN1Encoder<TokenContent> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) TokenContent
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {TokenContent} The decoded data structure.
 */
export function _decode_TokenContent(el: _Element) {
    if (!_cached_decoder_for_TokenContent) {
        _cached_decoder_for_TokenContent = function (
            el: _Element
        ): TokenContent {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let algorithm!: AlgorithmIdentifier;
            let name!: DistinguishedName;
            let time!: Time;
            let random!: BIT_STRING;
            let response: OPTIONAL<BIT_STRING>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                algorithm: (_el: _Element): void => {
                    algorithm = $._decode_explicit<AlgorithmIdentifier>(
                        () => _decode_AlgorithmIdentifier
                    )(_el);
                },
                name: (_el: _Element): void => {
                    name = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                time: (_el: _Element): void => {
                    time = $._decode_explicit<Time>(() => _decode_Time)(_el);
                },
                random: (_el: _Element): void => {
                    random = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                response: (_el: _Element): void => {
                    response = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_TokenContent,
                _extension_additions_list_spec_for_TokenContent,
                _root_component_type_list_2_spec_for_TokenContent,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new TokenContent(
                /* SEQUENCE_CONSTRUCTOR_CALL */ algorithm,
                name,
                time,
                random,
                response,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_TokenContent(el);
}
/**
 * @summary Encodes a(n) TokenContent into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The TokenContent, encoded as an ASN.1 Element.
 */
export function _encode_TokenContent(
    value: TokenContent,
    elGetter: $.ASN1Encoder<TokenContent>
) {
    if (!_cached_encoder_for_TokenContent) {
        _cached_encoder_for_TokenContent = function (
            value: TokenContent,
            elGetter: $.ASN1Encoder<TokenContent>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_AlgorithmIdentifier,
                                $.BER
                            )(value.algorithm, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_DistinguishedName,
                                $.BER
                            )(value.name, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                2,
                                () => _encode_Time,
                                $.BER
                            )(value.time, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                3,
                                () => $._encodeBitString,
                                $.BER
                            )(value.random, $.BER),
                            /* IF_ABSENT  */ value.response === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.response, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_TokenContent(value, elGetter);
}

export type Token<> = SIGNED<TokenContent>; // DefinedType
let _cached_decoder_for_Token: $.ASN1Decoder<Token> | null = null;
let _cached_encoder_for_Token: $.ASN1Encoder<Token> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) Token
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {Token} The decoded data structure.
 */
export function _decode_Token(el: _Element) {
    if (!_cached_decoder_for_Token) {
        _cached_decoder_for_Token = _get_decoder_for_SIGNED<TokenContent>(
            _decode_TokenContent
        );
    }
    return _cached_decoder_for_Token(el);
}
/**
 * @summary Encodes a(n) Token into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The Token, encoded as an ASN.1 Element.
 */
export function _encode_Token(value: Token, elGetter: $.ASN1Encoder<Token>) {
    if (!_cached_encoder_for_Token) {
        _cached_encoder_for_Token = _get_encoder_for_SIGNED<TokenContent>(
            _encode_TokenContent
        );
    }
    return _cached_encoder_for_Token(value, elGetter);
}

/**
 * @summary StrongCredentials
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * StrongCredentials ::= SET {
 *   certification-path          [0]  CertificationPath OPTIONAL,
 *   bind-token                  [1]  Token,
 *   name                        [2]  DistinguishedName OPTIONAL,
 *   attributeCertificationPath  [3]  AttributeCertificationPath OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class StrongCredentials {
    constructor(
        /**
         * @summary `certification_path`.
         * @public
         * @readonly
         */
        readonly certification_path: OPTIONAL<CertificationPath>,
        /**
         * @summary `bind_token`.
         * @public
         * @readonly
         */
        readonly bind_token: Token,
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: OPTIONAL<DistinguishedName>,
        /**
         * @summary `attributeCertificationPath`.
         * @public
         * @readonly
         */
        readonly attributeCertificationPath: OPTIONAL<
            AttributeCertificationPath
        >,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a StrongCredentials
     * @description
     *
     * This takes an `object` and converts it to a `StrongCredentials`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `StrongCredentials`.
     * @returns {StrongCredentials}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof StrongCredentials]: StrongCredentials[_K] }>
    ): StrongCredentials {
        return new StrongCredentials(
            _o.certification_path,
            _o.bind_token,
            _o.name,
            _o.attributeCertificationPath,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of StrongCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_StrongCredentials: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "certification-path",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "bind-token",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "name",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "attributeCertificationPath",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of StrongCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_StrongCredentials: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of StrongCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_StrongCredentials: $.ComponentSpec[] = [];
let _cached_decoder_for_StrongCredentials: $.ASN1Decoder<
    StrongCredentials
> | null = null;
let _cached_encoder_for_StrongCredentials: $.ASN1Encoder<
    StrongCredentials
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) StrongCredentials
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {StrongCredentials} The decoded data structure.
 */
export function _decode_StrongCredentials(el: _Element) {
    if (!_cached_decoder_for_StrongCredentials) {
        _cached_decoder_for_StrongCredentials = function (
            el: _Element
        ): StrongCredentials {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let certification_path: OPTIONAL<CertificationPath>;
            let bind_token!: Token;
            let name: OPTIONAL<DistinguishedName>;
            let attributeCertificationPath: OPTIONAL<AttributeCertificationPath>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                "certification-path": (_el: _Element): void => {
                    certification_path = $._decode_explicit<CertificationPath>(
                        () => _decode_CertificationPath
                    )(_el);
                },
                "bind-token": (_el: _Element): void => {
                    bind_token = $._decode_explicit<Token>(() => _decode_Token)(
                        _el
                    );
                },
                name: (_el: _Element): void => {
                    name = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                attributeCertificationPath: (_el: _Element): void => {
                    attributeCertificationPath = $._decode_explicit<
                        AttributeCertificationPath
                    >(() => _decode_AttributeCertificationPath)(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_StrongCredentials,
                _extension_additions_list_spec_for_StrongCredentials,
                _root_component_type_list_2_spec_for_StrongCredentials,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new StrongCredentials(
                /* SET_CONSTRUCTOR_CALL */ certification_path,
                bind_token,
                name,
                attributeCertificationPath,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_StrongCredentials(el);
}
/**
 * @summary Encodes a(n) StrongCredentials into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The StrongCredentials, encoded as an ASN.1 Element.
 */
export function _encode_StrongCredentials(
    value: StrongCredentials,
    elGetter: $.ASN1Encoder<StrongCredentials>
) {
    if (!_cached_encoder_for_StrongCredentials) {
        _cached_encoder_for_StrongCredentials = function (
            value: StrongCredentials,
            elGetter: $.ASN1Encoder<StrongCredentials>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.certification_path ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => _encode_CertificationPath,
                                      $.BER
                                  )(value.certification_path, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_Token,
                                $.BER
                            )(value.bind_token, $.BER),
                            /* IF_ABSENT  */ value.name === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.name, $.BER),
                            /* IF_ABSENT  */ value.attributeCertificationPath ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => _encode_AttributeCertificationPath,
                                      $.BER
                                  )(value.attributeCertificationPath, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_StrongCredentials(value, elGetter);
}

/**
 * @summary SpkmCredentials
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SpkmCredentials  ::=  CHOICE {
 *   req            [0]  SPKM-REQ,
 *   rep            [1]  SPKM-REP-TI,
 *   ... }
 * ```
 */
export type SpkmCredentials =
    | { req: SPKM_REQ } /* CHOICE_ALT_ROOT */
    | { rep: SPKM_REP_TI } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_SpkmCredentials: $.ASN1Decoder<
    SpkmCredentials
> | null = null;
let _cached_encoder_for_SpkmCredentials: $.ASN1Encoder<
    SpkmCredentials
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SpkmCredentials
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SpkmCredentials} The decoded data structure.
 */
export function _decode_SpkmCredentials(el: _Element) {
    if (!_cached_decoder_for_SpkmCredentials) {
        _cached_decoder_for_SpkmCredentials = $._decode_extensible_choice<
            SpkmCredentials
        >({
            "CONTEXT 0": [
                "req",
                $._decode_explicit<SPKM_REQ>(() => _decode_SPKM_REQ),
            ],
            "CONTEXT 1": [
                "rep",
                $._decode_explicit<SPKM_REP_TI>(() => _decode_SPKM_REP_TI),
            ],
        });
    }
    return _cached_decoder_for_SpkmCredentials(el);
}
/**
 * @summary Encodes a(n) SpkmCredentials into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SpkmCredentials, encoded as an ASN.1 Element.
 */
export function _encode_SpkmCredentials(
    value: SpkmCredentials,
    elGetter: $.ASN1Encoder<SpkmCredentials>
) {
    if (!_cached_encoder_for_SpkmCredentials) {
        _cached_encoder_for_SpkmCredentials = $._encode_choice<SpkmCredentials>(
            {
                req: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => _encode_SPKM_REQ,
                    $.BER
                ),
                rep: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => _encode_SPKM_REP_TI,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_SpkmCredentials(value, elGetter);
}

/**
 * @summary ub_saslMechanism
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ub-saslMechanism INTEGER ::= 20
 * ```
 *
 * @constant
 */
export const ub_saslMechanism: INTEGER = 20;

/**
 * @summary SaslCredentials
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SaslCredentials ::= SEQUENCE {
 *   mechanism    [0]  DirectoryString{ub-saslMechanism},
 *   credentials  [1]  OCTET STRING OPTIONAL,
 *   saslAbort    [2]  BOOLEAN DEFAULT FALSE,
 *   ... }
 * ```
 *
 * @class
 */
export class SaslCredentials {
    constructor(
        /**
         * @summary `mechanism`.
         * @public
         * @readonly
         */
        readonly mechanism: DirectoryString,
        /**
         * @summary `credentials`.
         * @public
         * @readonly
         */
        readonly credentials: OPTIONAL<OCTET_STRING>,
        /**
         * @summary `saslAbort`.
         * @public
         * @readonly
         */
        readonly saslAbort: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a SaslCredentials
     * @description
     *
     * This takes an `object` and converts it to a `SaslCredentials`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SaslCredentials`.
     * @returns {SaslCredentials}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof SaslCredentials]: SaslCredentials[_K] }>
    ): SaslCredentials {
        return new SaslCredentials(
            _o.mechanism,
            _o.credentials,
            _o.saslAbort,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `saslAbort`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_saslAbort() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of SaslCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SaslCredentials: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "mechanism",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "credentials",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "saslAbort",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SaslCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SaslCredentials: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of SaslCredentials
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SaslCredentials: $.ComponentSpec[] = [];
let _cached_decoder_for_SaslCredentials: $.ASN1Decoder<
    SaslCredentials
> | null = null;
let _cached_encoder_for_SaslCredentials: $.ASN1Encoder<
    SaslCredentials
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SaslCredentials
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SaslCredentials} The decoded data structure.
 */
export function _decode_SaslCredentials(el: _Element) {
    if (!_cached_decoder_for_SaslCredentials) {
        _cached_decoder_for_SaslCredentials = function (
            el: _Element
        ): SaslCredentials {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let mechanism!: DirectoryString;
            let credentials: OPTIONAL<OCTET_STRING>;
            let saslAbort: OPTIONAL<BOOLEAN> =
                SaslCredentials._default_value_for_saslAbort;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                mechanism: (_el: _Element): void => {
                    mechanism = $._decode_explicit<DirectoryString>(
                        () => _decode_DirectoryString
                    )(_el);
                },
                credentials: (_el: _Element): void => {
                    credentials = $._decode_explicit<OCTET_STRING>(
                        () => $._decodeOctetString
                    )(_el);
                },
                saslAbort: (_el: _Element): void => {
                    saslAbort = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SaslCredentials,
                _extension_additions_list_spec_for_SaslCredentials,
                _root_component_type_list_2_spec_for_SaslCredentials,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new SaslCredentials(
                /* SEQUENCE_CONSTRUCTOR_CALL */ mechanism,
                credentials,
                saslAbort,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_SaslCredentials(el);
}
/**
 * @summary Encodes a(n) SaslCredentials into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SaslCredentials, encoded as an ASN.1 Element.
 */
export function _encode_SaslCredentials(
    value: SaslCredentials,
    elGetter: $.ASN1Encoder<SaslCredentials>
) {
    if (!_cached_encoder_for_SaslCredentials) {
        _cached_encoder_for_SaslCredentials = function (
            value: SaslCredentials,
            elGetter: $.ASN1Encoder<SaslCredentials>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_DirectoryString,
                                $.BER
                            )(value.mechanism, $.BER),
                            /* IF_ABSENT  */ value.credentials === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => $._encodeOctetString,
                                      $.BER
                                  )(value.credentials, $.BER),
                            /* IF_DEFAULT */ value.saslAbort === undefined ||
                            $.deepEq(
                                value.saslAbort,
                                SaslCredentials._default_value_for_saslAbort
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.saslAbort, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SaslCredentials(value, elGetter);
}

/**
 * @summary Credentials
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * Credentials  ::=  CHOICE {
 *   simple             [0]  SimpleCredentials,
 *   strong             [1]  StrongCredentials,
 *   externalProcedure  [2]  EXTERNAL,
 *   spkm               [3]  SpkmCredentials,
 *   sasl               [4]  SaslCredentials,
 *   ... }
 * ```
 */
export type Credentials =
    | { simple: SimpleCredentials } /* CHOICE_ALT_ROOT */
    | { strong: StrongCredentials } /* CHOICE_ALT_ROOT */
    | { externalProcedure: EXTERNAL } /* CHOICE_ALT_ROOT */
    | { spkm: SpkmCredentials } /* CHOICE_ALT_ROOT */
    | { sasl: SaslCredentials } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_Credentials: $.ASN1Decoder<Credentials> | null = null;
let _cached_encoder_for_Credentials: $.ASN1Encoder<Credentials> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) Credentials
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {Credentials} The decoded data structure.
 */
export function _decode_Credentials(el: _Element) {
    if (!_cached_decoder_for_Credentials) {
        _cached_decoder_for_Credentials = $._decode_extensible_choice<
            Credentials
        >({
            "CONTEXT 0": [
                "simple",
                $._decode_explicit<SimpleCredentials>(
                    () => _decode_SimpleCredentials
                ),
            ],
            "CONTEXT 1": [
                "strong",
                $._decode_explicit<StrongCredentials>(
                    () => _decode_StrongCredentials
                ),
            ],
            "CONTEXT 2": [
                "externalProcedure",
                $._decode_explicit<EXTERNAL>(() => $._decodeExternal),
            ],
            "CONTEXT 3": [
                "spkm",
                $._decode_explicit<SpkmCredentials>(
                    () => _decode_SpkmCredentials
                ),
            ],
            "CONTEXT 4": [
                "sasl",
                $._decode_explicit<SaslCredentials>(
                    () => _decode_SaslCredentials
                ),
            ],
        });
    }
    return _cached_decoder_for_Credentials(el);
}
/**
 * @summary Encodes a(n) Credentials into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The Credentials, encoded as an ASN.1 Element.
 */
export function _encode_Credentials(
    value: Credentials,
    elGetter: $.ASN1Encoder<Credentials>
) {
    if (!_cached_encoder_for_Credentials) {
        _cached_encoder_for_Credentials = $._encode_choice<Credentials>(
            {
                simple: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => _encode_SimpleCredentials,
                    $.BER
                ),
                strong: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => _encode_StrongCredentials,
                    $.BER
                ),
                externalProcedure: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => $._encodeExternal,
                    $.BER
                ),
                spkm: $._encode_explicit(
                    _TagClass.context,
                    3,
                    () => _encode_SpkmCredentials,
                    $.BER
                ),
                sasl: $._encode_explicit(
                    _TagClass.context,
                    4,
                    () => _encode_SaslCredentials,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_Credentials(value, elGetter);
}

/**
 * @summary Versions
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * Versions  ::=  BIT STRING {v1(0), v2(1)}
 * ```
 */
export type Versions = BIT_STRING;
/**
 * @summary Versions_v1
 * @constant
 */
export const Versions_v1: number = 0; /* LONG_NAMED_BIT */
/**
 * @summary Versions_v2
 * @constant
 */
export const Versions_v2: number = 1; /* LONG_NAMED_BIT */
let _cached_decoder_for_Versions: $.ASN1Decoder<Versions> | null = null;
let _cached_encoder_for_Versions: $.ASN1Encoder<Versions> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) Versions
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {Versions} The decoded data structure.
 */
export function _decode_Versions(el: _Element) {
    if (!_cached_decoder_for_Versions) {
        _cached_decoder_for_Versions = $._decodeBitString;
    }
    return _cached_decoder_for_Versions(el);
}
/**
 * @summary Encodes a(n) Versions into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The Versions, encoded as an ASN.1 Element.
 */
export function _encode_Versions(
    value: Versions,
    elGetter: $.ASN1Encoder<Versions>
) {
    if (!_cached_encoder_for_Versions) {
        _cached_encoder_for_Versions = $._encodeBitString;
    }
    return _cached_encoder_for_Versions(value, elGetter);
}

/**
 * @summary DirectoryBindArgument
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * DirectoryBindArgument ::= SET {
 *   credentials  [0]  Credentials OPTIONAL,
 *   versions     [1]  Versions DEFAULT {v1},
 *   ... }
 * ```
 *
 * @class
 */
export class DirectoryBindArgument {
    constructor(
        /**
         * @summary `credentials`.
         * @public
         * @readonly
         */
        readonly credentials: OPTIONAL<Credentials>,
        /**
         * @summary `versions`.
         * @public
         * @readonly
         */
        readonly versions: OPTIONAL<Versions>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a DirectoryBindArgument
     * @description
     *
     * This takes an `object` and converts it to a `DirectoryBindArgument`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `DirectoryBindArgument`.
     * @returns {DirectoryBindArgument}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof DirectoryBindArgument]: DirectoryBindArgument[_K] }
        >
    ): DirectoryBindArgument {
        return new DirectoryBindArgument(
            _o.credentials,
            _o.versions,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `versions`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_versions() {
        return (() => {
            const _ret = new Uint8ClampedArray(Math.max(0, 1));
            _ret[Versions_v1] = TRUE_BIT;
            return _ret;
        })();
    }
}
/**
 * @summary The Leading Root Component Types of DirectoryBindArgument
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_DirectoryBindArgument: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "credentials",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "versions",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of DirectoryBindArgument
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_DirectoryBindArgument: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of DirectoryBindArgument
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_DirectoryBindArgument: $.ComponentSpec[] = [];
let _cached_decoder_for_DirectoryBindArgument: $.ASN1Decoder<
    DirectoryBindArgument
> | null = null;
let _cached_encoder_for_DirectoryBindArgument: $.ASN1Encoder<
    DirectoryBindArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) DirectoryBindArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {DirectoryBindArgument} The decoded data structure.
 */
export function _decode_DirectoryBindArgument(el: _Element) {
    if (!_cached_decoder_for_DirectoryBindArgument) {
        _cached_decoder_for_DirectoryBindArgument = function (
            el: _Element
        ): DirectoryBindArgument {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let credentials: OPTIONAL<Credentials>;
            let versions: OPTIONAL<Versions> =
                DirectoryBindArgument._default_value_for_versions;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                credentials: (_el: _Element): void => {
                    credentials = $._decode_explicit<Credentials>(
                        () => _decode_Credentials
                    )(_el);
                },
                versions: (_el: _Element): void => {
                    versions = $._decode_explicit<Versions>(
                        () => _decode_Versions
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_DirectoryBindArgument,
                _extension_additions_list_spec_for_DirectoryBindArgument,
                _root_component_type_list_2_spec_for_DirectoryBindArgument,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new DirectoryBindArgument(
                /* SET_CONSTRUCTOR_CALL */ credentials,
                versions,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_DirectoryBindArgument(el);
}
/**
 * @summary Encodes a(n) DirectoryBindArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The DirectoryBindArgument, encoded as an ASN.1 Element.
 */
export function _encode_DirectoryBindArgument(
    value: DirectoryBindArgument,
    elGetter: $.ASN1Encoder<DirectoryBindArgument>
) {
    if (!_cached_encoder_for_DirectoryBindArgument) {
        _cached_encoder_for_DirectoryBindArgument = function (
            value: DirectoryBindArgument,
            elGetter: $.ASN1Encoder<DirectoryBindArgument>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.credentials === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => _encode_Credentials,
                                      $.BER
                                  )(value.credentials, $.BER),
                            /* IF_DEFAULT */ value.versions === undefined ||
                            $.deepEq(
                                value.versions,
                                DirectoryBindArgument._default_value_for_versions
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_Versions,
                                      $.BER
                                  )(value.versions, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_DirectoryBindArgument(value, elGetter);
}

/**
 * @summary PwdResponseValue_warning
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PwdResponseValue-warning ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type PwdResponseValue_warning =
    | { timeLeft: INTEGER } /* CHOICE_ALT_ROOT */
    | { graceRemaining: INTEGER } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_PwdResponseValue_warning: $.ASN1Decoder<
    PwdResponseValue_warning
> | null = null;
let _cached_encoder_for_PwdResponseValue_warning: $.ASN1Encoder<
    PwdResponseValue_warning
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PwdResponseValue_warning
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PwdResponseValue_warning} The decoded data structure.
 */
export function _decode_PwdResponseValue_warning(el: _Element) {
    if (!_cached_decoder_for_PwdResponseValue_warning) {
        _cached_decoder_for_PwdResponseValue_warning = $._decode_extensible_choice<
            PwdResponseValue_warning
        >({
            "CONTEXT 0": [
                "timeLeft",
                $._decode_explicit<INTEGER>(() => $._decodeInteger),
            ],
            "CONTEXT 1": [
                "graceRemaining",
                $._decode_explicit<INTEGER>(() => $._decodeInteger),
            ],
        });
    }
    return _cached_decoder_for_PwdResponseValue_warning(el);
}
/**
 * @summary Encodes a(n) PwdResponseValue_warning into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PwdResponseValue_warning, encoded as an ASN.1 Element.
 */
export function _encode_PwdResponseValue_warning(
    value: PwdResponseValue_warning,
    elGetter: $.ASN1Encoder<PwdResponseValue_warning>
) {
    if (!_cached_encoder_for_PwdResponseValue_warning) {
        _cached_encoder_for_PwdResponseValue_warning = $._encode_choice<
            PwdResponseValue_warning
        >(
            {
                timeLeft: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => $._encodeInteger,
                    $.BER
                ),
                graceRemaining: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => $._encodeInteger,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_PwdResponseValue_warning(value, elGetter);
}

/**
 * @summary PwdResponseValue_error
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PwdResponseValue-error ::= ENUMERATED { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @enum {number}
 */
export enum _enum_for_PwdResponseValue_error {
    passwordExpired = 0,
    changeAfterReset = 1,
}
/**
 * @summary PwdResponseValue_error
 */
export type PwdResponseValue_error =
    | _enum_for_PwdResponseValue_error
    | ENUMERATED;
/**
 * @summary PwdResponseValue_error_passwordExpired
 * @constant
 * @type {number}
 */
export const PwdResponseValue_error_passwordExpired: PwdResponseValue_error = 0; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary PwdResponseValue_error_changeAfterReset
 * @constant
 * @type {number}
 */
export const PwdResponseValue_error_changeAfterReset: PwdResponseValue_error = 1; /* LONG_NAMED_ENUMERATED_VALUE */
let _cached_decoder_for_PwdResponseValue_error: $.ASN1Decoder<
    PwdResponseValue_error
> | null = null;
let _cached_encoder_for_PwdResponseValue_error: $.ASN1Encoder<
    PwdResponseValue_error
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PwdResponseValue_error
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PwdResponseValue_error} The decoded data structure.
 */
export function _decode_PwdResponseValue_error(el: _Element) {
    if (!_cached_decoder_for_PwdResponseValue_error) {
        _cached_decoder_for_PwdResponseValue_error = $._decodeEnumerated;
    }
    return _cached_decoder_for_PwdResponseValue_error(el);
}
/**
 * @summary Encodes a(n) PwdResponseValue_error into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PwdResponseValue_error, encoded as an ASN.1 Element.
 */
export function _encode_PwdResponseValue_error(
    value: PwdResponseValue_error,
    elGetter: $.ASN1Encoder<PwdResponseValue_error>
) {
    if (!_cached_encoder_for_PwdResponseValue_error) {
        _cached_encoder_for_PwdResponseValue_error = $._encodeEnumerated;
    }
    return _cached_encoder_for_PwdResponseValue_error(value, elGetter);
}

/**
 * @summary PwdResponseValue
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PwdResponseValue ::= SEQUENCE {
 *   warning CHOICE {
 *     timeLeft        [0]  INTEGER (0..MAX),
 *     graceRemaining  [1]  INTEGER (0..MAX),
 *     ... } OPTIONAL,
 *   error   ENUMERATED {
 *     passwordExpired  (0),
 *     changeAfterReset (1),
 *     ... } OPTIONAL}
 * ```
 *
 * @class
 */
export class PwdResponseValue {
    constructor(
        /**
         * @summary `warning`.
         * @public
         * @readonly
         */
        readonly warning: OPTIONAL<PwdResponseValue_warning>,
        /**
         * @summary `error`.
         * @public
         * @readonly
         */
        readonly error: OPTIONAL<PwdResponseValue_error>
    ) {}

    /**
     * @summary Restructures an object into a PwdResponseValue
     * @description
     *
     * This takes an `object` and converts it to a `PwdResponseValue`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `PwdResponseValue`.
     * @returns {PwdResponseValue}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof PwdResponseValue]: PwdResponseValue[_K] }>
    ): PwdResponseValue {
        return new PwdResponseValue(_o.warning, _o.error);
    }

    /**
     * @summary The enum used as the type of the component `error`
     * @public
     * @static
     */

    public static _enum_for_error = _enum_for_PwdResponseValue_error;
}
/**
 * @summary The Leading Root Component Types of PwdResponseValue
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_PwdResponseValue: $.ComponentSpec[] = [
    new $.ComponentSpec("warning", true, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "error",
        true,
        $.hasTag(_TagClass.universal, 10),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of PwdResponseValue
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_PwdResponseValue: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of PwdResponseValue
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_PwdResponseValue: $.ComponentSpec[] = [];
let _cached_decoder_for_PwdResponseValue: $.ASN1Decoder<
    PwdResponseValue
> | null = null;
let _cached_encoder_for_PwdResponseValue: $.ASN1Encoder<
    PwdResponseValue
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PwdResponseValue
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PwdResponseValue} The decoded data structure.
 */
export function _decode_PwdResponseValue(el: _Element) {
    if (!_cached_decoder_for_PwdResponseValue) {
        _cached_decoder_for_PwdResponseValue = function (
            el: _Element
        ): PwdResponseValue {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let warning: OPTIONAL<PwdResponseValue_warning>;
            let error: OPTIONAL<PwdResponseValue_error>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                warning: (_el: _Element): void => {
                    warning = _decode_PwdResponseValue_warning(_el);
                },
                error: (_el: _Element): void => {
                    error = _decode_PwdResponseValue_error(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_PwdResponseValue,
                _extension_additions_list_spec_for_PwdResponseValue,
                _root_component_type_list_2_spec_for_PwdResponseValue,
                undefined
            );
            return new PwdResponseValue(
                /* SEQUENCE_CONSTRUCTOR_CALL */ warning,
                error
            );
        };
    }
    return _cached_decoder_for_PwdResponseValue(el);
}
/**
 * @summary Encodes a(n) PwdResponseValue into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PwdResponseValue, encoded as an ASN.1 Element.
 */
export function _encode_PwdResponseValue(
    value: PwdResponseValue,
    elGetter: $.ASN1Encoder<PwdResponseValue>
) {
    if (!_cached_encoder_for_PwdResponseValue) {
        _cached_encoder_for_PwdResponseValue = function (
            value: PwdResponseValue,
            elGetter: $.ASN1Encoder<PwdResponseValue>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat([
                        /* IF_ABSENT  */ value.warning === undefined
                            ? undefined
                            : _encode_PwdResponseValue_warning(
                                  value.warning,
                                  $.BER
                              ),
                        /* IF_ABSENT  */ value.error === undefined
                            ? undefined
                            : _encode_PwdResponseValue_error(
                                  value.error,
                                  $.BER
                              ),
                    ])
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_PwdResponseValue(value, elGetter);
}

/**
 * @summary DirectoryBindResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * DirectoryBindResult ::= SET {
 *   credentials       [0]  Credentials OPTIONAL,
 *   versions          [1]  Versions DEFAULT {v1},
 *   ...,
 *   pwdResponseValue  [2]  PwdResponseValue OPTIONAL }
 * ```
 *
 * @class
 */
export class DirectoryBindResult {
    constructor(
        /**
         * @summary `credentials`.
         * @public
         * @readonly
         */
        readonly credentials: OPTIONAL<Credentials>,
        /**
         * @summary `versions`.
         * @public
         * @readonly
         */
        readonly versions: OPTIONAL<Versions>,
        /**
         * @summary `pwdResponseValue`.
         * @public
         * @readonly
         */
        readonly pwdResponseValue: OPTIONAL<PwdResponseValue>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a DirectoryBindResult
     * @description
     *
     * This takes an `object` and converts it to a `DirectoryBindResult`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `DirectoryBindResult`.
     * @returns {DirectoryBindResult}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof DirectoryBindResult]: DirectoryBindResult[_K] }
        >
    ): DirectoryBindResult {
        return new DirectoryBindResult(
            _o.credentials,
            _o.versions,
            _o.pwdResponseValue,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `versions`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_versions() {
        return (() => {
            const _ret = new Uint8ClampedArray(Math.max(0, 1));
            _ret[Versions_v1] = TRUE_BIT;
            return _ret;
        })();
    }
}
/**
 * @summary The Leading Root Component Types of DirectoryBindResult
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_DirectoryBindResult: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "credentials",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "versions",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of DirectoryBindResult
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_DirectoryBindResult: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of DirectoryBindResult
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_DirectoryBindResult: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "pwdResponseValue",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
let _cached_decoder_for_DirectoryBindResult: $.ASN1Decoder<
    DirectoryBindResult
> | null = null;
let _cached_encoder_for_DirectoryBindResult: $.ASN1Encoder<
    DirectoryBindResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) DirectoryBindResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {DirectoryBindResult} The decoded data structure.
 */
export function _decode_DirectoryBindResult(el: _Element) {
    if (!_cached_decoder_for_DirectoryBindResult) {
        _cached_decoder_for_DirectoryBindResult = function (
            el: _Element
        ): DirectoryBindResult {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let credentials: OPTIONAL<Credentials>;
            let versions: OPTIONAL<Versions> =
                DirectoryBindResult._default_value_for_versions;
            let pwdResponseValue: OPTIONAL<PwdResponseValue>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                credentials: (_el: _Element): void => {
                    credentials = $._decode_explicit<Credentials>(
                        () => _decode_Credentials
                    )(_el);
                },
                versions: (_el: _Element): void => {
                    versions = $._decode_explicit<Versions>(
                        () => _decode_Versions
                    )(_el);
                },
                pwdResponseValue: (_el: _Element): void => {
                    pwdResponseValue = $._decode_explicit<PwdResponseValue>(
                        () => _decode_PwdResponseValue
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_DirectoryBindResult,
                _extension_additions_list_spec_for_DirectoryBindResult,
                _root_component_type_list_2_spec_for_DirectoryBindResult,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new DirectoryBindResult(
                /* SET_CONSTRUCTOR_CALL */ credentials,
                versions,
                pwdResponseValue,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_DirectoryBindResult(el);
}
/**
 * @summary Encodes a(n) DirectoryBindResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The DirectoryBindResult, encoded as an ASN.1 Element.
 */
export function _encode_DirectoryBindResult(
    value: DirectoryBindResult,
    elGetter: $.ASN1Encoder<DirectoryBindResult>
) {
    if (!_cached_encoder_for_DirectoryBindResult) {
        _cached_encoder_for_DirectoryBindResult = function (
            value: DirectoryBindResult,
            elGetter: $.ASN1Encoder<DirectoryBindResult>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.credentials === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => _encode_Credentials,
                                      $.BER
                                  )(value.credentials, $.BER),
                            /* IF_DEFAULT */ value.versions === undefined ||
                            $.deepEq(
                                value.versions,
                                DirectoryBindResult._default_value_for_versions
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_Versions,
                                      $.BER
                                  )(value.versions, $.BER),
                        ],
                        [
                            /* IF_ABSENT  */ value.pwdResponseValue ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_PwdResponseValue,
                                      $.BER
                                  )(value.pwdResponseValue, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_DirectoryBindResult(value, elGetter);
}

/**
 * @summary directoryBind
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * directoryBind OPERATION ::= {
 *   ARGUMENT  DirectoryBindArgument
 *   RESULT    DirectoryBindResult
 *   ERRORS    {directoryBindError} }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const directoryBind: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_DirectoryBindArgument,
        "&ResultType": _decode_DirectoryBindResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_DirectoryBindArgument,
        "&ResultType": _encode_DirectoryBindResult,
    },
    "&Errors": undefined,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary ServiceProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceProblem  ::=  INTEGER {
 *   busy                         (1),
 *   unavailable                  (2),
 *   unwillingToPerform           (3),
 *   chainingRequired             (4),
 *   unableToProceed              (5),
 *   invalidReference             (6),
 *   timeLimitExceeded            (7),
 *   administrativeLimitExceeded  (8),
 *   loopDetected                 (9),
 *   unavailableCriticalExtension (10),
 *   outOfScope                   (11),
 *   ditError                     (12),
 *   invalidQueryReference        (13),
 *   requestedServiceNotAvailable (14),
 *   unsupportedMatchingUse       (15),
 *   ambiguousKeyAttributes       (16),
 *   saslBindInProgress           (17),
 *   notSupportedByLDAP           (18) }
 * ```
 */
export type ServiceProblem = INTEGER;
/**
 * @summary ServiceProblem_busy
 * @constant
 * @type {number}
 */
export const ServiceProblem_busy: ServiceProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_unavailable
 * @constant
 * @type {number}
 */
export const ServiceProblem_unavailable: ServiceProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_unwillingToPerform
 * @constant
 * @type {number}
 */
export const ServiceProblem_unwillingToPerform: ServiceProblem = 3; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_chainingRequired
 * @constant
 * @type {number}
 */
export const ServiceProblem_chainingRequired: ServiceProblem = 4; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_unableToProceed
 * @constant
 * @type {number}
 */
export const ServiceProblem_unableToProceed: ServiceProblem = 5; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_invalidReference
 * @constant
 * @type {number}
 */
export const ServiceProblem_invalidReference: ServiceProblem = 6; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_timeLimitExceeded
 * @constant
 * @type {number}
 */
export const ServiceProblem_timeLimitExceeded: ServiceProblem = 7; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_administrativeLimitExceeded
 * @constant
 * @type {number}
 */
export const ServiceProblem_administrativeLimitExceeded: ServiceProblem = 8; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_loopDetected
 * @constant
 * @type {number}
 */
export const ServiceProblem_loopDetected: ServiceProblem = 9; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_unavailableCriticalExtension
 * @constant
 * @type {number}
 */
export const ServiceProblem_unavailableCriticalExtension: ServiceProblem = 10; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_outOfScope
 * @constant
 * @type {number}
 */
export const ServiceProblem_outOfScope: ServiceProblem = 11; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_ditError
 * @constant
 * @type {number}
 */
export const ServiceProblem_ditError: ServiceProblem = 12; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_invalidQueryReference
 * @constant
 * @type {number}
 */
export const ServiceProblem_invalidQueryReference: ServiceProblem = 13; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_requestedServiceNotAvailable
 * @constant
 * @type {number}
 */
export const ServiceProblem_requestedServiceNotAvailable: ServiceProblem = 14; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_unsupportedMatchingUse
 * @constant
 * @type {number}
 */
export const ServiceProblem_unsupportedMatchingUse: ServiceProblem = 15; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_ambiguousKeyAttributes
 * @constant
 * @type {number}
 */
export const ServiceProblem_ambiguousKeyAttributes: ServiceProblem = 16; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_saslBindInProgress
 * @constant
 * @type {number}
 */
export const ServiceProblem_saslBindInProgress: ServiceProblem = 17; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceProblem_notSupportedByLDAP
 * @constant
 * @type {number}
 */
export const ServiceProblem_notSupportedByLDAP: ServiceProblem = 18; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_ServiceProblem: $.ASN1Decoder<
    ServiceProblem
> | null = null;
let _cached_encoder_for_ServiceProblem: $.ASN1Encoder<
    ServiceProblem
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceProblem} The decoded data structure.
 */
export function _decode_ServiceProblem(el: _Element) {
    if (!_cached_decoder_for_ServiceProblem) {
        _cached_decoder_for_ServiceProblem = $._decodeInteger;
    }
    return _cached_decoder_for_ServiceProblem(el);
}
/**
 * @summary Encodes a(n) ServiceProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceProblem, encoded as an ASN.1 Element.
 */
export function _encode_ServiceProblem(
    value: ServiceProblem,
    elGetter: $.ASN1Encoder<ServiceProblem>
) {
    if (!_cached_encoder_for_ServiceProblem) {
        _cached_encoder_for_ServiceProblem = $._encodeInteger;
    }
    return _cached_encoder_for_ServiceProblem(value, elGetter);
}

/**
 * @summary SecurityProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SecurityProblem  ::=  INTEGER {
 *   inappropriateAuthentication     (1),
 *   invalidCredentials              (2),
 *   insufficientAccessRights        (3),
 *   invalidSignature                (4),
 *   protectionRequired              (5),
 *   noInformation                   (6),
 *   blockedCredentials              (7),
 *   -- invalidQOPMatch              (8), obsolete
 *   spkmError                       (9),
 *   unsupportedAuthenticationMethod (10),
 *   passwordExpired                 (11),
 *   inappropriateAlgorithms         (12) }
 * ```
 */
export type SecurityProblem = INTEGER;
/**
 * @summary SecurityProblem_inappropriateAuthentication
 * @constant
 * @type {number}
 */
export const SecurityProblem_inappropriateAuthentication: SecurityProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_invalidCredentials
 * @constant
 * @type {number}
 */
export const SecurityProblem_invalidCredentials: SecurityProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_insufficientAccessRights
 * @constant
 * @type {number}
 */
export const SecurityProblem_insufficientAccessRights: SecurityProblem = 3; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_invalidSignature
 * @constant
 * @type {number}
 */
export const SecurityProblem_invalidSignature: SecurityProblem = 4; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_protectionRequired
 * @constant
 * @type {number}
 */
export const SecurityProblem_protectionRequired: SecurityProblem = 5; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_noInformation
 * @constant
 * @type {number}
 */
export const SecurityProblem_noInformation: SecurityProblem = 6; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_blockedCredentials
 * @constant
 * @type {number}
 */
export const SecurityProblem_blockedCredentials: SecurityProblem = 7; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_spkmError
 * @constant
 * @type {number}
 */
export const SecurityProblem_spkmError: SecurityProblem = 9; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_unsupportedAuthenticationMethod
 * @constant
 * @type {number}
 */
export const SecurityProblem_unsupportedAuthenticationMethod: SecurityProblem = 10; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_passwordExpired
 * @constant
 * @type {number}
 */
export const SecurityProblem_passwordExpired: SecurityProblem = 11; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SecurityProblem_inappropriateAlgorithms
 * @constant
 * @type {number}
 */
export const SecurityProblem_inappropriateAlgorithms: SecurityProblem = 12; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_SecurityProblem: $.ASN1Decoder<
    SecurityProblem
> | null = null;
let _cached_encoder_for_SecurityProblem: $.ASN1Encoder<
    SecurityProblem
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SecurityProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SecurityProblem} The decoded data structure.
 */
export function _decode_SecurityProblem(el: _Element) {
    if (!_cached_decoder_for_SecurityProblem) {
        _cached_decoder_for_SecurityProblem = $._decodeInteger;
    }
    return _cached_decoder_for_SecurityProblem(el);
}
/**
 * @summary Encodes a(n) SecurityProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SecurityProblem, encoded as an ASN.1 Element.
 */
export function _encode_SecurityProblem(
    value: SecurityProblem,
    elGetter: $.ASN1Encoder<SecurityProblem>
) {
    if (!_cached_encoder_for_SecurityProblem) {
        _cached_encoder_for_SecurityProblem = $._encodeInteger;
    }
    return _cached_encoder_for_SecurityProblem(value, elGetter);
}

/**
 * @summary ProtectionRequest
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ProtectionRequest  ::=  INTEGER {none(0), signed(1)}
 * ```
 */
export type ProtectionRequest = INTEGER;
/**
 * @summary ProtectionRequest_none
 * @constant
 * @type {number}
 */
export const ProtectionRequest_none: ProtectionRequest = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ProtectionRequest_signed
 * @constant
 * @type {number}
 */
export const ProtectionRequest_signed: ProtectionRequest = 1; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_ProtectionRequest: $.ASN1Decoder<
    ProtectionRequest
> | null = null;
let _cached_encoder_for_ProtectionRequest: $.ASN1Encoder<
    ProtectionRequest
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ProtectionRequest
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ProtectionRequest} The decoded data structure.
 */
export function _decode_ProtectionRequest(el: _Element) {
    if (!_cached_decoder_for_ProtectionRequest) {
        _cached_decoder_for_ProtectionRequest = $._decodeInteger;
    }
    return _cached_decoder_for_ProtectionRequest(el);
}
/**
 * @summary Encodes a(n) ProtectionRequest into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ProtectionRequest, encoded as an ASN.1 Element.
 */
export function _encode_ProtectionRequest(
    value: ProtectionRequest,
    elGetter: $.ASN1Encoder<ProtectionRequest>
) {
    if (!_cached_encoder_for_ProtectionRequest) {
        _cached_encoder_for_ProtectionRequest = $._encodeInteger;
    }
    return _cached_encoder_for_ProtectionRequest(value, elGetter);
}

/**
 * @summary ErrorProtectionRequest
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ErrorProtectionRequest  ::=  INTEGER {none(0), signed(1)}
 * ```
 */
export type ErrorProtectionRequest = INTEGER;
/**
 * @summary ErrorProtectionRequest_none
 * @constant
 * @type {number}
 */
export const ErrorProtectionRequest_none: ErrorProtectionRequest = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ErrorProtectionRequest_signed
 * @constant
 * @type {number}
 */
export const ErrorProtectionRequest_signed: ErrorProtectionRequest = 1; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_ErrorProtectionRequest: $.ASN1Decoder<
    ErrorProtectionRequest
> | null = null;
let _cached_encoder_for_ErrorProtectionRequest: $.ASN1Encoder<
    ErrorProtectionRequest
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ErrorProtectionRequest
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ErrorProtectionRequest} The decoded data structure.
 */
export function _decode_ErrorProtectionRequest(el: _Element) {
    if (!_cached_decoder_for_ErrorProtectionRequest) {
        _cached_decoder_for_ErrorProtectionRequest = $._decodeInteger;
    }
    return _cached_decoder_for_ErrorProtectionRequest(el);
}
/**
 * @summary Encodes a(n) ErrorProtectionRequest into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ErrorProtectionRequest, encoded as an ASN.1 Element.
 */
export function _encode_ErrorProtectionRequest(
    value: ErrorProtectionRequest,
    elGetter: $.ASN1Encoder<ErrorProtectionRequest>
) {
    if (!_cached_encoder_for_ErrorProtectionRequest) {
        _cached_encoder_for_ErrorProtectionRequest = $._encodeInteger;
    }
    return _cached_encoder_for_ErrorProtectionRequest(value, elGetter);
}

/**
 * @summary SecurityParameters
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SecurityParameters ::= SET {
 *   certification-path          [0]  CertificationPath OPTIONAL,
 *   name                        [1]  DistinguishedName OPTIONAL,
 *   time                        [2]  Time OPTIONAL,
 *   random                      [3]  BIT STRING OPTIONAL,
 *   target                      [4]  ProtectionRequest OPTIONAL,
 *   --                          [5]  Not to be used
 *   operationCode               [6]  Code OPTIONAL,
 *   --                          [7]  Not to be used
 *   errorProtection             [8]  ErrorProtectionRequest OPTIONAL,
 *   errorCode                   [9]  Code OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class SecurityParameters {
    constructor(
        /**
         * @summary `certification_path`.
         * @public
         * @readonly
         */
        readonly certification_path: OPTIONAL<CertificationPath>,
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: OPTIONAL<DistinguishedName>,
        /**
         * @summary `time`.
         * @public
         * @readonly
         */
        readonly time: OPTIONAL<Time>,
        /**
         * @summary `random`.
         * @public
         * @readonly
         */
        readonly random: OPTIONAL<BIT_STRING>,
        /**
         * @summary `target`.
         * @public
         * @readonly
         */
        readonly target: OPTIONAL<ProtectionRequest>,
        /**
         * @summary `operationCode`.
         * @public
         * @readonly
         */
        readonly operationCode: OPTIONAL<Code>,
        /**
         * @summary `errorProtection`.
         * @public
         * @readonly
         */
        readonly errorProtection: OPTIONAL<ErrorProtectionRequest>,
        /**
         * @summary `errorCode`.
         * @public
         * @readonly
         */
        readonly errorCode: OPTIONAL<Code>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a SecurityParameters
     * @description
     *
     * This takes an `object` and converts it to a `SecurityParameters`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SecurityParameters`.
     * @returns {SecurityParameters}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof SecurityParameters]: SecurityParameters[_K] }
        >
    ): SecurityParameters {
        return new SecurityParameters(
            _o.certification_path,
            _o.name,
            _o.time,
            _o.random,
            _o.target,
            _o.operationCode,
            _o.errorProtection,
            _o.errorCode,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of SecurityParameters
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SecurityParameters: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "certification-path",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "name",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "time",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "random",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "target",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationCode",
        true,
        $.hasTag(_TagClass.context, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "errorProtection",
        true,
        $.hasTag(_TagClass.context, 8),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "errorCode",
        true,
        $.hasTag(_TagClass.context, 9),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SecurityParameters
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SecurityParameters: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of SecurityParameters
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SecurityParameters: $.ComponentSpec[] = [];
let _cached_decoder_for_SecurityParameters: $.ASN1Decoder<
    SecurityParameters
> | null = null;
let _cached_encoder_for_SecurityParameters: $.ASN1Encoder<
    SecurityParameters
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SecurityParameters
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SecurityParameters} The decoded data structure.
 */
export function _decode_SecurityParameters(el: _Element) {
    if (!_cached_decoder_for_SecurityParameters) {
        _cached_decoder_for_SecurityParameters = function (
            el: _Element
        ): SecurityParameters {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let certification_path: OPTIONAL<CertificationPath>;
            let name: OPTIONAL<DistinguishedName>;
            let time: OPTIONAL<Time>;
            let random: OPTIONAL<BIT_STRING>;
            let target: OPTIONAL<ProtectionRequest>;
            let operationCode: OPTIONAL<Code>;
            let errorProtection: OPTIONAL<ErrorProtectionRequest>;
            let errorCode: OPTIONAL<Code>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                "certification-path": (_el: _Element): void => {
                    certification_path = $._decode_explicit<CertificationPath>(
                        () => _decode_CertificationPath
                    )(_el);
                },
                name: (_el: _Element): void => {
                    name = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                time: (_el: _Element): void => {
                    time = $._decode_explicit<Time>(() => _decode_Time)(_el);
                },
                random: (_el: _Element): void => {
                    random = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                target: (_el: _Element): void => {
                    target = $._decode_explicit<ProtectionRequest>(
                        () => _decode_ProtectionRequest
                    )(_el);
                },
                operationCode: (_el: _Element): void => {
                    operationCode = $._decode_explicit<Code>(
                        () => _decode_Code
                    )(_el);
                },
                errorProtection: (_el: _Element): void => {
                    errorProtection = $._decode_explicit<
                        ErrorProtectionRequest
                    >(() => _decode_ErrorProtectionRequest)(_el);
                },
                errorCode: (_el: _Element): void => {
                    errorCode = $._decode_explicit<Code>(() => _decode_Code)(
                        _el
                    );
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SecurityParameters,
                _extension_additions_list_spec_for_SecurityParameters,
                _root_component_type_list_2_spec_for_SecurityParameters,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new SecurityParameters(
                /* SET_CONSTRUCTOR_CALL */ certification_path,
                name,
                time,
                random,
                target,
                operationCode,
                errorProtection,
                errorCode,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_SecurityParameters(el);
}
/**
 * @summary Encodes a(n) SecurityParameters into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SecurityParameters, encoded as an ASN.1 Element.
 */
export function _encode_SecurityParameters(
    value: SecurityParameters,
    elGetter: $.ASN1Encoder<SecurityParameters>
) {
    if (!_cached_encoder_for_SecurityParameters) {
        _cached_encoder_for_SecurityParameters = function (
            value: SecurityParameters,
            elGetter: $.ASN1Encoder<SecurityParameters>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.certification_path ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => _encode_CertificationPath,
                                      $.BER
                                  )(value.certification_path, $.BER),
                            /* IF_ABSENT  */ value.name === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.name, $.BER),
                            /* IF_ABSENT  */ value.time === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_Time,
                                      $.BER
                                  )(value.time, $.BER),
                            /* IF_ABSENT  */ value.random === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.random, $.BER),
                            /* IF_ABSENT  */ value.target === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () => _encode_ProtectionRequest,
                                      $.BER
                                  )(value.target, $.BER),
                            /* IF_ABSENT  */ value.operationCode === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      6,
                                      () => _encode_Code,
                                      $.BER
                                  )(value.operationCode, $.BER),
                            /* IF_ABSENT  */ value.errorProtection === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      8,
                                      () => _encode_ErrorProtectionRequest,
                                      $.BER
                                  )(value.errorProtection, $.BER),
                            /* IF_ABSENT  */ value.errorCode === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      9,
                                      () => _encode_Code,
                                      $.BER
                                  )(value.errorCode, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SecurityParameters(value, elGetter);
}

/**
 * @summary DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * DirectoryBindError-OPTIONALLY-PROTECTED-Parameter1-error ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error =
    | { serviceError: ServiceProblem } /* CHOICE_ALT_ROOT */
    | { securityError: SecurityProblem } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error: $.ASN1Decoder<
    DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
> | null = null;
let _cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error: $.ASN1Encoder<
    DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error} The decoded data structure.
 */
export function _decode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error(
    el: _Element
) {
    if (
        !_cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
    ) {
        _cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error = $._decode_extensible_choice<
            DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
        >({
            "CONTEXT 1": [
                "serviceError",
                $._decode_explicit<ServiceProblem>(
                    () => _decode_ServiceProblem
                ),
            ],
            "CONTEXT 2": [
                "securityError",
                $._decode_explicit<SecurityProblem>(
                    () => _decode_SecurityProblem
                ),
            ],
        });
    }
    return _cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error(
        el
    );
}
/**
 * @summary Encodes a(n) DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error, encoded as an ASN.1 Element.
 */
export function _encode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error(
    value: DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error,
    elGetter: $.ASN1Encoder<
        DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
    >
) {
    if (
        !_cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
    ) {
        _cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error = $._encode_choice<
            DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error
        >(
            {
                serviceError: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => _encode_ServiceProblem,
                    $.BER
                ),
                securityError: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => _encode_SecurityProblem,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error(
        value,
        elGetter
    );
}

/**
 * @summary DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * DirectoryBindError-OPTIONALLY-PROTECTED-Parameter1 ::= SET {
 *   versions              [0]  Versions DEFAULT {v1},
 *   error                      CHOICE {
 *     serviceError          [1]  ServiceProblem,
 *     securityError         [2]  SecurityProblem,
 *     ...},
 *   securityParameters    [30]  SecurityParameters OPTIONAL }
 * ```
 *
 * @class
 */
export class DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 {
    constructor(
        /**
         * @summary `versions`.
         * @public
         * @readonly
         */
        readonly versions: OPTIONAL<Versions>,
        /**
         * @summary `error`.
         * @public
         * @readonly
         */
        readonly error: DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<SecurityParameters>
    ) {}

    /**
     * @summary Restructures an object into a DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
     * @description
     *
     * This takes an `object` and converts it to a `DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1`.
     * @returns {DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1]: DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1[_K];
            }
        >
    ): DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 {
        return new DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1(
            _o.versions,
            _o.error,
            _o.securityParameters
        );
    }

    /**
     * @summary Getter that returns the default value for `versions`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_versions() {
        return (() => {
            const _ret = new Uint8ClampedArray(Math.max(0, 1));
            _ret[Versions_v1] = TRUE_BIT;
            return _ret;
        })();
    }
}
/**
 * @summary The Leading Root Component Types of DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "versions",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec("error", false, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1: $.ComponentSpec[] = [];
let _cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1: $.ASN1Decoder<
    DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
> | null = null;
let _cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1: $.ASN1Encoder<
    DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1} The decoded data structure.
 */
export function _decode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1(
    el: _Element
) {
    if (
        !_cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
    ) {
        _cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 = function (
            el: _Element
        ): DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let versions: OPTIONAL<Versions> =
                DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1._default_value_for_versions;
            let error!: DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error;
            let securityParameters: OPTIONAL<SecurityParameters>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                versions: (_el: _Element): void => {
                    versions = $._decode_explicit<Versions>(
                        () => _decode_Versions
                    )(_el);
                },
                error: (_el: _Element): void => {
                    error = _decode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error(
                        _el
                    );
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1,
                _extension_additions_list_spec_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1,
                _root_component_type_list_2_spec_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1,
                undefined
            );
            return new DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 /* SET_CONSTRUCTOR_CALL */(
                versions,
                error,
                securityParameters
            );
        };
    }
    return _cached_decoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1(
        el
    );
}
/**
 * @summary Encodes a(n) DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1, encoded as an ASN.1 Element.
 */
export function _encode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1(
    value: DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1,
    elGetter: $.ASN1Encoder<DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1>
) {
    if (
        !_cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
    ) {
        _cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1 = function (
            value: DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1,
            elGetter: $.ASN1Encoder<
                DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
            >
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat([
                        /* IF_DEFAULT */ value.versions === undefined ||
                        $.deepEq(
                            value.versions,
                            DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1._default_value_for_versions
                        )
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  0,
                                  () => _encode_Versions,
                                  $.BER
                              )(value.versions, $.BER),
                        /* REQUIRED   */ _encode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1_error(
                            value.error,
                            $.BER
                        ),
                        /* IF_ABSENT  */ value.securityParameters === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  30,
                                  () => _encode_SecurityParameters,
                                  $.BER
                              )(value.securityParameters, $.BER),
                    ])
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1(
        value,
        elGetter
    );
}

/**
 * @summary directoryBindError
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * directoryBindError ERROR ::= {
 *   PARAMETER OPTIONALLY-PROTECTED {SET {
 *     versions              [0]  Versions DEFAULT {v1},
 *     error                      CHOICE {
 *       serviceError          [1]  ServiceProblem,
 *       securityError         [2]  SecurityProblem,
 *       ...},
 *     securityParameters    [30]  SecurityParameters OPTIONAL }}}
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const directoryBindError: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<
            DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
        >(_decode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<
            DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1
        >(_encode_DirectoryBindError_OPTIONALLY_PROTECTED_Parameter1),
    },
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

export type BindKeyInfo<> = ENCRYPTED<BIT_STRING>; // DefinedType
let _cached_decoder_for_BindKeyInfo: $.ASN1Decoder<BindKeyInfo> | null = null;
let _cached_encoder_for_BindKeyInfo: $.ASN1Encoder<BindKeyInfo> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) BindKeyInfo
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {BindKeyInfo} The decoded data structure.
 */
export function _decode_BindKeyInfo(el: _Element) {
    if (!_cached_decoder_for_BindKeyInfo) {
        _cached_decoder_for_BindKeyInfo = _get_decoder_for_ENCRYPTED<
            BIT_STRING
        >($._decodeBitString);
    }
    return _cached_decoder_for_BindKeyInfo(el);
}
/**
 * @summary Encodes a(n) BindKeyInfo into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The BindKeyInfo, encoded as an ASN.1 Element.
 */
export function _encode_BindKeyInfo(
    value: BindKeyInfo,
    elGetter: $.ASN1Encoder<BindKeyInfo>
) {
    if (!_cached_encoder_for_BindKeyInfo) {
        _cached_encoder_for_BindKeyInfo = _get_encoder_for_ENCRYPTED<
            BIT_STRING
        >($._encodeBitString);
    }
    return _cached_encoder_for_BindKeyInfo(value, elGetter);
}

/**
 * @summary EntryInformationSelection_attributes
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryInformationSelection-attributes ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type EntryInformationSelection_attributes =
    | { allUserAttributes: NULL } /* CHOICE_ALT_ROOT */
    | { select: AttributeType[] } /* CHOICE_ALT_ROOT */;
let _cached_decoder_for_EntryInformationSelection_attributes: $.ASN1Decoder<
    EntryInformationSelection_attributes
> | null = null;
let _cached_encoder_for_EntryInformationSelection_attributes: $.ASN1Encoder<
    EntryInformationSelection_attributes
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryInformationSelection_attributes
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryInformationSelection_attributes} The decoded data structure.
 */
export function _decode_EntryInformationSelection_attributes(el: _Element) {
    if (!_cached_decoder_for_EntryInformationSelection_attributes) {
        _cached_decoder_for_EntryInformationSelection_attributes = $._decode_inextensible_choice<
            EntryInformationSelection_attributes
        >({
            "CONTEXT 0": [
                "allUserAttributes",
                $._decode_explicit<NULL>(() => $._decodeNull),
            ],
            "CONTEXT 1": [
                "select",
                $._decode_explicit<AttributeType[]>(() =>
                    $._decodeSetOf<AttributeType>(() => _decode_AttributeType)
                ),
            ],
        });
    }
    return _cached_decoder_for_EntryInformationSelection_attributes(el);
}
/**
 * @summary Encodes a(n) EntryInformationSelection_attributes into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryInformationSelection_attributes, encoded as an ASN.1 Element.
 */
export function _encode_EntryInformationSelection_attributes(
    value: EntryInformationSelection_attributes,
    elGetter: $.ASN1Encoder<EntryInformationSelection_attributes>
) {
    if (!_cached_encoder_for_EntryInformationSelection_attributes) {
        _cached_encoder_for_EntryInformationSelection_attributes = $._encode_choice<
            EntryInformationSelection_attributes
        >(
            {
                allUserAttributes: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => $._encodeNull,
                    $.BER
                ),
                select: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () =>
                        $._encodeSetOf<AttributeType>(
                            () => _encode_AttributeType,
                            $.BER
                        ),
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_EntryInformationSelection_attributes(
        value,
        elGetter
    );
}

/**
 * @summary EntryInformationSelection_infoTypes
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryInformationSelection-infoTypes ::= INTEGER { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type EntryInformationSelection_infoTypes = INTEGER;
/**
 * @summary EntryInformationSelection_infoTypes_attributeTypesOnly
 * @constant
 * @type {number}
 */
export const EntryInformationSelection_infoTypes_attributeTypesOnly: EntryInformationSelection_infoTypes = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary EntryInformationSelection_infoTypes_attributeTypesAndValues
 * @constant
 * @type {number}
 */
export const EntryInformationSelection_infoTypes_attributeTypesAndValues: EntryInformationSelection_infoTypes = 1; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_EntryInformationSelection_infoTypes: $.ASN1Decoder<
    EntryInformationSelection_infoTypes
> | null = null;
let _cached_encoder_for_EntryInformationSelection_infoTypes: $.ASN1Encoder<
    EntryInformationSelection_infoTypes
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryInformationSelection_infoTypes
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryInformationSelection_infoTypes} The decoded data structure.
 */
export function _decode_EntryInformationSelection_infoTypes(el: _Element) {
    if (!_cached_decoder_for_EntryInformationSelection_infoTypes) {
        _cached_decoder_for_EntryInformationSelection_infoTypes =
            $._decodeInteger;
    }
    return _cached_decoder_for_EntryInformationSelection_infoTypes(el);
}
/**
 * @summary Encodes a(n) EntryInformationSelection_infoTypes into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryInformationSelection_infoTypes, encoded as an ASN.1 Element.
 */
export function _encode_EntryInformationSelection_infoTypes(
    value: EntryInformationSelection_infoTypes,
    elGetter: $.ASN1Encoder<EntryInformationSelection_infoTypes>
) {
    if (!_cached_encoder_for_EntryInformationSelection_infoTypes) {
        _cached_encoder_for_EntryInformationSelection_infoTypes =
            $._encodeInteger;
    }
    return _cached_encoder_for_EntryInformationSelection_infoTypes(
        value,
        elGetter
    );
}

/**
 * @summary EntryInformationSelection_extraAttributes
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryInformationSelection-extraAttributes ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type EntryInformationSelection_extraAttributes =
    | { allOperationalAttributes: NULL } /* CHOICE_ALT_ROOT */
    | { select: AttributeType[] } /* CHOICE_ALT_ROOT */;
let _cached_decoder_for_EntryInformationSelection_extraAttributes: $.ASN1Decoder<
    EntryInformationSelection_extraAttributes
> | null = null;
let _cached_encoder_for_EntryInformationSelection_extraAttributes: $.ASN1Encoder<
    EntryInformationSelection_extraAttributes
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryInformationSelection_extraAttributes
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryInformationSelection_extraAttributes} The decoded data structure.
 */
export function _decode_EntryInformationSelection_extraAttributes(
    el: _Element
) {
    if (!_cached_decoder_for_EntryInformationSelection_extraAttributes) {
        _cached_decoder_for_EntryInformationSelection_extraAttributes = $._decode_inextensible_choice<
            EntryInformationSelection_extraAttributes
        >({
            "CONTEXT 3": [
                "allOperationalAttributes",
                $._decode_explicit<NULL>(() => $._decodeNull),
            ],
            "CONTEXT 4": [
                "select",
                $._decode_explicit<AttributeType[]>(() =>
                    $._decodeSetOf<AttributeType>(() => _decode_AttributeType)
                ),
            ],
        });
    }
    return _cached_decoder_for_EntryInformationSelection_extraAttributes(el);
}
/**
 * @summary Encodes a(n) EntryInformationSelection_extraAttributes into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryInformationSelection_extraAttributes, encoded as an ASN.1 Element.
 */
export function _encode_EntryInformationSelection_extraAttributes(
    value: EntryInformationSelection_extraAttributes,
    elGetter: $.ASN1Encoder<EntryInformationSelection_extraAttributes>
) {
    if (!_cached_encoder_for_EntryInformationSelection_extraAttributes) {
        _cached_encoder_for_EntryInformationSelection_extraAttributes = $._encode_choice<
            EntryInformationSelection_extraAttributes
        >(
            {
                allOperationalAttributes: $._encode_explicit(
                    _TagClass.context,
                    3,
                    () => $._encodeNull,
                    $.BER
                ),
                select: $._encode_explicit(
                    _TagClass.context,
                    4,
                    () =>
                        $._encodeSetOf<AttributeType>(
                            () => _encode_AttributeType,
                            $.BER
                        ),
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_EntryInformationSelection_extraAttributes(
        value,
        elGetter
    );
}

/**
 * @summary TypeAndContextAssertion_contextAssertions
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * TypeAndContextAssertion-contextAssertions ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type TypeAndContextAssertion_contextAssertions =
    | { preference: ContextAssertion[] } /* CHOICE_ALT_ROOT */
    | { all: ContextAssertion[] } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_TypeAndContextAssertion_contextAssertions: $.ASN1Decoder<
    TypeAndContextAssertion_contextAssertions
> | null = null;
let _cached_encoder_for_TypeAndContextAssertion_contextAssertions: $.ASN1Encoder<
    TypeAndContextAssertion_contextAssertions
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) TypeAndContextAssertion_contextAssertions
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {TypeAndContextAssertion_contextAssertions} The decoded data structure.
 */
export function _decode_TypeAndContextAssertion_contextAssertions(
    el: _Element
) {
    if (!_cached_decoder_for_TypeAndContextAssertion_contextAssertions) {
        _cached_decoder_for_TypeAndContextAssertion_contextAssertions = $._decode_extensible_choice<
            TypeAndContextAssertion_contextAssertions
        >({
            "UNIVERSAL 16": [
                "preference",
                $._decodeSequenceOf<ContextAssertion>(
                    () => _decode_ContextAssertion
                ),
            ],
            "UNIVERSAL 17": [
                "all",
                $._decodeSetOf<ContextAssertion>(
                    () => _decode_ContextAssertion
                ),
            ],
        });
    }
    return _cached_decoder_for_TypeAndContextAssertion_contextAssertions(el);
}
/**
 * @summary Encodes a(n) TypeAndContextAssertion_contextAssertions into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The TypeAndContextAssertion_contextAssertions, encoded as an ASN.1 Element.
 */
export function _encode_TypeAndContextAssertion_contextAssertions(
    value: TypeAndContextAssertion_contextAssertions,
    elGetter: $.ASN1Encoder<TypeAndContextAssertion_contextAssertions>
) {
    if (!_cached_encoder_for_TypeAndContextAssertion_contextAssertions) {
        _cached_encoder_for_TypeAndContextAssertion_contextAssertions = $._encode_choice<
            TypeAndContextAssertion_contextAssertions
        >(
            {
                preference: $._encodeSequenceOf<ContextAssertion>(
                    () => _encode_ContextAssertion,
                    $.BER
                ),
                all: $._encodeSetOf<ContextAssertion>(
                    () => _encode_ContextAssertion,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_TypeAndContextAssertion_contextAssertions(
        value,
        elGetter
    );
}

/**
 * @summary TypeAndContextAssertion
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * TypeAndContextAssertion ::= SEQUENCE {
 *   type               AttributeType,
 *   contextAssertions  CHOICE {
 *     preference         SEQUENCE OF ContextAssertion,
 *     all                SET OF ContextAssertion,
 *     ...},
 *   ... }
 * ```
 *
 * @class
 */
export class TypeAndContextAssertion {
    constructor(
        /**
         * @summary `type_`.
         * @public
         * @readonly
         */
        readonly type_: AttributeType,
        /**
         * @summary `contextAssertions`.
         * @public
         * @readonly
         */
        readonly contextAssertions: TypeAndContextAssertion_contextAssertions,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a TypeAndContextAssertion
     * @description
     *
     * This takes an `object` and converts it to a `TypeAndContextAssertion`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `TypeAndContextAssertion`.
     * @returns {TypeAndContextAssertion}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof TypeAndContextAssertion]: TypeAndContextAssertion[_K];
            }
        >
    ): TypeAndContextAssertion {
        return new TypeAndContextAssertion(
            _o.type_,
            _o.contextAssertions,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of TypeAndContextAssertion
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_TypeAndContextAssertion: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "type",
        false,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "contextAssertions",
        false,
        $.hasAnyTag,
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of TypeAndContextAssertion
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_TypeAndContextAssertion: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of TypeAndContextAssertion
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_TypeAndContextAssertion: $.ComponentSpec[] = [];
let _cached_decoder_for_TypeAndContextAssertion: $.ASN1Decoder<
    TypeAndContextAssertion
> | null = null;
let _cached_encoder_for_TypeAndContextAssertion: $.ASN1Encoder<
    TypeAndContextAssertion
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) TypeAndContextAssertion
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {TypeAndContextAssertion} The decoded data structure.
 */
export function _decode_TypeAndContextAssertion(el: _Element) {
    if (!_cached_decoder_for_TypeAndContextAssertion) {
        _cached_decoder_for_TypeAndContextAssertion = function (
            el: _Element
        ): TypeAndContextAssertion {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 2) {
                throw new _ConstructionError(
                    "TypeAndContextAssertion contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "type";
            sequence[1].name = "contextAssertions";
            let type_!: AttributeType;
            let contextAssertions!: TypeAndContextAssertion_contextAssertions;
            type_ = _decode_AttributeType(sequence[0]);
            contextAssertions = _decode_TypeAndContextAssertion_contextAssertions(
                sequence[1]
            );
            return new TypeAndContextAssertion(
                type_,
                contextAssertions,
                sequence.slice(2)
            );
        };
    }
    return _cached_decoder_for_TypeAndContextAssertion(el);
}
/**
 * @summary Encodes a(n) TypeAndContextAssertion into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The TypeAndContextAssertion, encoded as an ASN.1 Element.
 */
export function _encode_TypeAndContextAssertion(
    value: TypeAndContextAssertion,
    elGetter: $.ASN1Encoder<TypeAndContextAssertion>
) {
    if (!_cached_encoder_for_TypeAndContextAssertion) {
        _cached_encoder_for_TypeAndContextAssertion = function (
            value: TypeAndContextAssertion,
            elGetter: $.ASN1Encoder<TypeAndContextAssertion>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_AttributeType(
                                value.type_,
                                $.BER
                            ),
                            /* REQUIRED   */ _encode_TypeAndContextAssertion_contextAssertions(
                                value.contextAssertions,
                                $.BER
                            ),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_TypeAndContextAssertion(value, elGetter);
}

/**
 * @summary ContextSelection
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ContextSelection  ::=  CHOICE {
 *   allContexts       NULL,
 *   selectedContexts  SET SIZE (1..MAX) OF TypeAndContextAssertion,
 *   ... }
 * ```
 */
export type ContextSelection =
    | { allContexts: NULL } /* CHOICE_ALT_ROOT */
    | { selectedContexts: TypeAndContextAssertion[] } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_ContextSelection: $.ASN1Decoder<
    ContextSelection
> | null = null;
let _cached_encoder_for_ContextSelection: $.ASN1Encoder<
    ContextSelection
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ContextSelection
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ContextSelection} The decoded data structure.
 */
export function _decode_ContextSelection(el: _Element) {
    if (!_cached_decoder_for_ContextSelection) {
        _cached_decoder_for_ContextSelection = $._decode_extensible_choice<
            ContextSelection
        >({
            "UNIVERSAL 5": ["allContexts", $._decodeNull],
            "UNIVERSAL 17": [
                "selectedContexts",
                $._decodeSetOf<TypeAndContextAssertion>(
                    () => _decode_TypeAndContextAssertion
                ),
            ],
        });
    }
    return _cached_decoder_for_ContextSelection(el);
}
/**
 * @summary Encodes a(n) ContextSelection into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ContextSelection, encoded as an ASN.1 Element.
 */
export function _encode_ContextSelection(
    value: ContextSelection,
    elGetter: $.ASN1Encoder<ContextSelection>
) {
    if (!_cached_encoder_for_ContextSelection) {
        _cached_encoder_for_ContextSelection = $._encode_choice<
            ContextSelection
        >(
            {
                allContexts: $._encodeNull,
                selectedContexts: $._encodeSetOf<TypeAndContextAssertion>(
                    () => _encode_TypeAndContextAssertion,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_ContextSelection(value, elGetter);
}

/**
 * @summary FamilyReturn_memberSelect
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FamilyReturn-memberSelect ::= ENUMERATED { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @enum {number}
 */
export enum _enum_for_FamilyReturn_memberSelect {
    contributingEntriesOnly = 1,
    participatingEntriesOnly = 2,
    compoundEntry = 3,
}
/**
 * @summary FamilyReturn_memberSelect
 */
export type FamilyReturn_memberSelect =
    | _enum_for_FamilyReturn_memberSelect
    | ENUMERATED;
/**
 * @summary FamilyReturn_memberSelect_contributingEntriesOnly
 * @constant
 * @type {number}
 */
export const FamilyReturn_memberSelect_contributingEntriesOnly: FamilyReturn_memberSelect = 1; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary FamilyReturn_memberSelect_participatingEntriesOnly
 * @constant
 * @type {number}
 */
export const FamilyReturn_memberSelect_participatingEntriesOnly: FamilyReturn_memberSelect = 2; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary FamilyReturn_memberSelect_compoundEntry
 * @constant
 * @type {number}
 */
export const FamilyReturn_memberSelect_compoundEntry: FamilyReturn_memberSelect = 3; /* LONG_NAMED_ENUMERATED_VALUE */
let _cached_decoder_for_FamilyReturn_memberSelect: $.ASN1Decoder<
    FamilyReturn_memberSelect
> | null = null;
let _cached_encoder_for_FamilyReturn_memberSelect: $.ASN1Encoder<
    FamilyReturn_memberSelect
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FamilyReturn_memberSelect
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FamilyReturn_memberSelect} The decoded data structure.
 */
export function _decode_FamilyReturn_memberSelect(el: _Element) {
    if (!_cached_decoder_for_FamilyReturn_memberSelect) {
        _cached_decoder_for_FamilyReturn_memberSelect = $._decodeEnumerated;
    }
    return _cached_decoder_for_FamilyReturn_memberSelect(el);
}
/**
 * @summary Encodes a(n) FamilyReturn_memberSelect into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FamilyReturn_memberSelect, encoded as an ASN.1 Element.
 */
export function _encode_FamilyReturn_memberSelect(
    value: FamilyReturn_memberSelect,
    elGetter: $.ASN1Encoder<FamilyReturn_memberSelect>
) {
    if (!_cached_encoder_for_FamilyReturn_memberSelect) {
        _cached_encoder_for_FamilyReturn_memberSelect = $._encodeEnumerated;
    }
    return _cached_encoder_for_FamilyReturn_memberSelect(value, elGetter);
}

/**
 * @summary FamilyReturn
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FamilyReturn ::= SEQUENCE {
 *   memberSelect   ENUMERATED {
 *     contributingEntriesOnly   (1),
 *     participatingEntriesOnly  (2),
 *     compoundEntry             (3),
 *     ...},
 *   familySelect   SEQUENCE SIZE (1..MAX) OF OBJECT-CLASS.&id OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class FamilyReturn {
    constructor(
        /**
         * @summary `memberSelect`.
         * @public
         * @readonly
         */
        readonly memberSelect: FamilyReturn_memberSelect,
        /**
         * @summary `familySelect`.
         * @public
         * @readonly
         */
        readonly familySelect: OPTIONAL<OBJECT_IDENTIFIER[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a FamilyReturn
     * @description
     *
     * This takes an `object` and converts it to a `FamilyReturn`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `FamilyReturn`.
     * @returns {FamilyReturn}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof FamilyReturn]: FamilyReturn[_K] }>
    ): FamilyReturn {
        return new FamilyReturn(
            _o.memberSelect,
            _o.familySelect,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary The enum used as the type of the component `memberSelect`
     * @public
     * @static
     */

    public static _enum_for_memberSelect = _enum_for_FamilyReturn_memberSelect;
}
/**
 * @summary The Leading Root Component Types of FamilyReturn
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_FamilyReturn: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "memberSelect",
        false,
        $.hasTag(_TagClass.universal, 10),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familySelect",
        true,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of FamilyReturn
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_FamilyReturn: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of FamilyReturn
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_FamilyReturn: $.ComponentSpec[] = [];
let _cached_decoder_for_FamilyReturn: $.ASN1Decoder<FamilyReturn> | null = null;
let _cached_encoder_for_FamilyReturn: $.ASN1Encoder<FamilyReturn> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FamilyReturn
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FamilyReturn} The decoded data structure.
 */
export function _decode_FamilyReturn(el: _Element) {
    if (!_cached_decoder_for_FamilyReturn) {
        _cached_decoder_for_FamilyReturn = function (
            el: _Element
        ): FamilyReturn {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let memberSelect!: FamilyReturn_memberSelect;
            let familySelect: OPTIONAL<OBJECT_IDENTIFIER[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                memberSelect: (_el: _Element): void => {
                    memberSelect = _decode_FamilyReturn_memberSelect(_el);
                },
                familySelect: (_el: _Element): void => {
                    familySelect = $._decodeSequenceOf<OBJECT_IDENTIFIER>(
                        () => $._decodeObjectIdentifier
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_FamilyReturn,
                _extension_additions_list_spec_for_FamilyReturn,
                _root_component_type_list_2_spec_for_FamilyReturn,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new FamilyReturn(
                /* SEQUENCE_CONSTRUCTOR_CALL */ memberSelect,
                familySelect,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_FamilyReturn(el);
}
/**
 * @summary Encodes a(n) FamilyReturn into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FamilyReturn, encoded as an ASN.1 Element.
 */
export function _encode_FamilyReturn(
    value: FamilyReturn,
    elGetter: $.ASN1Encoder<FamilyReturn>
) {
    if (!_cached_encoder_for_FamilyReturn) {
        _cached_encoder_for_FamilyReturn = function (
            value: FamilyReturn,
            elGetter: $.ASN1Encoder<FamilyReturn>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_FamilyReturn_memberSelect(
                                value.memberSelect,
                                $.BER
                            ),
                            /* IF_ABSENT  */ value.familySelect === undefined
                                ? undefined
                                : $._encodeSequenceOf<OBJECT_IDENTIFIER>(
                                      () => $._encodeObjectIdentifier,
                                      $.BER
                                  )(value.familySelect, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_FamilyReturn(value, elGetter);
}

/**
 * @summary EntryInformationSelection
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryInformationSelection ::= SET {
 *   attributes                     CHOICE {
 *     allUserAttributes         [0]  NULL,
 *     select                    [1]  SET OF AttributeType
 *     -- empty set implies no attributes are requested -- } DEFAULT allUserAttributes:NULL,
 *     infoTypes               [2]  INTEGER {
 *       attributeTypesOnly        (0),
 *       attributeTypesAndValues   (1)} DEFAULT attributeTypesAndValues,
 *   extraAttributes                CHOICE {
 *     allOperationalAttributes  [3]  NULL,
 *     select                    [4]  SET SIZE (1..MAX) OF AttributeType } OPTIONAL,
 *   contextSelection               ContextSelection OPTIONAL,
 *   returnContexts                 BOOLEAN DEFAULT FALSE,
 *   familyReturn                   FamilyReturn DEFAULT
 *                                    {memberSelect contributingEntriesOnly} }
 * ```
 *
 * @class
 */
export class EntryInformationSelection {
    constructor(
        /**
         * @summary `attributes`.
         * @public
         * @readonly
         */
        readonly attributes: OPTIONAL<EntryInformationSelection_attributes>,
        /**
         * @summary `infoTypes`.
         * @public
         * @readonly
         */
        readonly infoTypes: OPTIONAL<EntryInformationSelection_infoTypes>,
        /**
         * @summary `extraAttributes`.
         * @public
         * @readonly
         */
        readonly extraAttributes: OPTIONAL<
            EntryInformationSelection_extraAttributes
        >,
        /**
         * @summary `contextSelection`.
         * @public
         * @readonly
         */
        readonly contextSelection: OPTIONAL<ContextSelection>,
        /**
         * @summary `returnContexts`.
         * @public
         * @readonly
         */
        readonly returnContexts: OPTIONAL<BOOLEAN>,
        /**
         * @summary `familyReturn`.
         * @public
         * @readonly
         */
        readonly familyReturn: OPTIONAL<FamilyReturn>
    ) {}

    /**
     * @summary Restructures an object into a EntryInformationSelection
     * @description
     *
     * This takes an `object` and converts it to a `EntryInformationSelection`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `EntryInformationSelection`.
     * @returns {EntryInformationSelection}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof EntryInformationSelection]: EntryInformationSelection[_K];
            }
        >
    ): EntryInformationSelection {
        return new EntryInformationSelection(
            _o.attributes,
            _o.infoTypes,
            _o.extraAttributes,
            _o.contextSelection,
            _o.returnContexts,
            _o.familyReturn
        );
    }

    /**
     * @summary Getter that returns the default value for `attributes`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_attributes() {
        return { allUserAttributes: null };
    }
    /**
     * @summary Getter that returns the default value for `infoTypes`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_infoTypes() {
        return EntryInformationSelection_infoTypes_attributeTypesAndValues;
    }
    /**
     * @summary Getter that returns the default value for `returnContexts`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_returnContexts() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyReturn`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyReturn() {
        return FamilyReturn._from_object({
            memberSelect:
                FamilyReturn._enum_for_memberSelect.contributingEntriesOnly,
        });
    }
}
/**
 * @summary The Leading Root Component Types of EntryInformationSelection
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_EntryInformationSelection: $.ComponentSpec[] = [
    new $.ComponentSpec("attributes", true, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "infoTypes",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "extraAttributes",
        true,
        $.hasAnyTag,
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "contextSelection",
        true,
        $.hasAnyTag,
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "returnContexts",
        true,
        $.hasTag(_TagClass.universal, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyReturn",
        true,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of EntryInformationSelection
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_EntryInformationSelection: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of EntryInformationSelection
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_EntryInformationSelection: $.ComponentSpec[] = [];
let _cached_decoder_for_EntryInformationSelection: $.ASN1Decoder<
    EntryInformationSelection
> | null = null;
let _cached_encoder_for_EntryInformationSelection: $.ASN1Encoder<
    EntryInformationSelection
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryInformationSelection
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryInformationSelection} The decoded data structure.
 */
export function _decode_EntryInformationSelection(el: _Element) {
    if (!_cached_decoder_for_EntryInformationSelection) {
        _cached_decoder_for_EntryInformationSelection = function (
            el: _Element
        ): EntryInformationSelection {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let attributes: OPTIONAL<EntryInformationSelection_attributes> =
                EntryInformationSelection._default_value_for_attributes;
            let infoTypes: OPTIONAL<EntryInformationSelection_infoTypes> =
                EntryInformationSelection._default_value_for_infoTypes;
            let extraAttributes: OPTIONAL<EntryInformationSelection_extraAttributes>;
            let contextSelection: OPTIONAL<ContextSelection>;
            let returnContexts: OPTIONAL<BOOLEAN> =
                EntryInformationSelection._default_value_for_returnContexts;
            let familyReturn: OPTIONAL<FamilyReturn> =
                EntryInformationSelection._default_value_for_familyReturn;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                attributes: (_el: _Element): void => {
                    attributes = _decode_EntryInformationSelection_attributes(
                        _el
                    );
                },
                infoTypes: (_el: _Element): void => {
                    infoTypes = $._decode_explicit<
                        EntryInformationSelection_infoTypes
                    >(() => _decode_EntryInformationSelection_infoTypes)(_el);
                },
                extraAttributes: (_el: _Element): void => {
                    extraAttributes = _decode_EntryInformationSelection_extraAttributes(
                        _el
                    );
                },
                contextSelection: (_el: _Element): void => {
                    contextSelection = _decode_ContextSelection(_el);
                },
                returnContexts: (_el: _Element): void => {
                    returnContexts = $._decodeBoolean(_el);
                },
                familyReturn: (_el: _Element): void => {
                    familyReturn = _decode_FamilyReturn(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_EntryInformationSelection,
                _extension_additions_list_spec_for_EntryInformationSelection,
                _root_component_type_list_2_spec_for_EntryInformationSelection,
                undefined
            );
            return new EntryInformationSelection(
                /* SET_CONSTRUCTOR_CALL */ attributes,
                infoTypes,
                extraAttributes,
                contextSelection,
                returnContexts,
                familyReturn
            );
        };
    }
    return _cached_decoder_for_EntryInformationSelection(el);
}
/**
 * @summary Encodes a(n) EntryInformationSelection into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryInformationSelection, encoded as an ASN.1 Element.
 */
export function _encode_EntryInformationSelection(
    value: EntryInformationSelection,
    elGetter: $.ASN1Encoder<EntryInformationSelection>
) {
    if (!_cached_encoder_for_EntryInformationSelection) {
        _cached_encoder_for_EntryInformationSelection = function (
            value: EntryInformationSelection,
            elGetter: $.ASN1Encoder<EntryInformationSelection>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat([
                        /* IF_DEFAULT */ value.attributes === undefined ||
                        $.deepEq(
                            value.attributes,
                            EntryInformationSelection._default_value_for_attributes
                        )
                            ? undefined
                            : _encode_EntryInformationSelection_attributes(
                                  value.attributes,
                                  $.BER
                              ),
                        /* IF_DEFAULT */ value.infoTypes === undefined ||
                        $.deepEq(
                            value.infoTypes,
                            EntryInformationSelection._default_value_for_infoTypes
                        )
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  2,
                                  () =>
                                      _encode_EntryInformationSelection_infoTypes,
                                  $.BER
                              )(value.infoTypes, $.BER),
                        /* IF_ABSENT  */ value.extraAttributes === undefined
                            ? undefined
                            : _encode_EntryInformationSelection_extraAttributes(
                                  value.extraAttributes,
                                  $.BER
                              ),
                        /* IF_ABSENT  */ value.contextSelection === undefined
                            ? undefined
                            : _encode_ContextSelection(
                                  value.contextSelection,
                                  $.BER
                              ),
                        /* IF_DEFAULT */ value.returnContexts === undefined ||
                        $.deepEq(
                            value.returnContexts,
                            EntryInformationSelection._default_value_for_returnContexts
                        )
                            ? undefined
                            : $._encodeBoolean(value.returnContexts, $.BER),
                        /* IF_DEFAULT */ value.familyReturn === undefined ||
                        $.deepEq(
                            value.familyReturn,
                            EntryInformationSelection._default_value_for_familyReturn
                        )
                            ? undefined
                            : _encode_FamilyReturn(value.familyReturn, $.BER),
                    ])
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_EntryInformationSelection(value, elGetter);
}

/**
 * @summary ServiceControlOptions
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceControlOptions  ::=  BIT STRING {
 *   preferChaining          (0),
 *   chainingProhibited      (1),
 *   localScope              (2),
 *   dontUseCopy             (3),
 *   dontDereferenceAliases  (4),
 *   subentries              (5),
 *   copyShallDo             (6),
 *   partialNameResolution   (7),
 *   manageDSAIT             (8),
 *   noSubtypeMatch          (9),
 *   noSubtypeSelection      (10),
 *   countFamily             (11),
 *   dontSelectFriends       (12),
 *   dontMatchFriends        (13),
 *   allowWriteableCopy      (14)}
 * ```
 */
export type ServiceControlOptions = BIT_STRING;
/**
 * @summary ServiceControlOptions_preferChaining
 * @constant
 */
export const ServiceControlOptions_preferChaining: number = 0; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_chainingProhibited
 * @constant
 */
export const ServiceControlOptions_chainingProhibited: number = 1; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_localScope
 * @constant
 */
export const ServiceControlOptions_localScope: number = 2; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_dontUseCopy
 * @constant
 */
export const ServiceControlOptions_dontUseCopy: number = 3; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_dontDereferenceAliases
 * @constant
 */
export const ServiceControlOptions_dontDereferenceAliases: number = 4; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_subentries
 * @constant
 */
export const ServiceControlOptions_subentries: number = 5; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_copyShallDo
 * @constant
 */
export const ServiceControlOptions_copyShallDo: number = 6; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_partialNameResolution
 * @constant
 */
export const ServiceControlOptions_partialNameResolution: number = 7; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_manageDSAIT
 * @constant
 */
export const ServiceControlOptions_manageDSAIT: number = 8; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_noSubtypeMatch
 * @constant
 */
export const ServiceControlOptions_noSubtypeMatch: number = 9; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_noSubtypeSelection
 * @constant
 */
export const ServiceControlOptions_noSubtypeSelection: number = 10; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_countFamily
 * @constant
 */
export const ServiceControlOptions_countFamily: number = 11; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_dontSelectFriends
 * @constant
 */
export const ServiceControlOptions_dontSelectFriends: number = 12; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_dontMatchFriends
 * @constant
 */
export const ServiceControlOptions_dontMatchFriends: number = 13; /* LONG_NAMED_BIT */
/**
 * @summary ServiceControlOptions_allowWriteableCopy
 * @constant
 */
export const ServiceControlOptions_allowWriteableCopy: number = 14; /* LONG_NAMED_BIT */
let _cached_decoder_for_ServiceControlOptions: $.ASN1Decoder<
    ServiceControlOptions
> | null = null;
let _cached_encoder_for_ServiceControlOptions: $.ASN1Encoder<
    ServiceControlOptions
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceControlOptions
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceControlOptions} The decoded data structure.
 */
export function _decode_ServiceControlOptions(el: _Element) {
    if (!_cached_decoder_for_ServiceControlOptions) {
        _cached_decoder_for_ServiceControlOptions = $._decodeBitString;
    }
    return _cached_decoder_for_ServiceControlOptions(el);
}
/**
 * @summary Encodes a(n) ServiceControlOptions into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceControlOptions, encoded as an ASN.1 Element.
 */
export function _encode_ServiceControlOptions(
    value: ServiceControlOptions,
    elGetter: $.ASN1Encoder<ServiceControlOptions>
) {
    if (!_cached_encoder_for_ServiceControlOptions) {
        _cached_encoder_for_ServiceControlOptions = $._encodeBitString;
    }
    return _cached_encoder_for_ServiceControlOptions(value, elGetter);
}

/**
 * @summary ServiceControls_priority
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceControls-priority ::= INTEGER { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type ServiceControls_priority = INTEGER;
/**
 * @summary ServiceControls_priority_low
 * @constant
 * @type {number}
 */
export const ServiceControls_priority_low: ServiceControls_priority = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceControls_priority_medium
 * @constant
 * @type {number}
 */
export const ServiceControls_priority_medium: ServiceControls_priority = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceControls_priority_high
 * @constant
 * @type {number}
 */
export const ServiceControls_priority_high: ServiceControls_priority = 2; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_ServiceControls_priority: $.ASN1Decoder<
    ServiceControls_priority
> | null = null;
let _cached_encoder_for_ServiceControls_priority: $.ASN1Encoder<
    ServiceControls_priority
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceControls_priority
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceControls_priority} The decoded data structure.
 */
export function _decode_ServiceControls_priority(el: _Element) {
    if (!_cached_decoder_for_ServiceControls_priority) {
        _cached_decoder_for_ServiceControls_priority = $._decodeInteger;
    }
    return _cached_decoder_for_ServiceControls_priority(el);
}
/**
 * @summary Encodes a(n) ServiceControls_priority into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceControls_priority, encoded as an ASN.1 Element.
 */
export function _encode_ServiceControls_priority(
    value: ServiceControls_priority,
    elGetter: $.ASN1Encoder<ServiceControls_priority>
) {
    if (!_cached_encoder_for_ServiceControls_priority) {
        _cached_encoder_for_ServiceControls_priority = $._encodeInteger;
    }
    return _cached_encoder_for_ServiceControls_priority(value, elGetter);
}

/**
 * @summary ServiceControls_scopeOfReferral
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceControls-scopeOfReferral ::= INTEGER { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type ServiceControls_scopeOfReferral = INTEGER;
/**
 * @summary ServiceControls_scopeOfReferral_dmd
 * @constant
 * @type {number}
 */
export const ServiceControls_scopeOfReferral_dmd: ServiceControls_scopeOfReferral = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary ServiceControls_scopeOfReferral_country
 * @constant
 * @type {number}
 */
export const ServiceControls_scopeOfReferral_country: ServiceControls_scopeOfReferral = 1; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_ServiceControls_scopeOfReferral: $.ASN1Decoder<
    ServiceControls_scopeOfReferral
> | null = null;
let _cached_encoder_for_ServiceControls_scopeOfReferral: $.ASN1Encoder<
    ServiceControls_scopeOfReferral
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceControls_scopeOfReferral
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceControls_scopeOfReferral} The decoded data structure.
 */
export function _decode_ServiceControls_scopeOfReferral(el: _Element) {
    if (!_cached_decoder_for_ServiceControls_scopeOfReferral) {
        _cached_decoder_for_ServiceControls_scopeOfReferral = $._decodeInteger;
    }
    return _cached_decoder_for_ServiceControls_scopeOfReferral(el);
}
/**
 * @summary Encodes a(n) ServiceControls_scopeOfReferral into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceControls_scopeOfReferral, encoded as an ASN.1 Element.
 */
export function _encode_ServiceControls_scopeOfReferral(
    value: ServiceControls_scopeOfReferral,
    elGetter: $.ASN1Encoder<ServiceControls_scopeOfReferral>
) {
    if (!_cached_encoder_for_ServiceControls_scopeOfReferral) {
        _cached_encoder_for_ServiceControls_scopeOfReferral = $._encodeInteger;
    }
    return _cached_encoder_for_ServiceControls_scopeOfReferral(value, elGetter);
}

/**
 * @summary ServiceControls_manageDSAITPlaneRef
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceControls-manageDSAITPlaneRef ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class ServiceControls_manageDSAITPlaneRef {
    constructor(
        /**
         * @summary `dsaName`.
         * @public
         * @readonly
         */
        readonly dsaName: Name,
        /**
         * @summary `agreementID`.
         * @public
         * @readonly
         */
        readonly agreementID: AgreementID,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a ServiceControls_manageDSAITPlaneRef
     * @description
     *
     * This takes an `object` and converts it to a `ServiceControls_manageDSAITPlaneRef`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ServiceControls_manageDSAITPlaneRef`.
     * @returns {ServiceControls_manageDSAITPlaneRef}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof ServiceControls_manageDSAITPlaneRef]: ServiceControls_manageDSAITPlaneRef[_K];
            }
        >
    ): ServiceControls_manageDSAITPlaneRef {
        return new ServiceControls_manageDSAITPlaneRef(
            _o.dsaName,
            _o.agreementID,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of ServiceControls_manageDSAITPlaneRef
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ServiceControls_manageDSAITPlaneRef: $.ComponentSpec[] = [
    new $.ComponentSpec("dsaName", false, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "agreementID",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ServiceControls_manageDSAITPlaneRef
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ServiceControls_manageDSAITPlaneRef: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of ServiceControls_manageDSAITPlaneRef
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ServiceControls_manageDSAITPlaneRef: $.ComponentSpec[] = [];
let _cached_decoder_for_ServiceControls_manageDSAITPlaneRef: $.ASN1Decoder<
    ServiceControls_manageDSAITPlaneRef
> | null = null;
let _cached_encoder_for_ServiceControls_manageDSAITPlaneRef: $.ASN1Encoder<
    ServiceControls_manageDSAITPlaneRef
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceControls_manageDSAITPlaneRef
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceControls_manageDSAITPlaneRef} The decoded data structure.
 */
export function _decode_ServiceControls_manageDSAITPlaneRef(el: _Element) {
    if (!_cached_decoder_for_ServiceControls_manageDSAITPlaneRef) {
        _cached_decoder_for_ServiceControls_manageDSAITPlaneRef = function (
            el: _Element
        ): ServiceControls_manageDSAITPlaneRef {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 2) {
                throw new _ConstructionError(
                    "ServiceControls-manageDSAITPlaneRef contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "dsaName";
            sequence[1].name = "agreementID";
            let dsaName!: Name;
            let agreementID!: AgreementID;
            dsaName = _decode_Name(sequence[0]);
            agreementID = _decode_AgreementID(sequence[1]);
            return new ServiceControls_manageDSAITPlaneRef(
                dsaName,
                agreementID,
                sequence.slice(2)
            );
        };
    }
    return _cached_decoder_for_ServiceControls_manageDSAITPlaneRef(el);
}
/**
 * @summary Encodes a(n) ServiceControls_manageDSAITPlaneRef into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceControls_manageDSAITPlaneRef, encoded as an ASN.1 Element.
 */
export function _encode_ServiceControls_manageDSAITPlaneRef(
    value: ServiceControls_manageDSAITPlaneRef,
    elGetter: $.ASN1Encoder<ServiceControls_manageDSAITPlaneRef>
) {
    if (!_cached_encoder_for_ServiceControls_manageDSAITPlaneRef) {
        _cached_encoder_for_ServiceControls_manageDSAITPlaneRef = function (
            value: ServiceControls_manageDSAITPlaneRef,
            elGetter: $.ASN1Encoder<ServiceControls_manageDSAITPlaneRef>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_Name(value.dsaName, $.BER),
                            /* REQUIRED   */ _encode_AgreementID(
                                value.agreementID,
                                $.BER
                            ),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ServiceControls_manageDSAITPlaneRef(
        value,
        elGetter
    );
}

/**
 * @summary ServiceControls
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceControls ::= SET {
 *   options              [0]  ServiceControlOptions DEFAULT {},
 *   priority             [1]  INTEGER {low(0), medium(1), high(2)} DEFAULT medium,
 *   timeLimit            [2]  INTEGER OPTIONAL,
 *   sizeLimit            [3]  INTEGER OPTIONAL,
 *   scopeOfReferral      [4]  INTEGER {dmd(0), country(1)} OPTIONAL,
 *   attributeSizeLimit   [5]  INTEGER OPTIONAL,
 *   manageDSAITPlaneRef  [6]  SEQUENCE {
 *     dsaName                   Name,
 *     agreementID               AgreementID,
 *     ...} OPTIONAL,
 *   serviceType          [7]  OBJECT IDENTIFIER OPTIONAL,
 *   userClass            [8]  INTEGER OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class ServiceControls {
    constructor(
        /**
         * @summary `options`.
         * @public
         * @readonly
         */
        readonly options: OPTIONAL<ServiceControlOptions>,
        /**
         * @summary `priority`.
         * @public
         * @readonly
         */
        readonly priority: OPTIONAL<ServiceControls_priority>,
        /**
         * @summary `timeLimit`.
         * @public
         * @readonly
         */
        readonly timeLimit: OPTIONAL<INTEGER>,
        /**
         * @summary `sizeLimit`.
         * @public
         * @readonly
         */
        readonly sizeLimit: OPTIONAL<INTEGER>,
        /**
         * @summary `scopeOfReferral`.
         * @public
         * @readonly
         */
        readonly scopeOfReferral: OPTIONAL<ServiceControls_scopeOfReferral>,
        /**
         * @summary `attributeSizeLimit`.
         * @public
         * @readonly
         */
        readonly attributeSizeLimit: OPTIONAL<INTEGER>,
        /**
         * @summary `manageDSAITPlaneRef`.
         * @public
         * @readonly
         */
        readonly manageDSAITPlaneRef: OPTIONAL<
            ServiceControls_manageDSAITPlaneRef
        >,
        /**
         * @summary `serviceType`.
         * @public
         * @readonly
         */
        readonly serviceType: OPTIONAL<OBJECT_IDENTIFIER>,
        /**
         * @summary `userClass`.
         * @public
         * @readonly
         */
        readonly userClass: OPTIONAL<INTEGER>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a ServiceControls
     * @description
     *
     * This takes an `object` and converts it to a `ServiceControls`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ServiceControls`.
     * @returns {ServiceControls}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ServiceControls]: ServiceControls[_K] }>
    ): ServiceControls {
        return new ServiceControls(
            _o.options,
            _o.priority,
            _o.timeLimit,
            _o.sizeLimit,
            _o.scopeOfReferral,
            _o.attributeSizeLimit,
            _o.manageDSAITPlaneRef,
            _o.serviceType,
            _o.userClass,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `options`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_options() {
        return new Uint8ClampedArray([]);
    }
    /**
     * @summary Getter that returns the default value for `priority`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_priority() {
        return ServiceControls_priority_medium;
    }
}
/**
 * @summary The Leading Root Component Types of ServiceControls
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ServiceControls: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "options",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "priority",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "timeLimit",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "sizeLimit",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "scopeOfReferral",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "attributeSizeLimit",
        true,
        $.hasTag(_TagClass.context, 5),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "manageDSAITPlaneRef",
        true,
        $.hasTag(_TagClass.context, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "serviceType",
        true,
        $.hasTag(_TagClass.context, 7),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "userClass",
        true,
        $.hasTag(_TagClass.context, 8),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ServiceControls
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ServiceControls: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of ServiceControls
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ServiceControls: $.ComponentSpec[] = [];
let _cached_decoder_for_ServiceControls: $.ASN1Decoder<
    ServiceControls
> | null = null;
let _cached_encoder_for_ServiceControls: $.ASN1Encoder<
    ServiceControls
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceControls
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceControls} The decoded data structure.
 */
export function _decode_ServiceControls(el: _Element) {
    if (!_cached_decoder_for_ServiceControls) {
        _cached_decoder_for_ServiceControls = function (
            el: _Element
        ): ServiceControls {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let options: OPTIONAL<ServiceControlOptions> =
                ServiceControls._default_value_for_options;
            let priority: OPTIONAL<ServiceControls_priority> =
                ServiceControls._default_value_for_priority;
            let timeLimit: OPTIONAL<INTEGER>;
            let sizeLimit: OPTIONAL<INTEGER>;
            let scopeOfReferral: OPTIONAL<ServiceControls_scopeOfReferral>;
            let attributeSizeLimit: OPTIONAL<INTEGER>;
            let manageDSAITPlaneRef: OPTIONAL<ServiceControls_manageDSAITPlaneRef>;
            let serviceType: OPTIONAL<OBJECT_IDENTIFIER>;
            let userClass: OPTIONAL<INTEGER>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                options: (_el: _Element): void => {
                    options = $._decode_explicit<ServiceControlOptions>(
                        () => _decode_ServiceControlOptions
                    )(_el);
                },
                priority: (_el: _Element): void => {
                    priority = $._decode_explicit<ServiceControls_priority>(
                        () => _decode_ServiceControls_priority
                    )(_el);
                },
                timeLimit: (_el: _Element): void => {
                    timeLimit = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                sizeLimit: (_el: _Element): void => {
                    sizeLimit = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                scopeOfReferral: (_el: _Element): void => {
                    scopeOfReferral = $._decode_explicit<
                        ServiceControls_scopeOfReferral
                    >(() => _decode_ServiceControls_scopeOfReferral)(_el);
                },
                attributeSizeLimit: (_el: _Element): void => {
                    attributeSizeLimit = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                manageDSAITPlaneRef: (_el: _Element): void => {
                    manageDSAITPlaneRef = $._decode_explicit<
                        ServiceControls_manageDSAITPlaneRef
                    >(() => _decode_ServiceControls_manageDSAITPlaneRef)(_el);
                },
                serviceType: (_el: _Element): void => {
                    serviceType = $._decode_explicit<OBJECT_IDENTIFIER>(
                        () => $._decodeObjectIdentifier
                    )(_el);
                },
                userClass: (_el: _Element): void => {
                    userClass = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ServiceControls,
                _extension_additions_list_spec_for_ServiceControls,
                _root_component_type_list_2_spec_for_ServiceControls,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ServiceControls(
                /* SET_CONSTRUCTOR_CALL */ options,
                priority,
                timeLimit,
                sizeLimit,
                scopeOfReferral,
                attributeSizeLimit,
                manageDSAITPlaneRef,
                serviceType,
                userClass,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_ServiceControls(el);
}
/**
 * @summary Encodes a(n) ServiceControls into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceControls, encoded as an ASN.1 Element.
 */
export function _encode_ServiceControls(
    value: ServiceControls,
    elGetter: $.ASN1Encoder<ServiceControls>
) {
    if (!_cached_encoder_for_ServiceControls) {
        _cached_encoder_for_ServiceControls = function (
            value: ServiceControls,
            elGetter: $.ASN1Encoder<ServiceControls>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_DEFAULT */ value.options === undefined ||
                            $.deepEq(
                                value.options,
                                ServiceControls._default_value_for_options
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => _encode_ServiceControlOptions,
                                      $.BER
                                  )(value.options, $.BER),
                            /* IF_DEFAULT */ value.priority === undefined ||
                            $.deepEq(
                                value.priority,
                                ServiceControls._default_value_for_priority
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_ServiceControls_priority,
                                      $.BER
                                  )(value.priority, $.BER),
                            /* IF_ABSENT  */ value.timeLimit === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.timeLimit, $.BER),
                            /* IF_ABSENT  */ value.sizeLimit === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.sizeLimit, $.BER),
                            /* IF_ABSENT  */ value.scopeOfReferral === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () =>
                                          _encode_ServiceControls_scopeOfReferral,
                                      $.BER
                                  )(value.scopeOfReferral, $.BER),
                            /* IF_ABSENT  */ value.attributeSizeLimit ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      5,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.attributeSizeLimit, $.BER),
                            /* IF_ABSENT  */ value.manageDSAITPlaneRef ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      6,
                                      () =>
                                          _encode_ServiceControls_manageDSAITPlaneRef,
                                      $.BER
                                  )(value.manageDSAITPlaneRef, $.BER),
                            /* IF_ABSENT  */ value.serviceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      7,
                                      () => $._encodeObjectIdentifier,
                                      $.BER
                                  )(value.serviceType, $.BER),
                            /* IF_ABSENT  */ value.userClass === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      8,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.userClass, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ServiceControls(value, elGetter);
}

/**
 * @summary FamilyGrouping
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FamilyGrouping ::= ENUMERATED {
 *   entryOnly     (1),
 *   compoundEntry (2),
 *   strands       (3),
 *   multiStrand   (4),
 *   ... }
 * ```
 *
 * @enum {number}
 */
export enum _enum_for_FamilyGrouping {
    entryOnly = 1,
    compoundEntry = 2,
    strands = 3,
    multiStrand = 4,
}
/**
 * @summary FamilyGrouping
 */
export type FamilyGrouping = _enum_for_FamilyGrouping | ENUMERATED;
/**
 * @summary FamilyGrouping_entryOnly
 * @constant
 * @type {number}
 */
export const FamilyGrouping_entryOnly: FamilyGrouping = 1; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary FamilyGrouping_compoundEntry
 * @constant
 * @type {number}
 */
export const FamilyGrouping_compoundEntry: FamilyGrouping = 2; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary FamilyGrouping_strands
 * @constant
 * @type {number}
 */
export const FamilyGrouping_strands: FamilyGrouping = 3; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary FamilyGrouping_multiStrand
 * @constant
 * @type {number}
 */
export const FamilyGrouping_multiStrand: FamilyGrouping = 4; /* LONG_NAMED_ENUMERATED_VALUE */
let _cached_decoder_for_FamilyGrouping: $.ASN1Decoder<
    FamilyGrouping
> | null = null;
let _cached_encoder_for_FamilyGrouping: $.ASN1Encoder<
    FamilyGrouping
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FamilyGrouping
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FamilyGrouping} The decoded data structure.
 */
export function _decode_FamilyGrouping(el: _Element) {
    if (!_cached_decoder_for_FamilyGrouping) {
        _cached_decoder_for_FamilyGrouping = $._decodeEnumerated;
    }
    return _cached_decoder_for_FamilyGrouping(el);
}
/**
 * @summary Encodes a(n) FamilyGrouping into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FamilyGrouping, encoded as an ASN.1 Element.
 */
export function _encode_FamilyGrouping(
    value: FamilyGrouping,
    elGetter: $.ASN1Encoder<FamilyGrouping>
) {
    if (!_cached_encoder_for_FamilyGrouping) {
        _cached_encoder_for_FamilyGrouping = $._encodeEnumerated;
    }
    return _cached_encoder_for_FamilyGrouping(value, elGetter);
}

/**
 * @summary CommonArguments
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * CommonArguments ::= SET {
 *   serviceControls      [30]  ServiceControls    DEFAULT {},
 *   securityParameters   [29]  SecurityParameters OPTIONAL,
 *   requestor            [28]  DistinguishedName  OPTIONAL,
 *   operationProgress    [27]  OperationProgress
 *                              DEFAULT {nameResolutionPhase notStarted},
 *   aliasedRDNs          [26]  INTEGER            OPTIONAL,
 *   criticalExtensions   [25]  BIT STRING         OPTIONAL,
 *   referenceType        [24]  ReferenceType      OPTIONAL,
 *   entryOnly            [23]  BOOLEAN            DEFAULT TRUE,
 *   exclusions           [22]  Exclusions         OPTIONAL,
 *   nameResolveOnMaster  [21]  BOOLEAN            DEFAULT FALSE,
 *   operationContexts    [20]  ContextSelection   OPTIONAL,
 *   familyGrouping       [19]  FamilyGrouping     DEFAULT entryOnly,
 *   ... }
 * ```
 *
 * @class
 */
export class CommonArguments {
    constructor(
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<ServiceControls>,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<SecurityParameters>,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<DistinguishedName>,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<OperationProgress>,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER>,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<BIT_STRING>,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<ReferenceType>,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN>,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions>,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<BOOLEAN>,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<ContextSelection>,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<FamilyGrouping>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a CommonArguments
     * @description
     *
     * This takes an `object` and converts it to a `CommonArguments`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `CommonArguments`.
     * @returns {CommonArguments}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof CommonArguments]: CommonArguments[_K] }>
    ): CommonArguments {
        return new CommonArguments(
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of CommonArguments
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_CommonArguments: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of CommonArguments
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_CommonArguments: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of CommonArguments
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_CommonArguments: $.ComponentSpec[] = [];
let _cached_decoder_for_CommonArguments: $.ASN1Decoder<
    CommonArguments
> | null = null;
let _cached_encoder_for_CommonArguments: $.ASN1Encoder<
    CommonArguments
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CommonArguments
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CommonArguments} The decoded data structure.
 */
export function _decode_CommonArguments(el: _Element) {
    if (!_cached_decoder_for_CommonArguments) {
        _cached_decoder_for_CommonArguments = function (
            el: _Element
        ): CommonArguments {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let serviceControls: OPTIONAL<ServiceControls> =
                CommonArguments._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                CommonArguments._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                CommonArguments._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                CommonArguments._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                CommonArguments._default_value_for_familyGrouping;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_CommonArguments,
                _extension_additions_list_spec_for_CommonArguments,
                _root_component_type_list_2_spec_for_CommonArguments,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new CommonArguments(
                /* SET_CONSTRUCTOR_CALL */ serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_CommonArguments(el);
}
/**
 * @summary Encodes a(n) CommonArguments into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CommonArguments, encoded as an ASN.1 Element.
 */
export function _encode_CommonArguments(
    value: CommonArguments,
    elGetter: $.ASN1Encoder<CommonArguments>
) {
    if (!_cached_encoder_for_CommonArguments) {
        _cached_encoder_for_CommonArguments = function (
            value: CommonArguments,
            elGetter: $.ASN1Encoder<CommonArguments>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                CommonArguments._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                CommonArguments._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                CommonArguments._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                CommonArguments._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                CommonArguments._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_CommonArguments(value, elGetter);
}

/**
 * @summary ReadArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ReadArgumentData ::= SET {
 *   object               [0]  Name,
 *   selection            [1]  EntryInformationSelection DEFAULT {},
 *   modifyRightsRequest  [2]  BOOLEAN DEFAULT FALSE,
 *   ...,
 *   ...,
 *   COMPONENTS OF             CommonArguments }
 * ```
 *
 * @class
 */
export class ReadArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary `selection`.
         * @public
         * @readonly
         */
        readonly selection: OPTIONAL<EntryInformationSelection>,
        /**
         * @summary `modifyRightsRequest`.
         * @public
         * @readonly
         */
        readonly modifyRightsRequest: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ReadArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `ReadArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ReadArgumentData`.
     * @returns {ReadArgumentData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ReadArgumentData]: ReadArgumentData[_K] }>
    ): ReadArgumentData {
        return new ReadArgumentData(
            _o.object,
            _o.selection,
            _o.modifyRightsRequest,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `selection`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_selection() {
        return EntryInformationSelection._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `modifyRightsRequest`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_modifyRightsRequest() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of ReadArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ReadArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "selection",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "modifyRightsRequest",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ReadArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ReadArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ReadArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ReadArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_ReadArgumentData: $.ASN1Decoder<
    ReadArgumentData
> | null = null;
let _cached_encoder_for_ReadArgumentData: $.ASN1Encoder<
    ReadArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ReadArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ReadArgumentData} The decoded data structure.
 */
export function _decode_ReadArgumentData(el: _Element) {
    if (!_cached_decoder_for_ReadArgumentData) {
        _cached_decoder_for_ReadArgumentData = function (
            el: _Element
        ): ReadArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let selection: OPTIONAL<EntryInformationSelection> =
                ReadArgumentData._default_value_for_selection;
            let modifyRightsRequest: OPTIONAL<BOOLEAN> =
                ReadArgumentData._default_value_for_modifyRightsRequest;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                ReadArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                ReadArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                ReadArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                ReadArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                ReadArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                selection: (_el: _Element): void => {
                    selection = $._decode_explicit<EntryInformationSelection>(
                        () => _decode_EntryInformationSelection
                    )(_el);
                },
                modifyRightsRequest: (_el: _Element): void => {
                    modifyRightsRequest = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ReadArgumentData,
                _extension_additions_list_spec_for_ReadArgumentData,
                _root_component_type_list_2_spec_for_ReadArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ReadArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                selection,
                modifyRightsRequest,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_ReadArgumentData(el);
}
/**
 * @summary Encodes a(n) ReadArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ReadArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_ReadArgumentData(
    value: ReadArgumentData,
    elGetter: $.ASN1Encoder<ReadArgumentData>
) {
    if (!_cached_encoder_for_ReadArgumentData) {
        _cached_encoder_for_ReadArgumentData = function (
            value: ReadArgumentData,
            elGetter: $.ASN1Encoder<ReadArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                            /* IF_DEFAULT */ value.selection === undefined ||
                            $.deepEq(
                                value.selection,
                                ReadArgumentData._default_value_for_selection
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_EntryInformationSelection,
                                      $.BER
                                  )(value.selection, $.BER),
                            /* IF_DEFAULT */ value.modifyRightsRequest ===
                                undefined ||
                            $.deepEq(
                                value.modifyRightsRequest,
                                ReadArgumentData._default_value_for_modifyRightsRequest
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.modifyRightsRequest, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                ReadArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                ReadArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                ReadArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                ReadArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                ReadArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ReadArgumentData(value, elGetter);
}

export type ReadArgument<> = OPTIONALLY_PROTECTED<ReadArgumentData>; // DefinedType
let _cached_decoder_for_ReadArgument: $.ASN1Decoder<ReadArgument> | null = null;
let _cached_encoder_for_ReadArgument: $.ASN1Encoder<ReadArgument> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ReadArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ReadArgument} The decoded data structure.
 */
export function _decode_ReadArgument(el: _Element) {
    if (!_cached_decoder_for_ReadArgument) {
        _cached_decoder_for_ReadArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            ReadArgumentData
        >(_decode_ReadArgumentData);
    }
    return _cached_decoder_for_ReadArgument(el);
}
/**
 * @summary Encodes a(n) ReadArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ReadArgument, encoded as an ASN.1 Element.
 */
export function _encode_ReadArgument(
    value: ReadArgument,
    elGetter: $.ASN1Encoder<ReadArgument>
) {
    if (!_cached_encoder_for_ReadArgument) {
        _cached_encoder_for_ReadArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            ReadArgumentData
        >(_encode_ReadArgumentData);
    }
    return _cached_encoder_for_ReadArgument(value, elGetter);
}

/**
 * @summary EntryInformation_information_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryInformation-information-Item ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type EntryInformation_information_Item =
    | { attributeType: AttributeType } /* CHOICE_ALT_ROOT */
    | { attribute: Attribute } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_EntryInformation_information_Item: $.ASN1Decoder<
    EntryInformation_information_Item
> | null = null;
let _cached_encoder_for_EntryInformation_information_Item: $.ASN1Encoder<
    EntryInformation_information_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryInformation_information_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryInformation_information_Item} The decoded data structure.
 */
export function _decode_EntryInformation_information_Item(el: _Element) {
    if (!_cached_decoder_for_EntryInformation_information_Item) {
        _cached_decoder_for_EntryInformation_information_Item = $._decode_extensible_choice<
            EntryInformation_information_Item
        >({
            "UNIVERSAL 6": ["attributeType", _decode_AttributeType],
            "UNIVERSAL 16": ["attribute", _decode_Attribute],
        });
    }
    return _cached_decoder_for_EntryInformation_information_Item(el);
}
/**
 * @summary Encodes a(n) EntryInformation_information_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryInformation_information_Item, encoded as an ASN.1 Element.
 */
export function _encode_EntryInformation_information_Item(
    value: EntryInformation_information_Item,
    elGetter: $.ASN1Encoder<EntryInformation_information_Item>
) {
    if (!_cached_encoder_for_EntryInformation_information_Item) {
        _cached_encoder_for_EntryInformation_information_Item = $._encode_choice<
            EntryInformation_information_Item
        >(
            {
                attributeType: _encode_AttributeType,
                attribute: _encode_Attribute,
            },
            $.BER
        );
    }
    return _cached_encoder_for_EntryInformation_information_Item(
        value,
        elGetter
    );
}

/**
 * @summary EntryInformation
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryInformation ::= SEQUENCE {
 *   name                  Name,
 *   fromEntry             BOOLEAN DEFAULT TRUE,
 *   information           SET SIZE (1..MAX) OF CHOICE {
 *     attributeType         AttributeType,
 *     attribute             Attribute{{SupportedAttributes}},
 *     ...} OPTIONAL,
 *   incompleteEntry  [3]  BOOLEAN DEFAULT FALSE,
 *   partialName      [4]  BOOLEAN DEFAULT FALSE,
 *   derivedEntry     [5]  BOOLEAN DEFAULT FALSE,
 *   ... }
 * ```
 *
 * @class
 */
export class EntryInformation {
    constructor(
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: Name,
        /**
         * @summary `fromEntry`.
         * @public
         * @readonly
         */
        readonly fromEntry: OPTIONAL<BOOLEAN>,
        /**
         * @summary `information`.
         * @public
         * @readonly
         */
        readonly information: OPTIONAL<EntryInformation_information_Item[]>,
        /**
         * @summary `incompleteEntry`.
         * @public
         * @readonly
         */
        readonly incompleteEntry: OPTIONAL<BOOLEAN>,
        /**
         * @summary `partialName`.
         * @public
         * @readonly
         */
        readonly partialName: OPTIONAL<BOOLEAN>,
        /**
         * @summary `derivedEntry`.
         * @public
         * @readonly
         */
        readonly derivedEntry: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a EntryInformation
     * @description
     *
     * This takes an `object` and converts it to a `EntryInformation`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `EntryInformation`.
     * @returns {EntryInformation}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof EntryInformation]: EntryInformation[_K] }>
    ): EntryInformation {
        return new EntryInformation(
            _o.name,
            _o.fromEntry,
            _o.information,
            _o.incompleteEntry,
            _o.partialName,
            _o.derivedEntry,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `fromEntry`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_fromEntry() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `incompleteEntry`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_incompleteEntry() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `partialName`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_partialName() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `derivedEntry`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_derivedEntry() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of EntryInformation
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_EntryInformation: $.ComponentSpec[] = [
    new $.ComponentSpec("name", false, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "fromEntry",
        true,
        $.hasTag(_TagClass.universal, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "information",
        true,
        $.hasTag(_TagClass.universal, 17),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "incompleteEntry",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "partialName",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "derivedEntry",
        true,
        $.hasTag(_TagClass.context, 5),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of EntryInformation
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_EntryInformation: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of EntryInformation
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_EntryInformation: $.ComponentSpec[] = [];
let _cached_decoder_for_EntryInformation: $.ASN1Decoder<
    EntryInformation
> | null = null;
let _cached_encoder_for_EntryInformation: $.ASN1Encoder<
    EntryInformation
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryInformation
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryInformation} The decoded data structure.
 */
export function _decode_EntryInformation(el: _Element) {
    if (!_cached_decoder_for_EntryInformation) {
        _cached_decoder_for_EntryInformation = function (
            el: _Element
        ): EntryInformation {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let name!: Name;
            let fromEntry: OPTIONAL<BOOLEAN> =
                EntryInformation._default_value_for_fromEntry;
            let information: OPTIONAL<EntryInformation_information_Item[]>;
            let incompleteEntry: OPTIONAL<BOOLEAN> =
                EntryInformation._default_value_for_incompleteEntry;
            let partialName: OPTIONAL<BOOLEAN> =
                EntryInformation._default_value_for_partialName;
            let derivedEntry: OPTIONAL<BOOLEAN> =
                EntryInformation._default_value_for_derivedEntry;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                name: (_el: _Element): void => {
                    name = _decode_Name(_el);
                },
                fromEntry: (_el: _Element): void => {
                    fromEntry = $._decodeBoolean(_el);
                },
                information: (_el: _Element): void => {
                    information = $._decodeSetOf<
                        EntryInformation_information_Item
                    >(() => _decode_EntryInformation_information_Item)(_el);
                },
                incompleteEntry: (_el: _Element): void => {
                    incompleteEntry = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                partialName: (_el: _Element): void => {
                    partialName = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                derivedEntry: (_el: _Element): void => {
                    derivedEntry = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_EntryInformation,
                _extension_additions_list_spec_for_EntryInformation,
                _root_component_type_list_2_spec_for_EntryInformation,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new EntryInformation(
                /* SEQUENCE_CONSTRUCTOR_CALL */ name,
                fromEntry,
                information,
                incompleteEntry,
                partialName,
                derivedEntry,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_EntryInformation(el);
}
/**
 * @summary Encodes a(n) EntryInformation into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryInformation, encoded as an ASN.1 Element.
 */
export function _encode_EntryInformation(
    value: EntryInformation,
    elGetter: $.ASN1Encoder<EntryInformation>
) {
    if (!_cached_encoder_for_EntryInformation) {
        _cached_encoder_for_EntryInformation = function (
            value: EntryInformation,
            elGetter: $.ASN1Encoder<EntryInformation>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_Name(value.name, $.BER),
                            /* IF_DEFAULT */ value.fromEntry === undefined ||
                            $.deepEq(
                                value.fromEntry,
                                EntryInformation._default_value_for_fromEntry
                            )
                                ? undefined
                                : $._encodeBoolean(value.fromEntry, $.BER),
                            /* IF_ABSENT  */ value.information === undefined
                                ? undefined
                                : $._encodeSetOf<
                                      EntryInformation_information_Item
                                  >(
                                      () =>
                                          _encode_EntryInformation_information_Item,
                                      $.BER
                                  )(value.information, $.BER),
                            /* IF_DEFAULT */ value.incompleteEntry ===
                                undefined ||
                            $.deepEq(
                                value.incompleteEntry,
                                EntryInformation._default_value_for_incompleteEntry
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.incompleteEntry, $.BER),
                            /* IF_DEFAULT */ value.partialName === undefined ||
                            $.deepEq(
                                value.partialName,
                                EntryInformation._default_value_for_partialName
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.partialName, $.BER),
                            /* IF_DEFAULT */ value.derivedEntry === undefined ||
                            $.deepEq(
                                value.derivedEntry,
                                EntryInformation._default_value_for_derivedEntry
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      5,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.derivedEntry, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_EntryInformation(value, elGetter);
}

/**
 * @summary ModifyRights_Item_item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyRights-Item-item ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type ModifyRights_Item_item =
    | { entry: NULL } /* CHOICE_ALT_ROOT */
    | { attribute: AttributeType } /* CHOICE_ALT_ROOT */
    | { value: AttributeValueAssertion } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_ModifyRights_Item_item: $.ASN1Decoder<
    ModifyRights_Item_item
> | null = null;
let _cached_encoder_for_ModifyRights_Item_item: $.ASN1Encoder<
    ModifyRights_Item_item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyRights_Item_item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyRights_Item_item} The decoded data structure.
 */
export function _decode_ModifyRights_Item_item(el: _Element) {
    if (!_cached_decoder_for_ModifyRights_Item_item) {
        _cached_decoder_for_ModifyRights_Item_item = $._decode_extensible_choice<
            ModifyRights_Item_item
        >({
            "CONTEXT 0": [
                "entry",
                $._decode_explicit<NULL>(() => $._decodeNull),
            ],
            "CONTEXT 1": [
                "attribute",
                $._decode_explicit<AttributeType>(() => _decode_AttributeType),
            ],
            "CONTEXT 2": [
                "value",
                $._decode_explicit<AttributeValueAssertion>(
                    () => _decode_AttributeValueAssertion
                ),
            ],
        });
    }
    return _cached_decoder_for_ModifyRights_Item_item(el);
}
/**
 * @summary Encodes a(n) ModifyRights_Item_item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyRights_Item_item, encoded as an ASN.1 Element.
 */
export function _encode_ModifyRights_Item_item(
    value: ModifyRights_Item_item,
    elGetter: $.ASN1Encoder<ModifyRights_Item_item>
) {
    if (!_cached_encoder_for_ModifyRights_Item_item) {
        _cached_encoder_for_ModifyRights_Item_item = $._encode_choice<
            ModifyRights_Item_item
        >(
            {
                entry: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => $._encodeNull,
                    $.BER
                ),
                attribute: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => _encode_AttributeType,
                    $.BER
                ),
                value: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => _encode_AttributeValueAssertion,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_ModifyRights_Item_item(value, elGetter);
}

/**
 * @summary ModifyRights_Item_permission
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyRights-Item-permission ::= BIT STRING { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type ModifyRights_Item_permission = BIT_STRING;
/**
 * @summary ModifyRights_Item_permission_add
 * @constant
 */
export const ModifyRights_Item_permission_add: number = 0; /* LONG_NAMED_BIT */
/**
 * @summary ModifyRights_Item_permission_remove
 * @constant
 */
export const ModifyRights_Item_permission_remove: number = 1; /* LONG_NAMED_BIT */
/**
 * @summary ModifyRights_Item_permission_rename
 * @constant
 */
export const ModifyRights_Item_permission_rename: number = 2; /* LONG_NAMED_BIT */
/**
 * @summary ModifyRights_Item_permission_move
 * @constant
 */
export const ModifyRights_Item_permission_move: number = 3; /* LONG_NAMED_BIT */
let _cached_decoder_for_ModifyRights_Item_permission: $.ASN1Decoder<
    ModifyRights_Item_permission
> | null = null;
let _cached_encoder_for_ModifyRights_Item_permission: $.ASN1Encoder<
    ModifyRights_Item_permission
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyRights_Item_permission
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyRights_Item_permission} The decoded data structure.
 */
export function _decode_ModifyRights_Item_permission(el: _Element) {
    if (!_cached_decoder_for_ModifyRights_Item_permission) {
        _cached_decoder_for_ModifyRights_Item_permission = $._decodeBitString;
    }
    return _cached_decoder_for_ModifyRights_Item_permission(el);
}
/**
 * @summary Encodes a(n) ModifyRights_Item_permission into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyRights_Item_permission, encoded as an ASN.1 Element.
 */
export function _encode_ModifyRights_Item_permission(
    value: ModifyRights_Item_permission,
    elGetter: $.ASN1Encoder<ModifyRights_Item_permission>
) {
    if (!_cached_encoder_for_ModifyRights_Item_permission) {
        _cached_encoder_for_ModifyRights_Item_permission = $._encodeBitString;
    }
    return _cached_encoder_for_ModifyRights_Item_permission(value, elGetter);
}

/**
 * @summary ModifyRights_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyRights-Item ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class ModifyRights_Item {
    constructor(
        /**
         * @summary `item`.
         * @public
         * @readonly
         */
        readonly item: ModifyRights_Item_item,
        /**
         * @summary `permission`.
         * @public
         * @readonly
         */
        readonly permission: ModifyRights_Item_permission,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a ModifyRights_Item
     * @description
     *
     * This takes an `object` and converts it to a `ModifyRights_Item`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ModifyRights_Item`.
     * @returns {ModifyRights_Item}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ModifyRights_Item]: ModifyRights_Item[_K] }>
    ): ModifyRights_Item {
        return new ModifyRights_Item(
            _o.item,
            _o.permission,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of ModifyRights_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ModifyRights_Item: $.ComponentSpec[] = [
    new $.ComponentSpec("item", false, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "permission",
        false,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ModifyRights_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ModifyRights_Item: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of ModifyRights_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ModifyRights_Item: $.ComponentSpec[] = [];
let _cached_decoder_for_ModifyRights_Item: $.ASN1Decoder<
    ModifyRights_Item
> | null = null;
let _cached_encoder_for_ModifyRights_Item: $.ASN1Encoder<
    ModifyRights_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyRights_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyRights_Item} The decoded data structure.
 */
export function _decode_ModifyRights_Item(el: _Element) {
    if (!_cached_decoder_for_ModifyRights_Item) {
        _cached_decoder_for_ModifyRights_Item = function (
            el: _Element
        ): ModifyRights_Item {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 2) {
                throw new _ConstructionError(
                    "ModifyRights-Item contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "item";
            sequence[1].name = "permission";
            let item!: ModifyRights_Item_item;
            let permission!: ModifyRights_Item_permission;
            item = _decode_ModifyRights_Item_item(sequence[0]);
            permission = $._decode_explicit<ModifyRights_Item_permission>(
                () => _decode_ModifyRights_Item_permission
            )(sequence[1]);
            return new ModifyRights_Item(item, permission, sequence.slice(2));
        };
    }
    return _cached_decoder_for_ModifyRights_Item(el);
}
/**
 * @summary Encodes a(n) ModifyRights_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyRights_Item, encoded as an ASN.1 Element.
 */
export function _encode_ModifyRights_Item(
    value: ModifyRights_Item,
    elGetter: $.ASN1Encoder<ModifyRights_Item>
) {
    if (!_cached_encoder_for_ModifyRights_Item) {
        _cached_encoder_for_ModifyRights_Item = function (
            value: ModifyRights_Item,
            elGetter: $.ASN1Encoder<ModifyRights_Item>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_ModifyRights_Item_item(
                                value.item,
                                $.BER
                            ),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                3,
                                () => _encode_ModifyRights_Item_permission,
                                $.BER
                            )(value.permission, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ModifyRights_Item(value, elGetter);
}

export type ModifyRights<> = ModifyRights_Item[]; // SetOfType
let _cached_decoder_for_ModifyRights: $.ASN1Decoder<ModifyRights> | null = null;
let _cached_encoder_for_ModifyRights: $.ASN1Encoder<ModifyRights> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyRights
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyRights} The decoded data structure.
 */
export function _decode_ModifyRights(el: _Element) {
    if (!_cached_decoder_for_ModifyRights) {
        _cached_decoder_for_ModifyRights = $._decodeSetOf<ModifyRights_Item>(
            () => _decode_ModifyRights_Item
        );
    }
    return _cached_decoder_for_ModifyRights(el);
}
/**
 * @summary Encodes a(n) ModifyRights into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyRights, encoded as an ASN.1 Element.
 */
export function _encode_ModifyRights(
    value: ModifyRights,
    elGetter: $.ASN1Encoder<ModifyRights>
) {
    if (!_cached_encoder_for_ModifyRights) {
        _cached_encoder_for_ModifyRights = $._encodeSetOf<ModifyRights_Item>(
            () => _encode_ModifyRights_Item,
            $.BER
        );
    }
    return _cached_encoder_for_ModifyRights(value, elGetter);
}

/**
 * @summary CommonResults
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * CommonResults ::= SET {
 *   securityParameters  [30]  SecurityParameters  OPTIONAL,
 *   performer           [29]  DistinguishedName   OPTIONAL,
 *   aliasDereferenced   [28]  BOOLEAN             DEFAULT FALSE,
 *   notification        [27]  SEQUENCE SIZE (1..MAX) OF Attribute
 *                             {{SupportedAttributes}} OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class CommonResults {
    constructor(
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<SecurityParameters>,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<DistinguishedName>,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<BOOLEAN>,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a CommonResults
     * @description
     *
     * This takes an `object` and converts it to a `CommonResults`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `CommonResults`.
     * @returns {CommonResults}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof CommonResults]: CommonResults[_K] }>
    ): CommonResults {
        return new CommonResults(
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of CommonResults
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_CommonResults: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of CommonResults
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_CommonResults: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of CommonResults
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_CommonResults: $.ComponentSpec[] = [];
let _cached_decoder_for_CommonResults: $.ASN1Decoder<
    CommonResults
> | null = null;
let _cached_encoder_for_CommonResults: $.ASN1Encoder<
    CommonResults
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CommonResults
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CommonResults} The decoded data structure.
 */
export function _decode_CommonResults(el: _Element) {
    if (!_cached_decoder_for_CommonResults) {
        _cached_decoder_for_CommonResults = function (
            el: _Element
        ): CommonResults {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                CommonResults._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_CommonResults,
                _extension_additions_list_spec_for_CommonResults,
                _root_component_type_list_2_spec_for_CommonResults,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new CommonResults(
                /* SET_CONSTRUCTOR_CALL */ securityParameters,
                performer,
                aliasDereferenced,
                notification,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_CommonResults(el);
}
/**
 * @summary Encodes a(n) CommonResults into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CommonResults, encoded as an ASN.1 Element.
 */
export function _encode_CommonResults(
    value: CommonResults,
    elGetter: $.ASN1Encoder<CommonResults>
) {
    if (!_cached_encoder_for_CommonResults) {
        _cached_encoder_for_CommonResults = function (
            value: CommonResults,
            elGetter: $.ASN1Encoder<CommonResults>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                CommonResults._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_CommonResults(value, elGetter);
}

/**
 * @summary ReadResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ReadResultData ::= SET {
 *   entry         [0]  EntryInformation,
 *   modifyRights  [1]  ModifyRights OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF      CommonResults }
 * ```
 *
 * @class
 */
export class ReadResultData {
    constructor(
        /**
         * @summary `entry`.
         * @public
         * @readonly
         */
        readonly entry: EntryInformation,
        /**
         * @summary `modifyRights`.
         * @public
         * @readonly
         */
        readonly modifyRights: OPTIONAL<ModifyRights>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ReadResultData
     * @description
     *
     * This takes an `object` and converts it to a `ReadResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ReadResultData`.
     * @returns {ReadResultData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ReadResultData]: ReadResultData[_K] }>
    ): ReadResultData {
        return new ReadResultData(
            _o.entry,
            _o.modifyRights,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ReadResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ReadResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "entry",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "modifyRights",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ReadResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ReadResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ReadResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ReadResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_ReadResultData: $.ASN1Decoder<
    ReadResultData
> | null = null;
let _cached_encoder_for_ReadResultData: $.ASN1Encoder<
    ReadResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ReadResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ReadResultData} The decoded data structure.
 */
export function _decode_ReadResultData(el: _Element) {
    if (!_cached_decoder_for_ReadResultData) {
        _cached_decoder_for_ReadResultData = function (
            el: _Element
        ): ReadResultData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let entry!: EntryInformation;
            let modifyRights: OPTIONAL<ModifyRights>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ReadResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                entry: (_el: _Element): void => {
                    entry = $._decode_explicit<EntryInformation>(
                        () => _decode_EntryInformation
                    )(_el);
                },
                modifyRights: (_el: _Element): void => {
                    modifyRights = $._decode_explicit<ModifyRights>(
                        () => _decode_ModifyRights
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ReadResultData,
                _extension_additions_list_spec_for_ReadResultData,
                _root_component_type_list_2_spec_for_ReadResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ReadResultData(
                /* SET_CONSTRUCTOR_CALL */ entry,
                modifyRights,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ReadResultData(el);
}
/**
 * @summary Encodes a(n) ReadResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ReadResultData, encoded as an ASN.1 Element.
 */
export function _encode_ReadResultData(
    value: ReadResultData,
    elGetter: $.ASN1Encoder<ReadResultData>
) {
    if (!_cached_encoder_for_ReadResultData) {
        _cached_encoder_for_ReadResultData = function (
            value: ReadResultData,
            elGetter: $.ASN1Encoder<ReadResultData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_EntryInformation,
                                $.BER
                            )(value.entry, $.BER),
                            /* IF_ABSENT  */ value.modifyRights === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_ModifyRights,
                                      $.BER
                                  )(value.modifyRights, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ReadResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ReadResultData(value, elGetter);
}

export type ReadResult<> = OPTIONALLY_PROTECTED<ReadResultData>; // DefinedType
let _cached_decoder_for_ReadResult: $.ASN1Decoder<ReadResult> | null = null;
let _cached_encoder_for_ReadResult: $.ASN1Encoder<ReadResult> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ReadResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ReadResult} The decoded data structure.
 */
export function _decode_ReadResult(el: _Element) {
    if (!_cached_decoder_for_ReadResult) {
        _cached_decoder_for_ReadResult = _get_decoder_for_OPTIONALLY_PROTECTED<
            ReadResultData
        >(_decode_ReadResultData);
    }
    return _cached_decoder_for_ReadResult(el);
}
/**
 * @summary Encodes a(n) ReadResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ReadResult, encoded as an ASN.1 Element.
 */
export function _encode_ReadResult(
    value: ReadResult,
    elGetter: $.ASN1Encoder<ReadResult>
) {
    if (!_cached_encoder_for_ReadResult) {
        _cached_encoder_for_ReadResult = _get_encoder_for_OPTIONALLY_PROTECTED<
            ReadResultData
        >(_encode_ReadResultData);
    }
    return _cached_encoder_for_ReadResult(value, elGetter);
}

/**
 * @summary AttributeProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AttributeProblem  ::=  INTEGER {
 *   noSuchAttributeOrValue        (1),
 *   invalidAttributeSyntax        (2),
 *   undefinedAttributeType        (3),
 *   inappropriateMatching         (4),
 *   constraintViolation           (5),
 *   attributeOrValueAlreadyExists (6),
 *   contextViolation              (7) }
 * ```
 */
export type AttributeProblem = INTEGER;
/**
 * @summary AttributeProblem_noSuchAttributeOrValue
 * @constant
 * @type {number}
 */
export const AttributeProblem_noSuchAttributeOrValue: AttributeProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AttributeProblem_invalidAttributeSyntax
 * @constant
 * @type {number}
 */
export const AttributeProblem_invalidAttributeSyntax: AttributeProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AttributeProblem_undefinedAttributeType
 * @constant
 * @type {number}
 */
export const AttributeProblem_undefinedAttributeType: AttributeProblem = 3; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AttributeProblem_inappropriateMatching
 * @constant
 * @type {number}
 */
export const AttributeProblem_inappropriateMatching: AttributeProblem = 4; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AttributeProblem_constraintViolation
 * @constant
 * @type {number}
 */
export const AttributeProblem_constraintViolation: AttributeProblem = 5; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AttributeProblem_attributeOrValueAlreadyExists
 * @constant
 * @type {number}
 */
export const AttributeProblem_attributeOrValueAlreadyExists: AttributeProblem = 6; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AttributeProblem_contextViolation
 * @constant
 * @type {number}
 */
export const AttributeProblem_contextViolation: AttributeProblem = 7; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_AttributeProblem: $.ASN1Decoder<
    AttributeProblem
> | null = null;
let _cached_encoder_for_AttributeProblem: $.ASN1Encoder<
    AttributeProblem
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AttributeProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AttributeProblem} The decoded data structure.
 */
export function _decode_AttributeProblem(el: _Element) {
    if (!_cached_decoder_for_AttributeProblem) {
        _cached_decoder_for_AttributeProblem = $._decodeInteger;
    }
    return _cached_decoder_for_AttributeProblem(el);
}
/**
 * @summary Encodes a(n) AttributeProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AttributeProblem, encoded as an ASN.1 Element.
 */
export function _encode_AttributeProblem(
    value: AttributeProblem,
    elGetter: $.ASN1Encoder<AttributeProblem>
) {
    if (!_cached_encoder_for_AttributeProblem) {
        _cached_encoder_for_AttributeProblem = $._encodeInteger;
    }
    return _cached_encoder_for_AttributeProblem(value, elGetter);
}

/**
 * @summary AttributeErrorData_problems_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AttributeErrorData-problems-Item ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class AttributeErrorData_problems_Item {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: AttributeProblem,
        /**
         * @summary `type_`.
         * @public
         * @readonly
         */
        readonly type_: AttributeType,
        /**
         * @summary `value`.
         * @public
         * @readonly
         */
        readonly value: OPTIONAL<AttributeValue>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a AttributeErrorData_problems_Item
     * @description
     *
     * This takes an `object` and converts it to a `AttributeErrorData_problems_Item`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AttributeErrorData_problems_Item`.
     * @returns {AttributeErrorData_problems_Item}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof AttributeErrorData_problems_Item]: AttributeErrorData_problems_Item[_K];
            }
        >
    ): AttributeErrorData_problems_Item {
        return new AttributeErrorData_problems_Item(
            _o.problem,
            _o.type_,
            _o.value,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of AttributeErrorData_problems_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AttributeErrorData_problems_Item: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "type",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "value",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AttributeErrorData_problems_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AttributeErrorData_problems_Item: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of AttributeErrorData_problems_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AttributeErrorData_problems_Item: $.ComponentSpec[] = [];
let _cached_decoder_for_AttributeErrorData_problems_Item: $.ASN1Decoder<
    AttributeErrorData_problems_Item
> | null = null;
let _cached_encoder_for_AttributeErrorData_problems_Item: $.ASN1Encoder<
    AttributeErrorData_problems_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AttributeErrorData_problems_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AttributeErrorData_problems_Item} The decoded data structure.
 */
export function _decode_AttributeErrorData_problems_Item(el: _Element) {
    if (!_cached_decoder_for_AttributeErrorData_problems_Item) {
        _cached_decoder_for_AttributeErrorData_problems_Item = function (
            el: _Element
        ): AttributeErrorData_problems_Item {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let problem!: AttributeProblem;
            let type_!: AttributeType;
            let value: OPTIONAL<AttributeValue>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = $._decode_explicit<AttributeProblem>(
                        () => _decode_AttributeProblem
                    )(_el);
                },
                type: (_el: _Element): void => {
                    type_ = $._decode_explicit<AttributeType>(
                        () => _decode_AttributeType
                    )(_el);
                },
                value: (_el: _Element): void => {
                    value = $._decode_explicit<AttributeValue>(
                        () => _decode_AttributeValue
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AttributeErrorData_problems_Item,
                _extension_additions_list_spec_for_AttributeErrorData_problems_Item,
                _root_component_type_list_2_spec_for_AttributeErrorData_problems_Item,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AttributeErrorData_problems_Item(
                /* SEQUENCE_CONSTRUCTOR_CALL */ problem,
                type_,
                value,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_AttributeErrorData_problems_Item(el);
}
/**
 * @summary Encodes a(n) AttributeErrorData_problems_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AttributeErrorData_problems_Item, encoded as an ASN.1 Element.
 */
export function _encode_AttributeErrorData_problems_Item(
    value: AttributeErrorData_problems_Item,
    elGetter: $.ASN1Encoder<AttributeErrorData_problems_Item>
) {
    if (!_cached_encoder_for_AttributeErrorData_problems_Item) {
        _cached_encoder_for_AttributeErrorData_problems_Item = function (
            value: AttributeErrorData_problems_Item,
            elGetter: $.ASN1Encoder<AttributeErrorData_problems_Item>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_AttributeProblem,
                                $.BER
                            )(value.problem, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_AttributeType,
                                $.BER
                            )(value.type_, $.BER),
                            /* IF_ABSENT  */ value.value === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_AttributeValue,
                                      $.BER
                                  )(value.value, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AttributeErrorData_problems_Item(
        value,
        elGetter
    );
}

/**
 * @summary AttributeErrorData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AttributeErrorData ::= SET {
 *   object   [0]  Name,
 *   problems [1]  SET OF SEQUENCE {
 *     problem  [0]  AttributeProblem,
 *     type     [1]  AttributeType,
 *     value    [2]  AttributeValue OPTIONAL,
 *     ...},
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResults }
 * ```
 *
 * @class
 */
export class AttributeErrorData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary `problems`.
         * @public
         * @readonly
         */
        readonly problems: AttributeErrorData_problems_Item[],
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AttributeErrorData
     * @description
     *
     * This takes an `object` and converts it to a `AttributeErrorData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AttributeErrorData`.
     * @returns {AttributeErrorData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof AttributeErrorData]: AttributeErrorData[_K] }
        >
    ): AttributeErrorData {
        return new AttributeErrorData(
            _o.object,
            _o.problems,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of AttributeErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AttributeErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "problems",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AttributeErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AttributeErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AttributeErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AttributeErrorData: $.ComponentSpec[] = [];
let _cached_decoder_for_AttributeErrorData: $.ASN1Decoder<
    AttributeErrorData
> | null = null;
let _cached_encoder_for_AttributeErrorData: $.ASN1Encoder<
    AttributeErrorData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AttributeErrorData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AttributeErrorData} The decoded data structure.
 */
export function _decode_AttributeErrorData(el: _Element) {
    if (!_cached_decoder_for_AttributeErrorData) {
        _cached_decoder_for_AttributeErrorData = function (
            el: _Element
        ): AttributeErrorData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let problems!: AttributeErrorData_problems_Item[];
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                AttributeErrorData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                problems: (_el: _Element): void => {
                    problems = $._decode_explicit<
                        AttributeErrorData_problems_Item[]
                    >(() =>
                        $._decodeSetOf<AttributeErrorData_problems_Item>(
                            () => _decode_AttributeErrorData_problems_Item
                        )
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AttributeErrorData,
                _extension_additions_list_spec_for_AttributeErrorData,
                _root_component_type_list_2_spec_for_AttributeErrorData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AttributeErrorData(
                /* SET_CONSTRUCTOR_CALL */ object,
                problems,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_AttributeErrorData(el);
}
/**
 * @summary Encodes a(n) AttributeErrorData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AttributeErrorData, encoded as an ASN.1 Element.
 */
export function _encode_AttributeErrorData(
    value: AttributeErrorData,
    elGetter: $.ASN1Encoder<AttributeErrorData>
) {
    if (!_cached_encoder_for_AttributeErrorData) {
        _cached_encoder_for_AttributeErrorData = function (
            value: AttributeErrorData,
            elGetter: $.ASN1Encoder<AttributeErrorData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () =>
                                    $._encodeSetOf<
                                        AttributeErrorData_problems_Item
                                    >(
                                        () =>
                                            _encode_AttributeErrorData_problems_Item,
                                        $.BER
                                    ),
                                $.BER
                            )(value.problems, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                AttributeErrorData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AttributeErrorData(value, elGetter);
}

/**
 * @summary attributeError
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * attributeError ERROR ::= {
 *   PARAMETER     OPTIONALLY-PROTECTED { AttributeErrorData }
 *   CODE          id-errcode-attributeError }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const attributeError: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<
            AttributeErrorData
        >(_decode_AttributeErrorData),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<
            AttributeErrorData
        >(_encode_AttributeErrorData),
    },
    "&errorCode": id_errcode_attributeError /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary NameProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * NameProblem  ::=  INTEGER {
 *   noSuchObject              (1),
 *   aliasProblem              (2),
 *   invalidAttributeSyntax    (3),
 *   aliasDereferencingProblem (4)
 *   -- not to be used         (5)-- }
 * ```
 */
export type NameProblem = INTEGER;
/**
 * @summary NameProblem_noSuchObject
 * @constant
 * @type {number}
 */
export const NameProblem_noSuchObject: NameProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary NameProblem_aliasProblem
 * @constant
 * @type {number}
 */
export const NameProblem_aliasProblem: NameProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary NameProblem_invalidAttributeSyntax
 * @constant
 * @type {number}
 */
export const NameProblem_invalidAttributeSyntax: NameProblem = 3; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary NameProblem_aliasDereferencingProblem
 * @constant
 * @type {number}
 */
export const NameProblem_aliasDereferencingProblem: NameProblem = 4; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_NameProblem: $.ASN1Decoder<NameProblem> | null = null;
let _cached_encoder_for_NameProblem: $.ASN1Encoder<NameProblem> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) NameProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {NameProblem} The decoded data structure.
 */
export function _decode_NameProblem(el: _Element) {
    if (!_cached_decoder_for_NameProblem) {
        _cached_decoder_for_NameProblem = $._decodeInteger;
    }
    return _cached_decoder_for_NameProblem(el);
}
/**
 * @summary Encodes a(n) NameProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The NameProblem, encoded as an ASN.1 Element.
 */
export function _encode_NameProblem(
    value: NameProblem,
    elGetter: $.ASN1Encoder<NameProblem>
) {
    if (!_cached_encoder_for_NameProblem) {
        _cached_encoder_for_NameProblem = $._encodeInteger;
    }
    return _cached_encoder_for_NameProblem(value, elGetter);
}

/**
 * @summary NameErrorData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * NameErrorData ::= SET {
 *   problem  [0]  NameProblem,
 *   matched  [1]  Name,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResults }
 * ```
 *
 * @class
 */
export class NameErrorData {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: NameProblem,
        /**
         * @summary `matched`.
         * @public
         * @readonly
         */
        readonly matched: Name,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a NameErrorData
     * @description
     *
     * This takes an `object` and converts it to a `NameErrorData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `NameErrorData`.
     * @returns {NameErrorData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof NameErrorData]: NameErrorData[_K] }>
    ): NameErrorData {
        return new NameErrorData(
            _o.problem,
            _o.matched,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of NameErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_NameErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "matched",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of NameErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_NameErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of NameErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_NameErrorData: $.ComponentSpec[] = [];
let _cached_decoder_for_NameErrorData: $.ASN1Decoder<
    NameErrorData
> | null = null;
let _cached_encoder_for_NameErrorData: $.ASN1Encoder<
    NameErrorData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) NameErrorData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {NameErrorData} The decoded data structure.
 */
export function _decode_NameErrorData(el: _Element) {
    if (!_cached_decoder_for_NameErrorData) {
        _cached_decoder_for_NameErrorData = function (
            el: _Element
        ): NameErrorData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let problem!: NameProblem;
            let matched!: Name;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                NameErrorData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = $._decode_explicit<NameProblem>(
                        () => _decode_NameProblem
                    )(_el);
                },
                matched: (_el: _Element): void => {
                    matched = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_NameErrorData,
                _extension_additions_list_spec_for_NameErrorData,
                _root_component_type_list_2_spec_for_NameErrorData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new NameErrorData(
                /* SET_CONSTRUCTOR_CALL */ problem,
                matched,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_NameErrorData(el);
}
/**
 * @summary Encodes a(n) NameErrorData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The NameErrorData, encoded as an ASN.1 Element.
 */
export function _encode_NameErrorData(
    value: NameErrorData,
    elGetter: $.ASN1Encoder<NameErrorData>
) {
    if (!_cached_encoder_for_NameErrorData) {
        _cached_encoder_for_NameErrorData = function (
            value: NameErrorData,
            elGetter: $.ASN1Encoder<NameErrorData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_NameProblem,
                                $.BER
                            )(value.problem, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_Name,
                                $.BER
                            )(value.matched, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                NameErrorData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_NameErrorData(value, elGetter);
}

/**
 * @summary nameError
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * nameError ERROR ::= {
 *   PARAMETER     OPTIONALLY-PROTECTED { NameErrorData }
 *   CODE          id-errcode-nameError }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const nameError: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<NameErrorData>(
            _decode_NameErrorData
        ),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<NameErrorData>(
            _encode_NameErrorData
        ),
    },
    "&errorCode": id_errcode_nameError /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary ServiceErrorData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ServiceErrorData ::= SET {
 *   problem   [0]  ServiceProblem,
 *   ...,
 *   ...,
 *   COMPONENTS OF  CommonResults }
 * ```
 *
 * @class
 */
export class ServiceErrorData {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: ServiceProblem,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ServiceErrorData
     * @description
     *
     * This takes an `object` and converts it to a `ServiceErrorData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ServiceErrorData`.
     * @returns {ServiceErrorData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ServiceErrorData]: ServiceErrorData[_K] }>
    ): ServiceErrorData {
        return new ServiceErrorData(
            _o.problem,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ServiceErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ServiceErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ServiceErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ServiceErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ServiceErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ServiceErrorData: $.ComponentSpec[] = [];
let _cached_decoder_for_ServiceErrorData: $.ASN1Decoder<
    ServiceErrorData
> | null = null;
let _cached_encoder_for_ServiceErrorData: $.ASN1Encoder<
    ServiceErrorData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ServiceErrorData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ServiceErrorData} The decoded data structure.
 */
export function _decode_ServiceErrorData(el: _Element) {
    if (!_cached_decoder_for_ServiceErrorData) {
        _cached_decoder_for_ServiceErrorData = function (
            el: _Element
        ): ServiceErrorData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let problem!: ServiceProblem;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ServiceErrorData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = $._decode_explicit<ServiceProblem>(
                        () => _decode_ServiceProblem
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ServiceErrorData,
                _extension_additions_list_spec_for_ServiceErrorData,
                _root_component_type_list_2_spec_for_ServiceErrorData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ServiceErrorData(
                /* SET_CONSTRUCTOR_CALL */ problem,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ServiceErrorData(el);
}
/**
 * @summary Encodes a(n) ServiceErrorData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ServiceErrorData, encoded as an ASN.1 Element.
 */
export function _encode_ServiceErrorData(
    value: ServiceErrorData,
    elGetter: $.ASN1Encoder<ServiceErrorData>
) {
    if (!_cached_encoder_for_ServiceErrorData) {
        _cached_encoder_for_ServiceErrorData = function (
            value: ServiceErrorData,
            elGetter: $.ASN1Encoder<ServiceErrorData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_ServiceProblem,
                                $.BER
                            )(value.problem, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ServiceErrorData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ServiceErrorData(value, elGetter);
}

/**
 * @summary serviceError
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * serviceError ERROR ::= {
 *   PARAMETER   OPTIONALLY-PROTECTED { ServiceErrorData }
 *   CODE        id-errcode-serviceError }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const serviceError: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<
            ServiceErrorData
        >(_decode_ServiceErrorData),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<
            ServiceErrorData
        >(_encode_ServiceErrorData),
    },
    "&errorCode": id_errcode_serviceError /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary ReferralData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ReferralData ::= SET {
 *   candidate  [0] ContinuationReference,
 *   ...,
 *   ...,
 *   COMPONENTS OF  CommonResults }
 * ```
 *
 * @class
 */
export class ReferralData {
    constructor(
        /**
         * @summary `candidate`.
         * @public
         * @readonly
         */
        readonly candidate: ContinuationReference,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ReferralData
     * @description
     *
     * This takes an `object` and converts it to a `ReferralData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ReferralData`.
     * @returns {ReferralData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ReferralData]: ReferralData[_K] }>
    ): ReferralData {
        return new ReferralData(
            _o.candidate,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ReferralData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ReferralData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "candidate",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ReferralData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ReferralData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ReferralData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ReferralData: $.ComponentSpec[] = [];
let _cached_decoder_for_ReferralData: $.ASN1Decoder<ReferralData> | null = null;
let _cached_encoder_for_ReferralData: $.ASN1Encoder<ReferralData> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ReferralData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ReferralData} The decoded data structure.
 */
export function _decode_ReferralData(el: _Element) {
    if (!_cached_decoder_for_ReferralData) {
        _cached_decoder_for_ReferralData = function (
            el: _Element
        ): ReferralData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let candidate!: ContinuationReference;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ReferralData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                candidate: (_el: _Element): void => {
                    candidate = $._decode_explicit<ContinuationReference>(
                        () => _decode_ContinuationReference
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ReferralData,
                _extension_additions_list_spec_for_ReferralData,
                _root_component_type_list_2_spec_for_ReferralData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ReferralData(
                /* SET_CONSTRUCTOR_CALL */ candidate,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ReferralData(el);
}
/**
 * @summary Encodes a(n) ReferralData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ReferralData, encoded as an ASN.1 Element.
 */
export function _encode_ReferralData(
    value: ReferralData,
    elGetter: $.ASN1Encoder<ReferralData>
) {
    if (!_cached_encoder_for_ReferralData) {
        _cached_encoder_for_ReferralData = function (
            value: ReferralData,
            elGetter: $.ASN1Encoder<ReferralData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_ContinuationReference,
                                $.BER
                            )(value.candidate, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ReferralData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ReferralData(value, elGetter);
}

/**
 * @summary referral
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * referral ERROR ::= { -- not literally an "error"
 *   PARAMETER      OPTIONALLY-PROTECTED { ReferralData }
 *   CODE           id-errcode-referral }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const referral: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<ReferralData>(
            _decode_ReferralData
        ),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<ReferralData>(
            _encode_ReferralData
        ),
    },
    "&errorCode": id_errcode_referral /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary AbandonedProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonedProblem ::= ENUMERATED {
 *   pagingAbandoned (0) }
 * ```
 *
 * @enum {number}
 */
export enum _enum_for_AbandonedProblem {
    pagingAbandoned = 0,
}
/**
 * @summary AbandonedProblem
 */
export type AbandonedProblem = _enum_for_AbandonedProblem;
/**
 * @summary AbandonedProblem
 * @constant
 */
export const AbandonedProblem = _enum_for_AbandonedProblem;
/**
 * @summary AbandonedProblem_pagingAbandoned
 * @constant
 * @type {number}
 */
export const AbandonedProblem_pagingAbandoned: AbandonedProblem =
    AbandonedProblem.pagingAbandoned; /* LONG_NAMED_ENUMERATED_VALUE */
let _cached_decoder_for_AbandonedProblem: $.ASN1Decoder<
    AbandonedProblem
> | null = null;
let _cached_encoder_for_AbandonedProblem: $.ASN1Encoder<
    AbandonedProblem
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonedProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonedProblem} The decoded data structure.
 */
export function _decode_AbandonedProblem(el: _Element) {
    if (!_cached_decoder_for_AbandonedProblem) {
        _cached_decoder_for_AbandonedProblem = $._decodeEnumerated;
    }
    return _cached_decoder_for_AbandonedProblem(el);
}
/**
 * @summary Encodes a(n) AbandonedProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonedProblem, encoded as an ASN.1 Element.
 */
export function _encode_AbandonedProblem(
    value: AbandonedProblem,
    elGetter: $.ASN1Encoder<AbandonedProblem>
) {
    if (!_cached_encoder_for_AbandonedProblem) {
        _cached_encoder_for_AbandonedProblem = $._encodeEnumerated;
    }
    return _cached_encoder_for_AbandonedProblem(value, elGetter);
}

/**
 * @summary AbandonedData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonedData ::= SET {
 *     problem       AbandonedProblem OPTIONAL,
 *     ...,
 *     ...,
 *     COMPONENTS OF CommonResults }
 * ```
 *
 * @class
 */
export class AbandonedData {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: OPTIONAL<AbandonedProblem>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AbandonedData
     * @description
     *
     * This takes an `object` and converts it to a `AbandonedData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AbandonedData`.
     * @returns {AbandonedData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof AbandonedData]: AbandonedData[_K] }>
    ): AbandonedData {
        return new AbandonedData(
            _o.problem,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
    /**
     * @summary The enum used as the type of the component `problem`
     * @public
     * @static
     */

    public static _enum_for_problem = _enum_for_AbandonedProblem;
}
/**
 * @summary The Leading Root Component Types of AbandonedData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AbandonedData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        true,
        $.hasTag(_TagClass.universal, 10),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AbandonedData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AbandonedData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AbandonedData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AbandonedData: $.ComponentSpec[] = [];
let _cached_decoder_for_AbandonedData: $.ASN1Decoder<
    AbandonedData
> | null = null;
let _cached_encoder_for_AbandonedData: $.ASN1Encoder<
    AbandonedData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonedData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonedData} The decoded data structure.
 */
export function _decode_AbandonedData(el: _Element) {
    if (!_cached_decoder_for_AbandonedData) {
        _cached_decoder_for_AbandonedData = function (
            el: _Element
        ): AbandonedData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let problem: OPTIONAL<AbandonedProblem>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                AbandonedData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = _decode_AbandonedProblem(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AbandonedData,
                _extension_additions_list_spec_for_AbandonedData,
                _root_component_type_list_2_spec_for_AbandonedData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AbandonedData(
                /* SET_CONSTRUCTOR_CALL */ problem,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_AbandonedData(el);
}
/**
 * @summary Encodes a(n) AbandonedData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonedData, encoded as an ASN.1 Element.
 */
export function _encode_AbandonedData(
    value: AbandonedData,
    elGetter: $.ASN1Encoder<AbandonedData>
) {
    if (!_cached_encoder_for_AbandonedData) {
        _cached_encoder_for_AbandonedData = function (
            value: AbandonedData,
            elGetter: $.ASN1Encoder<AbandonedData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.problem === undefined
                                ? undefined
                                : _encode_AbandonedProblem(
                                      value.problem,
                                      $.BER
                                  ),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                AbandonedData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AbandonedData(value, elGetter);
}

/**
 * @summary abandoned
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * abandoned ERROR ::= {-- not literally an "error"
 *   PARAMETER     OPTIONALLY-PROTECTED { AbandonedData }
 *   CODE          id-errcode-abandoned }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const abandoned: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<AbandonedData>(
            _decode_AbandonedData
        ),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<AbandonedData>(
            _encode_AbandonedData
        ),
    },
    "&errorCode": id_errcode_abandoned /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary EncPwdInfo
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EncPwdInfo ::= SEQUENCE {
 *   algorithms     [0]  SEQUENCE OF AlgorithmIdentifier
 *                         {{SupportedAlgorithms}} OPTIONAL,
 *   pwdQualityRule [1]  SEQUENCE OF AttributeTypeAndValue OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class EncPwdInfo {
    constructor(
        /**
         * @summary `algorithms`.
         * @public
         * @readonly
         */
        readonly algorithms: OPTIONAL<AlgorithmIdentifier[]>,
        /**
         * @summary `pwdQualityRule`.
         * @public
         * @readonly
         */
        readonly pwdQualityRule: OPTIONAL<AttributeTypeAndValue[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a EncPwdInfo
     * @description
     *
     * This takes an `object` and converts it to a `EncPwdInfo`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `EncPwdInfo`.
     * @returns {EncPwdInfo}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof EncPwdInfo]: EncPwdInfo[_K] }>
    ): EncPwdInfo {
        return new EncPwdInfo(
            _o.algorithms,
            _o.pwdQualityRule,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of EncPwdInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_EncPwdInfo: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "algorithms",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "pwdQualityRule",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of EncPwdInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_EncPwdInfo: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of EncPwdInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_EncPwdInfo: $.ComponentSpec[] = [];
let _cached_decoder_for_EncPwdInfo: $.ASN1Decoder<EncPwdInfo> | null = null;
let _cached_encoder_for_EncPwdInfo: $.ASN1Encoder<EncPwdInfo> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EncPwdInfo
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EncPwdInfo} The decoded data structure.
 */
export function _decode_EncPwdInfo(el: _Element) {
    if (!_cached_decoder_for_EncPwdInfo) {
        _cached_decoder_for_EncPwdInfo = function (el: _Element): EncPwdInfo {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let algorithms: OPTIONAL<AlgorithmIdentifier[]>;
            let pwdQualityRule: OPTIONAL<AttributeTypeAndValue[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                algorithms: (_el: _Element): void => {
                    algorithms = $._decode_explicit<AlgorithmIdentifier[]>(() =>
                        $._decodeSequenceOf<AlgorithmIdentifier>(
                            () => _decode_AlgorithmIdentifier
                        )
                    )(_el);
                },
                pwdQualityRule: (_el: _Element): void => {
                    pwdQualityRule = $._decode_explicit<
                        AttributeTypeAndValue[]
                    >(() =>
                        $._decodeSequenceOf<AttributeTypeAndValue>(
                            () => _decode_AttributeTypeAndValue
                        )
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_EncPwdInfo,
                _extension_additions_list_spec_for_EncPwdInfo,
                _root_component_type_list_2_spec_for_EncPwdInfo,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new EncPwdInfo(
                /* SEQUENCE_CONSTRUCTOR_CALL */ algorithms,
                pwdQualityRule,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_EncPwdInfo(el);
}
/**
 * @summary Encodes a(n) EncPwdInfo into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EncPwdInfo, encoded as an ASN.1 Element.
 */
export function _encode_EncPwdInfo(
    value: EncPwdInfo,
    elGetter: $.ASN1Encoder<EncPwdInfo>
) {
    if (!_cached_encoder_for_EncPwdInfo) {
        _cached_encoder_for_EncPwdInfo = function (
            value: EncPwdInfo,
            elGetter: $.ASN1Encoder<EncPwdInfo>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.algorithms === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () =>
                                          $._encodeSequenceOf<
                                              AlgorithmIdentifier
                                          >(
                                              () => _encode_AlgorithmIdentifier,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.algorithms, $.BER),
                            /* IF_ABSENT  */ value.pwdQualityRule === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () =>
                                          $._encodeSequenceOf<
                                              AttributeTypeAndValue
                                          >(
                                              () =>
                                                  _encode_AttributeTypeAndValue,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.pwdQualityRule, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_EncPwdInfo(value, elGetter);
}

/**
 * @summary SecurityErrorData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SecurityErrorData ::= SET {
 *   problem      [0]  SecurityProblem,
 *   spkmInfo     [1]  SPKM-ERROR OPTIONAL,
 *   encPwdInfo   [2]  EncPwdInfo OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResults }
 * ```
 *
 * @class
 */
export class SecurityErrorData {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: SecurityProblem,
        /**
         * @summary `spkmInfo`.
         * @public
         * @readonly
         */
        readonly spkmInfo: OPTIONAL<SPKM_ERROR>,
        /**
         * @summary `encPwdInfo`.
         * @public
         * @readonly
         */
        readonly encPwdInfo: OPTIONAL<EncPwdInfo>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a SecurityErrorData
     * @description
     *
     * This takes an `object` and converts it to a `SecurityErrorData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SecurityErrorData`.
     * @returns {SecurityErrorData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof SecurityErrorData]: SecurityErrorData[_K] }>
    ): SecurityErrorData {
        return new SecurityErrorData(
            _o.problem,
            _o.spkmInfo,
            _o.encPwdInfo,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of SecurityErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SecurityErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "spkmInfo",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "encPwdInfo",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SecurityErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SecurityErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of SecurityErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SecurityErrorData: $.ComponentSpec[] = [];
let _cached_decoder_for_SecurityErrorData: $.ASN1Decoder<
    SecurityErrorData
> | null = null;
let _cached_encoder_for_SecurityErrorData: $.ASN1Encoder<
    SecurityErrorData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SecurityErrorData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SecurityErrorData} The decoded data structure.
 */
export function _decode_SecurityErrorData(el: _Element) {
    if (!_cached_decoder_for_SecurityErrorData) {
        _cached_decoder_for_SecurityErrorData = function (
            el: _Element
        ): SecurityErrorData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let problem!: SecurityProblem;
            let spkmInfo: OPTIONAL<SPKM_ERROR>;
            let encPwdInfo: OPTIONAL<EncPwdInfo>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                SecurityErrorData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = $._decode_explicit<SecurityProblem>(
                        () => _decode_SecurityProblem
                    )(_el);
                },
                spkmInfo: (_el: _Element): void => {
                    spkmInfo = $._decode_explicit<SPKM_ERROR>(
                        () => _decode_SPKM_ERROR
                    )(_el);
                },
                encPwdInfo: (_el: _Element): void => {
                    encPwdInfo = $._decode_explicit<EncPwdInfo>(
                        () => _decode_EncPwdInfo
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SecurityErrorData,
                _extension_additions_list_spec_for_SecurityErrorData,
                _root_component_type_list_2_spec_for_SecurityErrorData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new SecurityErrorData(
                /* SET_CONSTRUCTOR_CALL */ problem,
                spkmInfo,
                encPwdInfo,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_SecurityErrorData(el);
}
/**
 * @summary Encodes a(n) SecurityErrorData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SecurityErrorData, encoded as an ASN.1 Element.
 */
export function _encode_SecurityErrorData(
    value: SecurityErrorData,
    elGetter: $.ASN1Encoder<SecurityErrorData>
) {
    if (!_cached_encoder_for_SecurityErrorData) {
        _cached_encoder_for_SecurityErrorData = function (
            value: SecurityErrorData,
            elGetter: $.ASN1Encoder<SecurityErrorData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_SecurityProblem,
                                $.BER
                            )(value.problem, $.BER),
                            /* IF_ABSENT  */ value.spkmInfo === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_SPKM_ERROR,
                                      $.BER
                                  )(value.spkmInfo, $.BER),
                            /* IF_ABSENT  */ value.encPwdInfo === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_EncPwdInfo,
                                      $.BER
                                  )(value.encPwdInfo, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                SecurityErrorData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SecurityErrorData(value, elGetter);
}

/**
 * @summary securityError
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * securityError  ERROR ::= {
 *   PARAMETER   OPTIONALLY-PROTECTED { SecurityErrorData }
 *   CODE        id-errcode-securityError }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const securityError: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<
            SecurityErrorData
        >(_decode_SecurityErrorData),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<
            SecurityErrorData
        >(_encode_SecurityErrorData),
    },
    "&errorCode": id_errcode_securityError /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary read
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * read OPERATION ::= {
 *   ARGUMENT  ReadArgument
 *   RESULT    ReadResult
 *   ERRORS    {attributeError |
 *              nameError |
 *              serviceError |
 *              referral |
 *              abandoned |
 *              securityError}
 *   CODE      id-opcode-read }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const read: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_ReadArgument,
        "&ResultType": _decode_ReadResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_ReadArgument,
        "&ResultType": _encode_ReadResult,
    },
    "&Errors": [
        attributeError,
        nameError,
        serviceError,
        referral,
        abandoned,
        securityError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_read /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary CompareArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * CompareArgumentData ::= SET {
 *   object       [0]  Name,
 *   purported    [1]  AttributeValueAssertion,
 *   ...,
 *   ...,
 *   COMPONENTS OF     CommonArguments }
 * ```
 *
 * @class
 */
export class CompareArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary `purported`.
         * @public
         * @readonly
         */
        readonly purported: AttributeValueAssertion,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a CompareArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `CompareArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `CompareArgumentData`.
     * @returns {CompareArgumentData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof CompareArgumentData]: CompareArgumentData[_K] }
        >
    ): CompareArgumentData {
        return new CompareArgumentData(
            _o.object,
            _o.purported,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of CompareArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_CompareArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "purported",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of CompareArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_CompareArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of CompareArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_CompareArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_CompareArgumentData: $.ASN1Decoder<
    CompareArgumentData
> | null = null;
let _cached_encoder_for_CompareArgumentData: $.ASN1Encoder<
    CompareArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CompareArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CompareArgumentData} The decoded data structure.
 */
export function _decode_CompareArgumentData(el: _Element) {
    if (!_cached_decoder_for_CompareArgumentData) {
        _cached_decoder_for_CompareArgumentData = function (
            el: _Element
        ): CompareArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let purported!: AttributeValueAssertion;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                CompareArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                CompareArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                CompareArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                CompareArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                CompareArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                purported: (_el: _Element): void => {
                    purported = $._decode_explicit<AttributeValueAssertion>(
                        () => _decode_AttributeValueAssertion
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_CompareArgumentData,
                _extension_additions_list_spec_for_CompareArgumentData,
                _root_component_type_list_2_spec_for_CompareArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new CompareArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                purported,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_CompareArgumentData(el);
}
/**
 * @summary Encodes a(n) CompareArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CompareArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_CompareArgumentData(
    value: CompareArgumentData,
    elGetter: $.ASN1Encoder<CompareArgumentData>
) {
    if (!_cached_encoder_for_CompareArgumentData) {
        _cached_encoder_for_CompareArgumentData = function (
            value: CompareArgumentData,
            elGetter: $.ASN1Encoder<CompareArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_AttributeValueAssertion,
                                $.BER
                            )(value.purported, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                CompareArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                CompareArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                CompareArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                CompareArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                CompareArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_CompareArgumentData(value, elGetter);
}

export type CompareArgument<> = OPTIONALLY_PROTECTED<CompareArgumentData>; // DefinedType
let _cached_decoder_for_CompareArgument: $.ASN1Decoder<
    CompareArgument
> | null = null;
let _cached_encoder_for_CompareArgument: $.ASN1Encoder<
    CompareArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CompareArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CompareArgument} The decoded data structure.
 */
export function _decode_CompareArgument(el: _Element) {
    if (!_cached_decoder_for_CompareArgument) {
        _cached_decoder_for_CompareArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            CompareArgumentData
        >(_decode_CompareArgumentData);
    }
    return _cached_decoder_for_CompareArgument(el);
}
/**
 * @summary Encodes a(n) CompareArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CompareArgument, encoded as an ASN.1 Element.
 */
export function _encode_CompareArgument(
    value: CompareArgument,
    elGetter: $.ASN1Encoder<CompareArgument>
) {
    if (!_cached_encoder_for_CompareArgument) {
        _cached_encoder_for_CompareArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            CompareArgumentData
        >(_encode_CompareArgumentData);
    }
    return _cached_encoder_for_CompareArgument(value, elGetter);
}

/**
 * @summary CompareResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * CompareResultData ::= SET {
 *   name                 Name OPTIONAL,
 *   matched         [0]  BOOLEAN,
 *   fromEntry       [1]  BOOLEAN DEFAULT TRUE,
 *   matchedSubtype  [2]  AttributeType OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF        CommonResults }
 * ```
 *
 * @class
 */
export class CompareResultData {
    constructor(
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: OPTIONAL<Name>,
        /**
         * @summary `matched`.
         * @public
         * @readonly
         */
        readonly matched: BOOLEAN,
        /**
         * @summary `fromEntry`.
         * @public
         * @readonly
         */
        readonly fromEntry: OPTIONAL<BOOLEAN>,
        /**
         * @summary `matchedSubtype`.
         * @public
         * @readonly
         */
        readonly matchedSubtype: OPTIONAL<AttributeType>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a CompareResultData
     * @description
     *
     * This takes an `object` and converts it to a `CompareResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `CompareResultData`.
     * @returns {CompareResultData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof CompareResultData]: CompareResultData[_K] }>
    ): CompareResultData {
        return new CompareResultData(
            _o.name,
            _o.matched,
            _o.fromEntry,
            _o.matchedSubtype,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `fromEntry`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_fromEntry() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of CompareResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_CompareResultData: $.ComponentSpec[] = [
    new $.ComponentSpec("name", true, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "matched",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "fromEntry",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "matchedSubtype",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of CompareResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_CompareResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of CompareResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_CompareResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_CompareResultData: $.ASN1Decoder<
    CompareResultData
> | null = null;
let _cached_encoder_for_CompareResultData: $.ASN1Encoder<
    CompareResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CompareResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CompareResultData} The decoded data structure.
 */
export function _decode_CompareResultData(el: _Element) {
    if (!_cached_decoder_for_CompareResultData) {
        _cached_decoder_for_CompareResultData = function (
            el: _Element
        ): CompareResultData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let name: OPTIONAL<Name>;
            let matched!: BOOLEAN;
            let fromEntry: OPTIONAL<BOOLEAN> =
                CompareResultData._default_value_for_fromEntry;
            let matchedSubtype: OPTIONAL<AttributeType>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                CompareResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                name: (_el: _Element): void => {
                    name = _decode_Name(_el);
                },
                matched: (_el: _Element): void => {
                    matched = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                fromEntry: (_el: _Element): void => {
                    fromEntry = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                matchedSubtype: (_el: _Element): void => {
                    matchedSubtype = $._decode_explicit<AttributeType>(
                        () => _decode_AttributeType
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_CompareResultData,
                _extension_additions_list_spec_for_CompareResultData,
                _root_component_type_list_2_spec_for_CompareResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new CompareResultData(
                /* SET_CONSTRUCTOR_CALL */ name,
                matched,
                fromEntry,
                matchedSubtype,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_CompareResultData(el);
}
/**
 * @summary Encodes a(n) CompareResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CompareResultData, encoded as an ASN.1 Element.
 */
export function _encode_CompareResultData(
    value: CompareResultData,
    elGetter: $.ASN1Encoder<CompareResultData>
) {
    if (!_cached_encoder_for_CompareResultData) {
        _cached_encoder_for_CompareResultData = function (
            value: CompareResultData,
            elGetter: $.ASN1Encoder<CompareResultData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.name === undefined
                                ? undefined
                                : _encode_Name(value.name, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => $._encodeBoolean,
                                $.BER
                            )(value.matched, $.BER),
                            /* IF_DEFAULT */ value.fromEntry === undefined ||
                            $.deepEq(
                                value.fromEntry,
                                CompareResultData._default_value_for_fromEntry
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.fromEntry, $.BER),
                            /* IF_ABSENT  */ value.matchedSubtype === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_AttributeType,
                                      $.BER
                                  )(value.matchedSubtype, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                CompareResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_CompareResultData(value, elGetter);
}

export type CompareResult<> = OPTIONALLY_PROTECTED<CompareResultData>; // DefinedType
let _cached_decoder_for_CompareResult: $.ASN1Decoder<
    CompareResult
> | null = null;
let _cached_encoder_for_CompareResult: $.ASN1Encoder<
    CompareResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CompareResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CompareResult} The decoded data structure.
 */
export function _decode_CompareResult(el: _Element) {
    if (!_cached_decoder_for_CompareResult) {
        _cached_decoder_for_CompareResult = _get_decoder_for_OPTIONALLY_PROTECTED<
            CompareResultData
        >(_decode_CompareResultData);
    }
    return _cached_decoder_for_CompareResult(el);
}
/**
 * @summary Encodes a(n) CompareResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CompareResult, encoded as an ASN.1 Element.
 */
export function _encode_CompareResult(
    value: CompareResult,
    elGetter: $.ASN1Encoder<CompareResult>
) {
    if (!_cached_encoder_for_CompareResult) {
        _cached_encoder_for_CompareResult = _get_encoder_for_OPTIONALLY_PROTECTED<
            CompareResultData
        >(_encode_CompareResultData);
    }
    return _cached_encoder_for_CompareResult(value, elGetter);
}

/**
 * @summary compare
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * compare OPERATION ::= {
 *   ARGUMENT  CompareArgument
 *   RESULT    CompareResult
 *   ERRORS    {attributeError |
 *              nameError |
 *              serviceError |
 *              referral |
 *              abandoned |
 *              securityError}
 *   CODE      id-opcode-compare }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const compare: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_CompareArgument,
        "&ResultType": _decode_CompareResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_CompareArgument,
        "&ResultType": _encode_CompareResult,
    },
    "&Errors": [
        attributeError,
        nameError,
        serviceError,
        referral,
        abandoned,
        securityError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_compare /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary AbandonArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonArgumentData ::= SEQUENCE {
 *   invokeID  [0]  InvokeId,
 *   ... }
 * ```
 *
 * @class
 */
export class AbandonArgumentData {
    constructor(
        /**
         * @summary `invokeID`.
         * @public
         * @readonly
         */
        readonly invokeID: InvokeId,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a AbandonArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `AbandonArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AbandonArgumentData`.
     * @returns {AbandonArgumentData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof AbandonArgumentData]: AbandonArgumentData[_K] }
        >
    ): AbandonArgumentData {
        return new AbandonArgumentData(
            _o.invokeID,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of AbandonArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AbandonArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "invokeID",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AbandonArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AbandonArgumentData: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of AbandonArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AbandonArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_AbandonArgumentData: $.ASN1Decoder<
    AbandonArgumentData
> | null = null;
let _cached_encoder_for_AbandonArgumentData: $.ASN1Encoder<
    AbandonArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonArgumentData} The decoded data structure.
 */
export function _decode_AbandonArgumentData(el: _Element) {
    if (!_cached_decoder_for_AbandonArgumentData) {
        _cached_decoder_for_AbandonArgumentData = function (
            el: _Element
        ): AbandonArgumentData {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 1) {
                throw new _ConstructionError(
                    "AbandonArgumentData contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "invokeID";
            let invokeID!: InvokeId;
            invokeID = $._decode_explicit<InvokeId>(() => _decode_InvokeId)(
                sequence[0]
            );
            return new AbandonArgumentData(invokeID, sequence.slice(1));
        };
    }
    return _cached_decoder_for_AbandonArgumentData(el);
}
/**
 * @summary Encodes a(n) AbandonArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_AbandonArgumentData(
    value: AbandonArgumentData,
    elGetter: $.ASN1Encoder<AbandonArgumentData>
) {
    if (!_cached_encoder_for_AbandonArgumentData) {
        _cached_encoder_for_AbandonArgumentData = function (
            value: AbandonArgumentData,
            elGetter: $.ASN1Encoder<AbandonArgumentData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_InvokeId,
                                $.BER
                            )(value.invokeID, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AbandonArgumentData(value, elGetter);
}

export type AbandonArgument<> = OPTIONALLY_PROTECTED_SEQ<AbandonArgumentData>; // DefinedType
let _cached_decoder_for_AbandonArgument: $.ASN1Decoder<
    AbandonArgument
> | null = null;
let _cached_encoder_for_AbandonArgument: $.ASN1Encoder<
    AbandonArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonArgument} The decoded data structure.
 */
export function _decode_AbandonArgument(el: _Element) {
    if (!_cached_decoder_for_AbandonArgument) {
        _cached_decoder_for_AbandonArgument = _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
            AbandonArgumentData
        >(_decode_AbandonArgumentData);
    }
    return _cached_decoder_for_AbandonArgument(el);
}
/**
 * @summary Encodes a(n) AbandonArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonArgument, encoded as an ASN.1 Element.
 */
export function _encode_AbandonArgument(
    value: AbandonArgument,
    elGetter: $.ASN1Encoder<AbandonArgument>
) {
    if (!_cached_encoder_for_AbandonArgument) {
        _cached_encoder_for_AbandonArgument = _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
            AbandonArgumentData
        >(_encode_AbandonArgumentData);
    }
    return _cached_encoder_for_AbandonArgument(value, elGetter);
}

/**
 * @summary CommonResultsSeq
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * CommonResultsSeq ::= SEQUENCE {
 *   securityParameters  [30]  SecurityParameters OPTIONAL,
 *   performer           [29]  DistinguishedName OPTIONAL,
 *   aliasDereferenced   [28]  BOOLEAN DEFAULT FALSE,
 *   notification        [27]  SEQUENCE SIZE (1..MAX) OF Attribute
 *                             {{SupportedAttributes}} OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class CommonResultsSeq {
    constructor(
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<SecurityParameters>,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<DistinguishedName>,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<BOOLEAN>,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a CommonResultsSeq
     * @description
     *
     * This takes an `object` and converts it to a `CommonResultsSeq`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `CommonResultsSeq`.
     * @returns {CommonResultsSeq}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof CommonResultsSeq]: CommonResultsSeq[_K] }>
    ): CommonResultsSeq {
        return new CommonResultsSeq(
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of CommonResultsSeq
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_CommonResultsSeq: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of CommonResultsSeq
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_CommonResultsSeq: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of CommonResultsSeq
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_CommonResultsSeq: $.ComponentSpec[] = [];
let _cached_decoder_for_CommonResultsSeq: $.ASN1Decoder<
    CommonResultsSeq
> | null = null;
let _cached_encoder_for_CommonResultsSeq: $.ASN1Encoder<
    CommonResultsSeq
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CommonResultsSeq
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CommonResultsSeq} The decoded data structure.
 */
export function _decode_CommonResultsSeq(el: _Element) {
    if (!_cached_decoder_for_CommonResultsSeq) {
        _cached_decoder_for_CommonResultsSeq = function (
            el: _Element
        ): CommonResultsSeq {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                CommonResultsSeq._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_CommonResultsSeq,
                _extension_additions_list_spec_for_CommonResultsSeq,
                _root_component_type_list_2_spec_for_CommonResultsSeq,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new CommonResultsSeq(
                /* SEQUENCE_CONSTRUCTOR_CALL */ securityParameters,
                performer,
                aliasDereferenced,
                notification,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_CommonResultsSeq(el);
}
/**
 * @summary Encodes a(n) CommonResultsSeq into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CommonResultsSeq, encoded as an ASN.1 Element.
 */
export function _encode_CommonResultsSeq(
    value: CommonResultsSeq,
    elGetter: $.ASN1Encoder<CommonResultsSeq>
) {
    if (!_cached_encoder_for_CommonResultsSeq) {
        _cached_encoder_for_CommonResultsSeq = function (
            value: CommonResultsSeq,
            elGetter: $.ASN1Encoder<CommonResultsSeq>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                CommonResultsSeq._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_CommonResultsSeq(value, elGetter);
}

/**
 * @summary AbandonResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonResultData ::= SEQUENCE {
 *   invokeID      InvokeId,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class AbandonResultData {
    constructor(
        /**
         * @summary `invokeID`.
         * @public
         * @readonly
         */
        readonly invokeID: InvokeId,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AbandonResultData
     * @description
     *
     * This takes an `object` and converts it to a `AbandonResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AbandonResultData`.
     * @returns {AbandonResultData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof AbandonResultData]: AbandonResultData[_K] }>
    ): AbandonResultData {
        return new AbandonResultData(
            _o.invokeID,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of AbandonResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AbandonResultData: $.ComponentSpec[] = [
    new $.ComponentSpec("invokeID", false, $.hasAnyTag, undefined, undefined),
];
/**
 * @summary The Trailing Root Component Types of AbandonResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AbandonResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AbandonResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AbandonResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_AbandonResultData: $.ASN1Decoder<
    AbandonResultData
> | null = null;
let _cached_encoder_for_AbandonResultData: $.ASN1Encoder<
    AbandonResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonResultData} The decoded data structure.
 */
export function _decode_AbandonResultData(el: _Element) {
    if (!_cached_decoder_for_AbandonResultData) {
        _cached_decoder_for_AbandonResultData = function (
            el: _Element
        ): AbandonResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let invokeID!: InvokeId;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                AbandonResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                invokeID: (_el: _Element): void => {
                    invokeID = _decode_InvokeId(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AbandonResultData,
                _extension_additions_list_spec_for_AbandonResultData,
                _root_component_type_list_2_spec_for_AbandonResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AbandonResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ invokeID,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_AbandonResultData(el);
}
/**
 * @summary Encodes a(n) AbandonResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonResultData, encoded as an ASN.1 Element.
 */
export function _encode_AbandonResultData(
    value: AbandonResultData,
    elGetter: $.ASN1Encoder<AbandonResultData>
) {
    if (!_cached_encoder_for_AbandonResultData) {
        _cached_encoder_for_AbandonResultData = function (
            value: AbandonResultData,
            elGetter: $.ASN1Encoder<AbandonResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_InvokeId(
                                value.invokeID,
                                $.BER
                            ),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                AbandonResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AbandonResultData(value, elGetter);
}

/**
 * @summary AbandonResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonResult  ::=  CHOICE {
 *   null          NULL,
 *   information   OPTIONALLY-PROTECTED-SEQ { AbandonResultData },
 *   ... }
 * ```
 */
export type AbandonResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<AbandonResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_AbandonResult: $.ASN1Decoder<
    AbandonResult
> | null = null;
let _cached_encoder_for_AbandonResult: $.ASN1Encoder<
    AbandonResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonResult} The decoded data structure.
 */
export function _decode_AbandonResult(el: _Element) {
    if (!_cached_decoder_for_AbandonResult) {
        _cached_decoder_for_AbandonResult = $._decode_extensible_choice<
            AbandonResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<AbandonResultData>(
                    _decode_AbandonResultData
                ),
            ],
        });
    }
    return _cached_decoder_for_AbandonResult(el);
}
/**
 * @summary Encodes a(n) AbandonResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonResult, encoded as an ASN.1 Element.
 */
export function _encode_AbandonResult(
    value: AbandonResult,
    elGetter: $.ASN1Encoder<AbandonResult>
) {
    if (!_cached_encoder_for_AbandonResult) {
        _cached_encoder_for_AbandonResult = $._encode_choice<AbandonResult>(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    AbandonResultData
                >(_encode_AbandonResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_AbandonResult(value, elGetter);
}

/**
 * @summary abandon
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * abandon OPERATION ::= {
 *   ARGUMENT  AbandonArgument
 *   RESULT    AbandonResult
 *   ERRORS    {abandonFailed}
 *   CODE      id-opcode-abandon }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const abandon: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_AbandonArgument,
        "&ResultType": _decode_AbandonResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_AbandonArgument,
        "&ResultType": _encode_AbandonResult,
    },
    "&Errors": undefined,
    "&operationCode": id_opcode_abandon /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary SortKey
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SortKey ::= SEQUENCE {
 *   type          AttributeType,
 *   orderingRule  MATCHING-RULE.&id OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class SortKey {
    constructor(
        /**
         * @summary `type_`.
         * @public
         * @readonly
         */
        readonly type_: AttributeType,
        /**
         * @summary `orderingRule`.
         * @public
         * @readonly
         */
        readonly orderingRule: OPTIONAL<OBJECT_IDENTIFIER>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a SortKey
     * @description
     *
     * This takes an `object` and converts it to a `SortKey`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SortKey`.
     * @returns {SortKey}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof SortKey]: SortKey[_K] }>
    ): SortKey {
        return new SortKey(
            _o.type_,
            _o.orderingRule,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of SortKey
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SortKey: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "type",
        false,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "orderingRule",
        true,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SortKey
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SortKey: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of SortKey
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SortKey: $.ComponentSpec[] = [];
let _cached_decoder_for_SortKey: $.ASN1Decoder<SortKey> | null = null;
let _cached_encoder_for_SortKey: $.ASN1Encoder<SortKey> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SortKey
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SortKey} The decoded data structure.
 */
export function _decode_SortKey(el: _Element) {
    if (!_cached_decoder_for_SortKey) {
        _cached_decoder_for_SortKey = function (el: _Element): SortKey {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let type_!: AttributeType;
            let orderingRule: OPTIONAL<OBJECT_IDENTIFIER>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                type: (_el: _Element): void => {
                    type_ = _decode_AttributeType(_el);
                },
                orderingRule: (_el: _Element): void => {
                    orderingRule = $._decodeObjectIdentifier(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SortKey,
                _extension_additions_list_spec_for_SortKey,
                _root_component_type_list_2_spec_for_SortKey,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new SortKey(
                /* SEQUENCE_CONSTRUCTOR_CALL */ type_,
                orderingRule,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_SortKey(el);
}
/**
 * @summary Encodes a(n) SortKey into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SortKey, encoded as an ASN.1 Element.
 */
export function _encode_SortKey(
    value: SortKey,
    elGetter: $.ASN1Encoder<SortKey>
) {
    if (!_cached_encoder_for_SortKey) {
        _cached_encoder_for_SortKey = function (
            value: SortKey,
            elGetter: $.ASN1Encoder<SortKey>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_AttributeType(
                                value.type_,
                                $.BER
                            ),
                            /* IF_ABSENT  */ value.orderingRule === undefined
                                ? undefined
                                : $._encodeObjectIdentifier(
                                      value.orderingRule,
                                      $.BER
                                  ),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SortKey(value, elGetter);
}

/**
 * @summary PagedResultsRequest_newRequest
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PagedResultsRequest-newRequest ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class PagedResultsRequest_newRequest {
    constructor(
        /**
         * @summary `pageSize`.
         * @public
         * @readonly
         */
        readonly pageSize: INTEGER,
        /**
         * @summary `sortKeys`.
         * @public
         * @readonly
         */
        readonly sortKeys: OPTIONAL<SortKey[]>,
        /**
         * @summary `reverse`.
         * @public
         * @readonly
         */
        readonly reverse: OPTIONAL<BOOLEAN>,
        /**
         * @summary `unmerged`.
         * @public
         * @readonly
         */
        readonly unmerged: OPTIONAL<BOOLEAN>,
        /**
         * @summary `pageNumber`.
         * @public
         * @readonly
         */
        readonly pageNumber: OPTIONAL<INTEGER>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a PagedResultsRequest_newRequest
     * @description
     *
     * This takes an `object` and converts it to a `PagedResultsRequest_newRequest`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `PagedResultsRequest_newRequest`.
     * @returns {PagedResultsRequest_newRequest}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof PagedResultsRequest_newRequest]: PagedResultsRequest_newRequest[_K];
            }
        >
    ): PagedResultsRequest_newRequest {
        return new PagedResultsRequest_newRequest(
            _o.pageSize,
            _o.sortKeys,
            _o.reverse,
            _o.unmerged,
            _o.pageNumber,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `reverse`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_reverse() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `unmerged`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_unmerged() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of PagedResultsRequest_newRequest
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_PagedResultsRequest_newRequest: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "pageSize",
        false,
        $.hasTag(_TagClass.universal, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "sortKeys",
        true,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "reverse",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "unmerged",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "pageNumber",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of PagedResultsRequest_newRequest
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_PagedResultsRequest_newRequest: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of PagedResultsRequest_newRequest
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_PagedResultsRequest_newRequest: $.ComponentSpec[] = [];
let _cached_decoder_for_PagedResultsRequest_newRequest: $.ASN1Decoder<
    PagedResultsRequest_newRequest
> | null = null;
let _cached_encoder_for_PagedResultsRequest_newRequest: $.ASN1Encoder<
    PagedResultsRequest_newRequest
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PagedResultsRequest_newRequest
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PagedResultsRequest_newRequest} The decoded data structure.
 */
export function _decode_PagedResultsRequest_newRequest(el: _Element) {
    if (!_cached_decoder_for_PagedResultsRequest_newRequest) {
        _cached_decoder_for_PagedResultsRequest_newRequest = function (
            el: _Element
        ): PagedResultsRequest_newRequest {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let pageSize!: INTEGER;
            let sortKeys: OPTIONAL<SortKey[]>;
            let reverse: OPTIONAL<BOOLEAN> =
                PagedResultsRequest_newRequest._default_value_for_reverse;
            let unmerged: OPTIONAL<BOOLEAN> =
                PagedResultsRequest_newRequest._default_value_for_unmerged;
            let pageNumber: OPTIONAL<INTEGER>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                pageSize: (_el: _Element): void => {
                    pageSize = $._decodeInteger(_el);
                },
                sortKeys: (_el: _Element): void => {
                    sortKeys = $._decodeSequenceOf<SortKey>(
                        () => _decode_SortKey
                    )(_el);
                },
                reverse: (_el: _Element): void => {
                    reverse = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                unmerged: (_el: _Element): void => {
                    unmerged = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                pageNumber: (_el: _Element): void => {
                    pageNumber = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_PagedResultsRequest_newRequest,
                _extension_additions_list_spec_for_PagedResultsRequest_newRequest,
                _root_component_type_list_2_spec_for_PagedResultsRequest_newRequest,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new PagedResultsRequest_newRequest(
                /* SEQUENCE_CONSTRUCTOR_CALL */ pageSize,
                sortKeys,
                reverse,
                unmerged,
                pageNumber,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_PagedResultsRequest_newRequest(el);
}
/**
 * @summary Encodes a(n) PagedResultsRequest_newRequest into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PagedResultsRequest_newRequest, encoded as an ASN.1 Element.
 */
export function _encode_PagedResultsRequest_newRequest(
    value: PagedResultsRequest_newRequest,
    elGetter: $.ASN1Encoder<PagedResultsRequest_newRequest>
) {
    if (!_cached_encoder_for_PagedResultsRequest_newRequest) {
        _cached_encoder_for_PagedResultsRequest_newRequest = function (
            value: PagedResultsRequest_newRequest,
            elGetter: $.ASN1Encoder<PagedResultsRequest_newRequest>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encodeInteger(
                                value.pageSize,
                                $.BER
                            ),
                            /* IF_ABSENT  */ value.sortKeys === undefined
                                ? undefined
                                : $._encodeSequenceOf<SortKey>(
                                      () => _encode_SortKey,
                                      $.BER
                                  )(value.sortKeys, $.BER),
                            /* IF_DEFAULT */ value.reverse === undefined ||
                            $.deepEq(
                                value.reverse,
                                PagedResultsRequest_newRequest._default_value_for_reverse
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.reverse, $.BER),
                            /* IF_DEFAULT */ value.unmerged === undefined ||
                            $.deepEq(
                                value.unmerged,
                                PagedResultsRequest_newRequest._default_value_for_unmerged
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.unmerged, $.BER),
                            /* IF_ABSENT  */ value.pageNumber === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.pageNumber, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_PagedResultsRequest_newRequest(value, elGetter);
}

/**
 * @summary PagedResultsRequest
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PagedResultsRequest  ::=  CHOICE {
 *   newRequest         SEQUENCE {
 *     pageSize           INTEGER,
 *     sortKeys           SEQUENCE SIZE (1..MAX) OF SortKey OPTIONAL,
 *     reverse       [1]  BOOLEAN DEFAULT FALSE,
 *     unmerged      [2]  BOOLEAN DEFAULT FALSE,
 *     pageNumber    [3]  INTEGER OPTIONAL,
 *     ...},
 *   queryReference     OCTET STRING,
 *   abandonQuery  [0]  OCTET STRING,
 *   ... }
 * ```
 */
export type PagedResultsRequest =
    | { newRequest: PagedResultsRequest_newRequest } /* CHOICE_ALT_ROOT */
    | { queryReference: OCTET_STRING } /* CHOICE_ALT_ROOT */
    | { abandonQuery: OCTET_STRING } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_PagedResultsRequest: $.ASN1Decoder<
    PagedResultsRequest
> | null = null;
let _cached_encoder_for_PagedResultsRequest: $.ASN1Encoder<
    PagedResultsRequest
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PagedResultsRequest
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PagedResultsRequest} The decoded data structure.
 */
export function _decode_PagedResultsRequest(el: _Element) {
    if (!_cached_decoder_for_PagedResultsRequest) {
        _cached_decoder_for_PagedResultsRequest = $._decode_extensible_choice<
            PagedResultsRequest
        >({
            "UNIVERSAL 16": [
                "newRequest",
                _decode_PagedResultsRequest_newRequest,
            ],
            "UNIVERSAL 4": ["queryReference", $._decodeOctetString],
            "CONTEXT 0": [
                "abandonQuery",
                $._decode_explicit<OCTET_STRING>(() => $._decodeOctetString),
            ],
        });
    }
    return _cached_decoder_for_PagedResultsRequest(el);
}
/**
 * @summary Encodes a(n) PagedResultsRequest into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PagedResultsRequest, encoded as an ASN.1 Element.
 */
export function _encode_PagedResultsRequest(
    value: PagedResultsRequest,
    elGetter: $.ASN1Encoder<PagedResultsRequest>
) {
    if (!_cached_encoder_for_PagedResultsRequest) {
        _cached_encoder_for_PagedResultsRequest = $._encode_choice<
            PagedResultsRequest
        >(
            {
                newRequest: _encode_PagedResultsRequest_newRequest,
                queryReference: $._encodeOctetString,
                abandonQuery: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => $._encodeOctetString,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_PagedResultsRequest(value, elGetter);
}

/**
 * @summary ListArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ListArgumentData ::= SET {
 *   object        [0]  Name,
 *   pagedResults  [1]  PagedResultsRequest OPTIONAL,
 *   listFamily    [2]  BOOLEAN DEFAULT FALSE,
 *   ...,
 *   ...,
 *   COMPONENTS OF      CommonArguments
 *   }
 * ```
 *
 * @class
 */
export class ListArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary `pagedResults`.
         * @public
         * @readonly
         */
        readonly pagedResults: OPTIONAL<PagedResultsRequest>,
        /**
         * @summary `listFamily`.
         * @public
         * @readonly
         */
        readonly listFamily: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ListArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `ListArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ListArgumentData`.
     * @returns {ListArgumentData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof ListArgumentData]: ListArgumentData[_K] }>
    ): ListArgumentData {
        return new ListArgumentData(
            _o.object,
            _o.pagedResults,
            _o.listFamily,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `listFamily`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_listFamily() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of ListArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ListArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "pagedResults",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "listFamily",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ListArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ListArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ListArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ListArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_ListArgumentData: $.ASN1Decoder<
    ListArgumentData
> | null = null;
let _cached_encoder_for_ListArgumentData: $.ASN1Encoder<
    ListArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ListArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ListArgumentData} The decoded data structure.
 */
export function _decode_ListArgumentData(el: _Element) {
    if (!_cached_decoder_for_ListArgumentData) {
        _cached_decoder_for_ListArgumentData = function (
            el: _Element
        ): ListArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let pagedResults: OPTIONAL<PagedResultsRequest>;
            let listFamily: OPTIONAL<BOOLEAN> =
                ListArgumentData._default_value_for_listFamily;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                ListArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                ListArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                ListArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                ListArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                ListArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                pagedResults: (_el: _Element): void => {
                    pagedResults = $._decode_explicit<PagedResultsRequest>(
                        () => _decode_PagedResultsRequest
                    )(_el);
                },
                listFamily: (_el: _Element): void => {
                    listFamily = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ListArgumentData,
                _extension_additions_list_spec_for_ListArgumentData,
                _root_component_type_list_2_spec_for_ListArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ListArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                pagedResults,
                listFamily,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_ListArgumentData(el);
}
/**
 * @summary Encodes a(n) ListArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ListArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_ListArgumentData(
    value: ListArgumentData,
    elGetter: $.ASN1Encoder<ListArgumentData>
) {
    if (!_cached_encoder_for_ListArgumentData) {
        _cached_encoder_for_ListArgumentData = function (
            value: ListArgumentData,
            elGetter: $.ASN1Encoder<ListArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                            /* IF_ABSENT  */ value.pagedResults === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_PagedResultsRequest,
                                      $.BER
                                  )(value.pagedResults, $.BER),
                            /* IF_DEFAULT */ value.listFamily === undefined ||
                            $.deepEq(
                                value.listFamily,
                                ListArgumentData._default_value_for_listFamily
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.listFamily, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                ListArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                ListArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                ListArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                ListArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                ListArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ListArgumentData(value, elGetter);
}

export type ListArgument<> = OPTIONALLY_PROTECTED<ListArgumentData>; // DefinedType
let _cached_decoder_for_ListArgument: $.ASN1Decoder<ListArgument> | null = null;
let _cached_encoder_for_ListArgument: $.ASN1Encoder<ListArgument> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ListArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ListArgument} The decoded data structure.
 */
export function _decode_ListArgument(el: _Element) {
    if (!_cached_decoder_for_ListArgument) {
        _cached_decoder_for_ListArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            ListArgumentData
        >(_decode_ListArgumentData);
    }
    return _cached_decoder_for_ListArgument(el);
}
/**
 * @summary Encodes a(n) ListArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ListArgument, encoded as an ASN.1 Element.
 */
export function _encode_ListArgument(
    value: ListArgument,
    elGetter: $.ASN1Encoder<ListArgument>
) {
    if (!_cached_encoder_for_ListArgument) {
        _cached_encoder_for_ListArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            ListArgumentData
        >(_encode_ListArgumentData);
    }
    return _cached_encoder_for_ListArgument(value, elGetter);
}

/**
 * @summary ListResultData_listInfo_subordinates_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ListResultData-listInfo-subordinates-Item ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class ListResultData_listInfo_subordinates_Item {
    constructor(
        /**
         * @summary `rdn`.
         * @public
         * @readonly
         */
        readonly rdn: RelativeDistinguishedName,
        /**
         * @summary `aliasEntry`.
         * @public
         * @readonly
         */
        readonly aliasEntry: OPTIONAL<BOOLEAN>,
        /**
         * @summary `fromEntry`.
         * @public
         * @readonly
         */
        readonly fromEntry: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a ListResultData_listInfo_subordinates_Item
     * @description
     *
     * This takes an `object` and converts it to a `ListResultData_listInfo_subordinates_Item`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ListResultData_listInfo_subordinates_Item`.
     * @returns {ListResultData_listInfo_subordinates_Item}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof ListResultData_listInfo_subordinates_Item]: ListResultData_listInfo_subordinates_Item[_K];
            }
        >
    ): ListResultData_listInfo_subordinates_Item {
        return new ListResultData_listInfo_subordinates_Item(
            _o.rdn,
            _o.aliasEntry,
            _o.fromEntry,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasEntry`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasEntry() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `fromEntry`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_fromEntry() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ListResultData_listInfo_subordinates_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ListResultData_listInfo_subordinates_Item: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "rdn",
        false,
        $.hasTag(_TagClass.universal, 17),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasEntry",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "fromEntry",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ListResultData_listInfo_subordinates_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ListResultData_listInfo_subordinates_Item: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of ListResultData_listInfo_subordinates_Item
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ListResultData_listInfo_subordinates_Item: $.ComponentSpec[] = [];
let _cached_decoder_for_ListResultData_listInfo_subordinates_Item: $.ASN1Decoder<
    ListResultData_listInfo_subordinates_Item
> | null = null;
let _cached_encoder_for_ListResultData_listInfo_subordinates_Item: $.ASN1Encoder<
    ListResultData_listInfo_subordinates_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ListResultData_listInfo_subordinates_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ListResultData_listInfo_subordinates_Item} The decoded data structure.
 */
export function _decode_ListResultData_listInfo_subordinates_Item(
    el: _Element
) {
    if (!_cached_decoder_for_ListResultData_listInfo_subordinates_Item) {
        _cached_decoder_for_ListResultData_listInfo_subordinates_Item = function (
            el: _Element
        ): ListResultData_listInfo_subordinates_Item {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let rdn!: RelativeDistinguishedName;
            let aliasEntry: OPTIONAL<BOOLEAN> =
                ListResultData_listInfo_subordinates_Item._default_value_for_aliasEntry;
            let fromEntry: OPTIONAL<BOOLEAN> =
                ListResultData_listInfo_subordinates_Item._default_value_for_fromEntry;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                rdn: (_el: _Element): void => {
                    rdn = _decode_RelativeDistinguishedName(_el);
                },
                aliasEntry: (_el: _Element): void => {
                    aliasEntry = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                fromEntry: (_el: _Element): void => {
                    fromEntry = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ListResultData_listInfo_subordinates_Item,
                _extension_additions_list_spec_for_ListResultData_listInfo_subordinates_Item,
                _root_component_type_list_2_spec_for_ListResultData_listInfo_subordinates_Item,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ListResultData_listInfo_subordinates_Item(
                /* SEQUENCE_CONSTRUCTOR_CALL */ rdn,
                aliasEntry,
                fromEntry,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_ListResultData_listInfo_subordinates_Item(el);
}
/**
 * @summary Encodes a(n) ListResultData_listInfo_subordinates_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ListResultData_listInfo_subordinates_Item, encoded as an ASN.1 Element.
 */
export function _encode_ListResultData_listInfo_subordinates_Item(
    value: ListResultData_listInfo_subordinates_Item,
    elGetter: $.ASN1Encoder<ListResultData_listInfo_subordinates_Item>
) {
    if (!_cached_encoder_for_ListResultData_listInfo_subordinates_Item) {
        _cached_encoder_for_ListResultData_listInfo_subordinates_Item = function (
            value: ListResultData_listInfo_subordinates_Item,
            elGetter: $.ASN1Encoder<ListResultData_listInfo_subordinates_Item>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_RelativeDistinguishedName(
                                value.rdn,
                                $.BER
                            ),
                            /* IF_DEFAULT */ value.aliasEntry === undefined ||
                            $.deepEq(
                                value.aliasEntry,
                                ListResultData_listInfo_subordinates_Item._default_value_for_aliasEntry
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasEntry, $.BER),
                            /* IF_DEFAULT */ value.fromEntry === undefined ||
                            $.deepEq(
                                value.fromEntry,
                                ListResultData_listInfo_subordinates_Item._default_value_for_fromEntry
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.fromEntry, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ListResultData_listInfo_subordinates_Item(
        value,
        elGetter
    );
}

/**
 * @summary LimitProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * LimitProblem  ::=  INTEGER {
 *   timeLimitExceeded           (0),
 *   sizeLimitExceeded           (1),
 *   administrativeLimitExceeded (2) }
 * ```
 */
export type LimitProblem = INTEGER;
/**
 * @summary LimitProblem_timeLimitExceeded
 * @constant
 * @type {number}
 */
export const LimitProblem_timeLimitExceeded: LimitProblem = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary LimitProblem_sizeLimitExceeded
 * @constant
 * @type {number}
 */
export const LimitProblem_sizeLimitExceeded: LimitProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary LimitProblem_administrativeLimitExceeded
 * @constant
 * @type {number}
 */
export const LimitProblem_administrativeLimitExceeded: LimitProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_LimitProblem: $.ASN1Decoder<LimitProblem> | null = null;
let _cached_encoder_for_LimitProblem: $.ASN1Encoder<LimitProblem> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LimitProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LimitProblem} The decoded data structure.
 */
export function _decode_LimitProblem(el: _Element) {
    if (!_cached_decoder_for_LimitProblem) {
        _cached_decoder_for_LimitProblem = $._decodeInteger;
    }
    return _cached_decoder_for_LimitProblem(el);
}
/**
 * @summary Encodes a(n) LimitProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LimitProblem, encoded as an ASN.1 Element.
 */
export function _encode_LimitProblem(
    value: LimitProblem,
    elGetter: $.ASN1Encoder<LimitProblem>
) {
    if (!_cached_encoder_for_LimitProblem) {
        _cached_encoder_for_LimitProblem = $._encodeInteger;
    }
    return _cached_encoder_for_LimitProblem(value, elGetter);
}

/**
 * @summary FilterItem_substrings_strings_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FilterItem-substrings-strings-Item ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type FilterItem_substrings_strings_Item =
    | { initial: _Element } /* CHOICE_ALT_ROOT */
    | { any_: _Element } /* CHOICE_ALT_ROOT */
    | { final: _Element } /* CHOICE_ALT_ROOT */
    | { control: Attribute } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_FilterItem_substrings_strings_Item: $.ASN1Decoder<
    FilterItem_substrings_strings_Item
> | null = null;
let _cached_encoder_for_FilterItem_substrings_strings_Item: $.ASN1Encoder<
    FilterItem_substrings_strings_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FilterItem_substrings_strings_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FilterItem_substrings_strings_Item} The decoded data structure.
 */
export function _decode_FilterItem_substrings_strings_Item(el: _Element) {
    if (!_cached_decoder_for_FilterItem_substrings_strings_Item) {
        _cached_decoder_for_FilterItem_substrings_strings_Item = $._decode_extensible_choice<
            FilterItem_substrings_strings_Item
        >({
            "CONTEXT 0": [
                "initial",
                $._decode_explicit<_Element>(() => $._decodeAny),
            ],
            "CONTEXT 1": [
                "any_",
                $._decode_explicit<_Element>(() => $._decodeAny),
            ],
            "CONTEXT 2": [
                "final",
                $._decode_explicit<_Element>(() => $._decodeAny),
            ],
            "UNIVERSAL 16": ["control", _decode_Attribute],
        });
    }
    return _cached_decoder_for_FilterItem_substrings_strings_Item(el);
}
/**
 * @summary Encodes a(n) FilterItem_substrings_strings_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FilterItem_substrings_strings_Item, encoded as an ASN.1 Element.
 */
export function _encode_FilterItem_substrings_strings_Item(
    value: FilterItem_substrings_strings_Item,
    elGetter: $.ASN1Encoder<FilterItem_substrings_strings_Item>
) {
    if (!_cached_encoder_for_FilterItem_substrings_strings_Item) {
        _cached_encoder_for_FilterItem_substrings_strings_Item = $._encode_choice<
            FilterItem_substrings_strings_Item
        >(
            {
                initial: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => $._encodeAny,
                    $.BER
                ),
                any_: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => $._encodeAny,
                    $.BER
                ),
                final: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => $._encodeAny,
                    $.BER
                ),
                control: _encode_Attribute,
            },
            $.BER
        );
    }
    return _cached_encoder_for_FilterItem_substrings_strings_Item(
        value,
        elGetter
    );
}

/**
 * @summary FilterItem_substrings
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FilterItem-substrings ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class FilterItem_substrings {
    constructor(
        /**
         * @summary `type_`.
         * @public
         * @readonly
         */
        readonly type_: OBJECT_IDENTIFIER,
        /**
         * @summary `strings`.
         * @public
         * @readonly
         */
        readonly strings: FilterItem_substrings_strings_Item[],
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a FilterItem_substrings
     * @description
     *
     * This takes an `object` and converts it to a `FilterItem_substrings`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `FilterItem_substrings`.
     * @returns {FilterItem_substrings}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof FilterItem_substrings]: FilterItem_substrings[_K] }
        >
    ): FilterItem_substrings {
        return new FilterItem_substrings(
            _o.type_,
            _o.strings,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of FilterItem_substrings
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_FilterItem_substrings: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "type",
        false,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "strings",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of FilterItem_substrings
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_FilterItem_substrings: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of FilterItem_substrings
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_FilterItem_substrings: $.ComponentSpec[] = [];
let _cached_decoder_for_FilterItem_substrings: $.ASN1Decoder<
    FilterItem_substrings
> | null = null;
let _cached_encoder_for_FilterItem_substrings: $.ASN1Encoder<
    FilterItem_substrings
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FilterItem_substrings
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FilterItem_substrings} The decoded data structure.
 */
export function _decode_FilterItem_substrings(el: _Element) {
    if (!_cached_decoder_for_FilterItem_substrings) {
        _cached_decoder_for_FilterItem_substrings = function (
            el: _Element
        ): FilterItem_substrings {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 2) {
                throw new _ConstructionError(
                    "FilterItem-substrings contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "type";
            sequence[1].name = "strings";
            let type_!: OBJECT_IDENTIFIER;
            let strings!: FilterItem_substrings_strings_Item[];
            type_ = $._decodeObjectIdentifier(sequence[0]);
            strings = $._decodeSequenceOf<FilterItem_substrings_strings_Item>(
                () => _decode_FilterItem_substrings_strings_Item
            )(sequence[1]);
            return new FilterItem_substrings(type_, strings, sequence.slice(2));
        };
    }
    return _cached_decoder_for_FilterItem_substrings(el);
}
/**
 * @summary Encodes a(n) FilterItem_substrings into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FilterItem_substrings, encoded as an ASN.1 Element.
 */
export function _encode_FilterItem_substrings(
    value: FilterItem_substrings,
    elGetter: $.ASN1Encoder<FilterItem_substrings>
) {
    if (!_cached_encoder_for_FilterItem_substrings) {
        _cached_encoder_for_FilterItem_substrings = function (
            value: FilterItem_substrings,
            elGetter: $.ASN1Encoder<FilterItem_substrings>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encodeObjectIdentifier(
                                value.type_,
                                $.BER
                            ),
                            /* REQUIRED   */ $._encodeSequenceOf<
                                FilterItem_substrings_strings_Item
                            >(
                                () =>
                                    _encode_FilterItem_substrings_strings_Item,
                                $.BER
                            )(value.strings, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_FilterItem_substrings(value, elGetter);
}

/**
 * @summary MatchingRuleAssertion
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * MatchingRuleAssertion ::= SEQUENCE {
 *   matchingRule  [1]  SET SIZE (1..MAX) OF MATCHING-RULE.&id,
 *   type          [2]  AttributeType OPTIONAL,
 *   matchValue    [3]  MATCHING-RULE.&AssertionType (CONSTRAINED BY {
 *     -- matchValue shall be a value of  type specified by the &AssertionType field of
 *     -- one of the MATCHING-RULE information objects identified by matchingRule -- }),
 *   dnAttributes  [4]  BOOLEAN DEFAULT FALSE,
 *   ... }
 * ```
 *
 * @class
 */
export class MatchingRuleAssertion {
    constructor(
        /**
         * @summary `matchingRule`.
         * @public
         * @readonly
         */
        readonly matchingRule: OBJECT_IDENTIFIER[],
        /**
         * @summary `type_`.
         * @public
         * @readonly
         */
        readonly type_: OPTIONAL<AttributeType>,
        /**
         * @summary `matchValue`.
         * @public
         * @readonly
         */
        readonly matchValue: _Element,
        /**
         * @summary `dnAttributes`.
         * @public
         * @readonly
         */
        readonly dnAttributes: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a MatchingRuleAssertion
     * @description
     *
     * This takes an `object` and converts it to a `MatchingRuleAssertion`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `MatchingRuleAssertion`.
     * @returns {MatchingRuleAssertion}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof MatchingRuleAssertion]: MatchingRuleAssertion[_K] }
        >
    ): MatchingRuleAssertion {
        return new MatchingRuleAssertion(
            _o.matchingRule,
            _o.type_,
            _o.matchValue,
            _o.dnAttributes,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `dnAttributes`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_dnAttributes() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of MatchingRuleAssertion
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_MatchingRuleAssertion: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "matchingRule",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "type",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "matchValue",
        false,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "dnAttributes",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of MatchingRuleAssertion
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_MatchingRuleAssertion: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of MatchingRuleAssertion
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_MatchingRuleAssertion: $.ComponentSpec[] = [];
let _cached_decoder_for_MatchingRuleAssertion: $.ASN1Decoder<
    MatchingRuleAssertion
> | null = null;
let _cached_encoder_for_MatchingRuleAssertion: $.ASN1Encoder<
    MatchingRuleAssertion
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) MatchingRuleAssertion
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {MatchingRuleAssertion} The decoded data structure.
 */
export function _decode_MatchingRuleAssertion(el: _Element) {
    if (!_cached_decoder_for_MatchingRuleAssertion) {
        _cached_decoder_for_MatchingRuleAssertion = function (
            el: _Element
        ): MatchingRuleAssertion {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let matchingRule!: OBJECT_IDENTIFIER[];
            let type_: OPTIONAL<AttributeType>;
            let matchValue!: _Element;
            let dnAttributes: OPTIONAL<BOOLEAN> =
                MatchingRuleAssertion._default_value_for_dnAttributes;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                matchingRule: (_el: _Element): void => {
                    matchingRule = $._decode_explicit<OBJECT_IDENTIFIER[]>(() =>
                        $._decodeSetOf<OBJECT_IDENTIFIER>(
                            () => $._decodeObjectIdentifier
                        )
                    )(_el);
                },
                type: (_el: _Element): void => {
                    type_ = $._decode_explicit<AttributeType>(
                        () => _decode_AttributeType
                    )(_el);
                },
                matchValue: (_el: _Element): void => {
                    matchValue = $._decode_explicit<_Element>(
                        () => $._decodeAny
                    )(_el);
                },
                dnAttributes: (_el: _Element): void => {
                    dnAttributes = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_MatchingRuleAssertion,
                _extension_additions_list_spec_for_MatchingRuleAssertion,
                _root_component_type_list_2_spec_for_MatchingRuleAssertion,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new MatchingRuleAssertion(
                /* SEQUENCE_CONSTRUCTOR_CALL */ matchingRule,
                type_,
                matchValue,
                dnAttributes,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_MatchingRuleAssertion(el);
}
/**
 * @summary Encodes a(n) MatchingRuleAssertion into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The MatchingRuleAssertion, encoded as an ASN.1 Element.
 */
export function _encode_MatchingRuleAssertion(
    value: MatchingRuleAssertion,
    elGetter: $.ASN1Encoder<MatchingRuleAssertion>
) {
    if (!_cached_encoder_for_MatchingRuleAssertion) {
        _cached_encoder_for_MatchingRuleAssertion = function (
            value: MatchingRuleAssertion,
            elGetter: $.ASN1Encoder<MatchingRuleAssertion>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () =>
                                    $._encodeSetOf<OBJECT_IDENTIFIER>(
                                        () => $._encodeObjectIdentifier,
                                        $.BER
                                    ),
                                $.BER
                            )(value.matchingRule, $.BER),
                            /* IF_ABSENT  */ value.type_ === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_AttributeType,
                                      $.BER
                                  )(value.type_, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                3,
                                () => $._encodeAny,
                                $.BER
                            )(value.matchValue, $.BER),
                            /* IF_DEFAULT */ value.dnAttributes === undefined ||
                            $.deepEq(
                                value.dnAttributes,
                                MatchingRuleAssertion._default_value_for_dnAttributes
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.dnAttributes, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_MatchingRuleAssertion(value, elGetter);
}

/**
 * @summary FilterItem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * FilterItem  ::=  CHOICE {
 *   equality          [0]  AttributeValueAssertion,
 *   substrings        [1]  SEQUENCE {
 *     type                   ATTRIBUTE.&id({SupportedAttributes}),
 *     strings                SEQUENCE OF CHOICE {
 *       initial           [0]  ATTRIBUTE.&Type
 *                               ({SupportedAttributes}{@substrings.type}),
 *       any               [1]  ATTRIBUTE.&Type
 *                               ({SupportedAttributes}{@substrings.type}),
 *       final             [2]  ATTRIBUTE.&Type
 *                               ({SupportedAttributes}{@substrings.type}),
 *       control                Attribute{{SupportedAttributes}},
 *                     -- Used to specify interpretation of following items
 *       ... },
 *     ... },
 *   greaterOrEqual    [2]  AttributeValueAssertion,
 *   lessOrEqual       [3]  AttributeValueAssertion,
 *   present           [4]  AttributeType,
 *   approximateMatch  [5]  AttributeValueAssertion,
 *   extensibleMatch   [6]  MatchingRuleAssertion,
 *   contextPresent    [7]  AttributeTypeAssertion,
 *   ... }
 * ```
 */
export type FilterItem =
    | { equality: AttributeValueAssertion } /* CHOICE_ALT_ROOT */
    | { substrings: FilterItem_substrings } /* CHOICE_ALT_ROOT */
    | { greaterOrEqual: AttributeValueAssertion } /* CHOICE_ALT_ROOT */
    | { lessOrEqual: AttributeValueAssertion } /* CHOICE_ALT_ROOT */
    | { present: AttributeType } /* CHOICE_ALT_ROOT */
    | { approximateMatch: AttributeValueAssertion } /* CHOICE_ALT_ROOT */
    | { extensibleMatch: MatchingRuleAssertion } /* CHOICE_ALT_ROOT */
    | { contextPresent: AttributeTypeAssertion } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_FilterItem: $.ASN1Decoder<FilterItem> | null = null;
let _cached_encoder_for_FilterItem: $.ASN1Encoder<FilterItem> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) FilterItem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {FilterItem} The decoded data structure.
 */
export function _decode_FilterItem(el: _Element) {
    if (!_cached_decoder_for_FilterItem) {
        _cached_decoder_for_FilterItem = $._decode_extensible_choice<
            FilterItem
        >({
            "CONTEXT 0": [
                "equality",
                $._decode_explicit<AttributeValueAssertion>(
                    () => _decode_AttributeValueAssertion
                ),
            ],
            "CONTEXT 1": [
                "substrings",
                $._decode_explicit<FilterItem_substrings>(
                    () => _decode_FilterItem_substrings
                ),
            ],
            "CONTEXT 2": [
                "greaterOrEqual",
                $._decode_explicit<AttributeValueAssertion>(
                    () => _decode_AttributeValueAssertion
                ),
            ],
            "CONTEXT 3": [
                "lessOrEqual",
                $._decode_explicit<AttributeValueAssertion>(
                    () => _decode_AttributeValueAssertion
                ),
            ],
            "CONTEXT 4": [
                "present",
                $._decode_explicit<AttributeType>(() => _decode_AttributeType),
            ],
            "CONTEXT 5": [
                "approximateMatch",
                $._decode_explicit<AttributeValueAssertion>(
                    () => _decode_AttributeValueAssertion
                ),
            ],
            "CONTEXT 6": [
                "extensibleMatch",
                $._decode_explicit<MatchingRuleAssertion>(
                    () => _decode_MatchingRuleAssertion
                ),
            ],
            "CONTEXT 7": [
                "contextPresent",
                $._decode_explicit<AttributeTypeAssertion>(
                    () => _decode_AttributeTypeAssertion
                ),
            ],
        });
    }
    return _cached_decoder_for_FilterItem(el);
}
/**
 * @summary Encodes a(n) FilterItem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The FilterItem, encoded as an ASN.1 Element.
 */
export function _encode_FilterItem(
    value: FilterItem,
    elGetter: $.ASN1Encoder<FilterItem>
) {
    if (!_cached_encoder_for_FilterItem) {
        _cached_encoder_for_FilterItem = $._encode_choice<FilterItem>(
            {
                equality: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => _encode_AttributeValueAssertion,
                    $.BER
                ),
                substrings: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => _encode_FilterItem_substrings,
                    $.BER
                ),
                greaterOrEqual: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => _encode_AttributeValueAssertion,
                    $.BER
                ),
                lessOrEqual: $._encode_explicit(
                    _TagClass.context,
                    3,
                    () => _encode_AttributeValueAssertion,
                    $.BER
                ),
                present: $._encode_explicit(
                    _TagClass.context,
                    4,
                    () => _encode_AttributeType,
                    $.BER
                ),
                approximateMatch: $._encode_explicit(
                    _TagClass.context,
                    5,
                    () => _encode_AttributeValueAssertion,
                    $.BER
                ),
                extensibleMatch: $._encode_explicit(
                    _TagClass.context,
                    6,
                    () => _encode_MatchingRuleAssertion,
                    $.BER
                ),
                contextPresent: $._encode_explicit(
                    _TagClass.context,
                    7,
                    () => _encode_AttributeTypeAssertion,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_FilterItem(value, elGetter);
}

/**
 * @summary Filter
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * Filter  ::=  CHOICE {
 *   item  [0]  FilterItem,
 *   and   [1]  SET OF Filter,
 *   or    [2]  SET OF Filter,
 *   not   [3]  Filter,
 *   ... }
 * ```
 */
export type Filter =
    | { item: FilterItem } /* CHOICE_ALT_ROOT */
    | { and: Filter[] } /* CHOICE_ALT_ROOT */
    | { or: Filter[] } /* CHOICE_ALT_ROOT */
    | { not: Filter } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_Filter: $.ASN1Decoder<Filter> | null = null;
let _cached_encoder_for_Filter: $.ASN1Encoder<Filter> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) Filter
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {Filter} The decoded data structure.
 */
export function _decode_Filter(el: _Element) {
    if (!_cached_decoder_for_Filter) {
        _cached_decoder_for_Filter = $._decode_extensible_choice<Filter>({
            "CONTEXT 0": [
                "item",
                $._decode_explicit<FilterItem>(() => _decode_FilterItem),
            ],
            "CONTEXT 1": [
                "and",
                $._decode_explicit<Filter[]>(() =>
                    $._decodeSetOf<Filter>(() => _decode_Filter)
                ),
            ],
            "CONTEXT 2": [
                "or",
                $._decode_explicit<Filter[]>(() =>
                    $._decodeSetOf<Filter>(() => _decode_Filter)
                ),
            ],
            "CONTEXT 3": [
                "not",
                $._decode_explicit<Filter>(() => _decode_Filter),
            ],
        });
    }
    return _cached_decoder_for_Filter(el);
}
/**
 * @summary Encodes a(n) Filter into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The Filter, encoded as an ASN.1 Element.
 */
export function _encode_Filter(value: Filter, elGetter: $.ASN1Encoder<Filter>) {
    if (!_cached_encoder_for_Filter) {
        _cached_encoder_for_Filter = $._encode_choice<Filter>(
            {
                item: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => _encode_FilterItem,
                    $.BER
                ),
                and: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => $._encodeSetOf<Filter>(() => _encode_Filter, $.BER),
                    $.BER
                ),
                or: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => $._encodeSetOf<Filter>(() => _encode_Filter, $.BER),
                    $.BER
                ),
                not: $._encode_explicit(
                    _TagClass.context,
                    3,
                    () => _encode_Filter,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_Filter(value, elGetter);
}

/**
 * @summary PartialOutcomeQualifier_entryCount
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PartialOutcomeQualifier-entryCount ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type PartialOutcomeQualifier_entryCount =
    | { bestEstimate: INTEGER } /* CHOICE_ALT_ROOT */
    | { lowEstimate: INTEGER } /* CHOICE_ALT_ROOT */
    | { exact: INTEGER } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_PartialOutcomeQualifier_entryCount: $.ASN1Decoder<
    PartialOutcomeQualifier_entryCount
> | null = null;
let _cached_encoder_for_PartialOutcomeQualifier_entryCount: $.ASN1Encoder<
    PartialOutcomeQualifier_entryCount
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PartialOutcomeQualifier_entryCount
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PartialOutcomeQualifier_entryCount} The decoded data structure.
 */
export function _decode_PartialOutcomeQualifier_entryCount(el: _Element) {
    if (!_cached_decoder_for_PartialOutcomeQualifier_entryCount) {
        _cached_decoder_for_PartialOutcomeQualifier_entryCount = $._decode_extensible_choice<
            PartialOutcomeQualifier_entryCount
        >({
            "CONTEXT 7": [
                "bestEstimate",
                $._decode_explicit<INTEGER>(() => $._decodeInteger),
            ],
            "CONTEXT 8": [
                "lowEstimate",
                $._decode_explicit<INTEGER>(() => $._decodeInteger),
            ],
            "CONTEXT 9": [
                "exact",
                $._decode_explicit<INTEGER>(() => $._decodeInteger),
            ],
        });
    }
    return _cached_decoder_for_PartialOutcomeQualifier_entryCount(el);
}
/**
 * @summary Encodes a(n) PartialOutcomeQualifier_entryCount into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PartialOutcomeQualifier_entryCount, encoded as an ASN.1 Element.
 */
export function _encode_PartialOutcomeQualifier_entryCount(
    value: PartialOutcomeQualifier_entryCount,
    elGetter: $.ASN1Encoder<PartialOutcomeQualifier_entryCount>
) {
    if (!_cached_encoder_for_PartialOutcomeQualifier_entryCount) {
        _cached_encoder_for_PartialOutcomeQualifier_entryCount = $._encode_choice<
            PartialOutcomeQualifier_entryCount
        >(
            {
                bestEstimate: $._encode_explicit(
                    _TagClass.context,
                    7,
                    () => $._encodeInteger,
                    $.BER
                ),
                lowEstimate: $._encode_explicit(
                    _TagClass.context,
                    8,
                    () => $._encodeInteger,
                    $.BER
                ),
                exact: $._encode_explicit(
                    _TagClass.context,
                    9,
                    () => $._encodeInteger,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_PartialOutcomeQualifier_entryCount(
        value,
        elGetter
    );
}

/**
 * @summary PartialOutcomeQualifier
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * PartialOutcomeQualifier ::= SET {
 *   limitProblem                  [0]  LimitProblem OPTIONAL,
 *   unexplored                    [1]  SET SIZE (1..MAX) OF ContinuationReference OPTIONAL,
 *   unavailableCriticalExtensions [2]  BOOLEAN DEFAULT FALSE,
 *   unknownErrors                 [3]  SET SIZE (1..MAX) OF ABSTRACT-SYNTAX.&Type OPTIONAL,
 *   queryReference                [4]  OCTET STRING OPTIONAL,
 *   overspecFilter                [5]  Filter OPTIONAL,
 *   notification                  [6]  SEQUENCE SIZE (1..MAX) OF
 *                                        Attribute{{SupportedAttributes}} OPTIONAL,
 *   entryCount                         CHOICE {
 *     bestEstimate                  [7]  INTEGER,
 *     lowEstimate                   [8]  INTEGER,
 *     exact                         [9]  INTEGER,
 *     ...} OPTIONAL
 *   --                            [10] Not to be used -- }
 * ```
 *
 * @class
 */
export class PartialOutcomeQualifier {
    constructor(
        /**
         * @summary `limitProblem`.
         * @public
         * @readonly
         */
        readonly limitProblem: OPTIONAL<LimitProblem>,
        /**
         * @summary `unexplored`.
         * @public
         * @readonly
         */
        readonly unexplored: OPTIONAL<ContinuationReference[]>,
        /**
         * @summary `unavailableCriticalExtensions`.
         * @public
         * @readonly
         */
        readonly unavailableCriticalExtensions: OPTIONAL<BOOLEAN>,
        /**
         * @summary `unknownErrors`.
         * @public
         * @readonly
         */
        readonly unknownErrors: OPTIONAL<_Element[]>,
        /**
         * @summary `queryReference`.
         * @public
         * @readonly
         */
        readonly queryReference: OPTIONAL<OCTET_STRING>,
        /**
         * @summary `overspecFilter`.
         * @public
         * @readonly
         */
        readonly overspecFilter: OPTIONAL<Filter>,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]>,
        /**
         * @summary `entryCount`.
         * @public
         * @readonly
         */
        readonly entryCount: OPTIONAL<PartialOutcomeQualifier_entryCount>
    ) {}

    /**
     * @summary Restructures an object into a PartialOutcomeQualifier
     * @description
     *
     * This takes an `object` and converts it to a `PartialOutcomeQualifier`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `PartialOutcomeQualifier`.
     * @returns {PartialOutcomeQualifier}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof PartialOutcomeQualifier]: PartialOutcomeQualifier[_K];
            }
        >
    ): PartialOutcomeQualifier {
        return new PartialOutcomeQualifier(
            _o.limitProblem,
            _o.unexplored,
            _o.unavailableCriticalExtensions,
            _o.unknownErrors,
            _o.queryReference,
            _o.overspecFilter,
            _o.notification,
            _o.entryCount
        );
    }

    /**
     * @summary Getter that returns the default value for `unavailableCriticalExtensions`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_unavailableCriticalExtensions() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of PartialOutcomeQualifier
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_PartialOutcomeQualifier: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "limitProblem",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "unexplored",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "unavailableCriticalExtensions",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "unknownErrors",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "queryReference",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "overspecFilter",
        true,
        $.hasTag(_TagClass.context, 5),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec("entryCount", true, $.hasAnyTag, undefined, undefined),
];
/**
 * @summary The Trailing Root Component Types of PartialOutcomeQualifier
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_PartialOutcomeQualifier: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of PartialOutcomeQualifier
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_PartialOutcomeQualifier: $.ComponentSpec[] = [];
let _cached_decoder_for_PartialOutcomeQualifier: $.ASN1Decoder<
    PartialOutcomeQualifier
> | null = null;
let _cached_encoder_for_PartialOutcomeQualifier: $.ASN1Encoder<
    PartialOutcomeQualifier
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) PartialOutcomeQualifier
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {PartialOutcomeQualifier} The decoded data structure.
 */
export function _decode_PartialOutcomeQualifier(el: _Element) {
    if (!_cached_decoder_for_PartialOutcomeQualifier) {
        _cached_decoder_for_PartialOutcomeQualifier = function (
            el: _Element
        ): PartialOutcomeQualifier {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let limitProblem: OPTIONAL<LimitProblem>;
            let unexplored: OPTIONAL<ContinuationReference[]>;
            let unavailableCriticalExtensions: OPTIONAL<BOOLEAN> =
                PartialOutcomeQualifier._default_value_for_unavailableCriticalExtensions;
            let unknownErrors: OPTIONAL<_Element[]>;
            let queryReference: OPTIONAL<OCTET_STRING>;
            let overspecFilter: OPTIONAL<Filter>;
            let notification: OPTIONAL<Attribute[]>;
            let entryCount: OPTIONAL<PartialOutcomeQualifier_entryCount>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                limitProblem: (_el: _Element): void => {
                    limitProblem = $._decode_explicit<LimitProblem>(
                        () => _decode_LimitProblem
                    )(_el);
                },
                unexplored: (_el: _Element): void => {
                    unexplored = $._decode_explicit<ContinuationReference[]>(
                        () =>
                            $._decodeSetOf<ContinuationReference>(
                                () => _decode_ContinuationReference
                            )
                    )(_el);
                },
                unavailableCriticalExtensions: (_el: _Element): void => {
                    unavailableCriticalExtensions = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                unknownErrors: (_el: _Element): void => {
                    unknownErrors = $._decode_explicit<_Element[]>(() =>
                        $._decodeSetOf<_Element>(() => $._decodeAny)
                    )(_el);
                },
                queryReference: (_el: _Element): void => {
                    queryReference = $._decode_explicit<OCTET_STRING>(
                        () => $._decodeOctetString
                    )(_el);
                },
                overspecFilter: (_el: _Element): void => {
                    overspecFilter = $._decode_explicit<Filter>(
                        () => _decode_Filter
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
                entryCount: (_el: _Element): void => {
                    entryCount = _decode_PartialOutcomeQualifier_entryCount(
                        _el
                    );
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_PartialOutcomeQualifier,
                _extension_additions_list_spec_for_PartialOutcomeQualifier,
                _root_component_type_list_2_spec_for_PartialOutcomeQualifier,
                undefined
            );
            return new PartialOutcomeQualifier(
                /* SET_CONSTRUCTOR_CALL */ limitProblem,
                unexplored,
                unavailableCriticalExtensions,
                unknownErrors,
                queryReference,
                overspecFilter,
                notification,
                entryCount
            );
        };
    }
    return _cached_decoder_for_PartialOutcomeQualifier(el);
}
/**
 * @summary Encodes a(n) PartialOutcomeQualifier into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The PartialOutcomeQualifier, encoded as an ASN.1 Element.
 */
export function _encode_PartialOutcomeQualifier(
    value: PartialOutcomeQualifier,
    elGetter: $.ASN1Encoder<PartialOutcomeQualifier>
) {
    if (!_cached_encoder_for_PartialOutcomeQualifier) {
        _cached_encoder_for_PartialOutcomeQualifier = function (
            value: PartialOutcomeQualifier,
            elGetter: $.ASN1Encoder<PartialOutcomeQualifier>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat([
                        /* IF_ABSENT  */ value.limitProblem === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  0,
                                  () => _encode_LimitProblem,
                                  $.BER
                              )(value.limitProblem, $.BER),
                        /* IF_ABSENT  */ value.unexplored === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  1,
                                  () =>
                                      $._encodeSetOf<ContinuationReference>(
                                          () => _encode_ContinuationReference,
                                          $.BER
                                      ),
                                  $.BER
                              )(value.unexplored, $.BER),
                        /* IF_DEFAULT */ value.unavailableCriticalExtensions ===
                            undefined ||
                        $.deepEq(
                            value.unavailableCriticalExtensions,
                            PartialOutcomeQualifier._default_value_for_unavailableCriticalExtensions
                        )
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  2,
                                  () => $._encodeBoolean,
                                  $.BER
                              )(value.unavailableCriticalExtensions, $.BER),
                        /* IF_ABSENT  */ value.unknownErrors === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  3,
                                  () =>
                                      $._encodeSetOf<_Element>(
                                          () => $._encodeAny,
                                          $.BER
                                      ),
                                  $.BER
                              )(value.unknownErrors, $.BER),
                        /* IF_ABSENT  */ value.queryReference === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  4,
                                  () => $._encodeOctetString,
                                  $.BER
                              )(value.queryReference, $.BER),
                        /* IF_ABSENT  */ value.overspecFilter === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  5,
                                  () => _encode_Filter,
                                  $.BER
                              )(value.overspecFilter, $.BER),
                        /* IF_ABSENT  */ value.notification === undefined
                            ? undefined
                            : $._encode_explicit(
                                  _TagClass.context,
                                  6,
                                  () =>
                                      $._encodeSequenceOf<Attribute>(
                                          () => _encode_Attribute,
                                          $.BER
                                      ),
                                  $.BER
                              )(value.notification, $.BER),
                        /* IF_ABSENT  */ value.entryCount === undefined
                            ? undefined
                            : _encode_PartialOutcomeQualifier_entryCount(
                                  value.entryCount,
                                  $.BER
                              ),
                    ])
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_PartialOutcomeQualifier(value, elGetter);
}

/**
 * @summary ListResultData_listInfo
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ListResultData-listInfo ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class ListResultData_listInfo {
    constructor(
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: OPTIONAL<Name>,
        /**
         * @summary `subordinates`.
         * @public
         * @readonly
         */
        readonly subordinates: ListResultData_listInfo_subordinates_Item[],
        /**
         * @summary `partialOutcomeQualifier`.
         * @public
         * @readonly
         */
        readonly partialOutcomeQualifier: OPTIONAL<PartialOutcomeQualifier>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ListResultData_listInfo
     * @description
     *
     * This takes an `object` and converts it to a `ListResultData_listInfo`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ListResultData_listInfo`.
     * @returns {ListResultData_listInfo}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof ListResultData_listInfo]: ListResultData_listInfo[_K];
            }
        >
    ): ListResultData_listInfo {
        return new ListResultData_listInfo(
            _o.name,
            _o.subordinates,
            _o.partialOutcomeQualifier,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ListResultData_listInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ListResultData_listInfo: $.ComponentSpec[] = [
    new $.ComponentSpec("name", true, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "subordinates",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "partialOutcomeQualifier",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ListResultData_listInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ListResultData_listInfo: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ListResultData_listInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ListResultData_listInfo: $.ComponentSpec[] = [];
let _cached_decoder_for_ListResultData_listInfo: $.ASN1Decoder<
    ListResultData_listInfo
> | null = null;
let _cached_encoder_for_ListResultData_listInfo: $.ASN1Encoder<
    ListResultData_listInfo
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ListResultData_listInfo
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ListResultData_listInfo} The decoded data structure.
 */
export function _decode_ListResultData_listInfo(el: _Element) {
    if (!_cached_decoder_for_ListResultData_listInfo) {
        _cached_decoder_for_ListResultData_listInfo = function (
            el: _Element
        ): ListResultData_listInfo {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let name: OPTIONAL<Name>;
            let subordinates!: ListResultData_listInfo_subordinates_Item[];
            let partialOutcomeQualifier: OPTIONAL<PartialOutcomeQualifier>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ListResultData_listInfo._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                name: (_el: _Element): void => {
                    name = _decode_Name(_el);
                },
                subordinates: (_el: _Element): void => {
                    subordinates = $._decode_explicit<
                        ListResultData_listInfo_subordinates_Item[]
                    >(() =>
                        $._decodeSetOf<
                            ListResultData_listInfo_subordinates_Item
                        >(
                            () =>
                                _decode_ListResultData_listInfo_subordinates_Item
                        )
                    )(_el);
                },
                partialOutcomeQualifier: (_el: _Element): void => {
                    partialOutcomeQualifier = $._decode_explicit<
                        PartialOutcomeQualifier
                    >(() => _decode_PartialOutcomeQualifier)(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ListResultData_listInfo,
                _extension_additions_list_spec_for_ListResultData_listInfo,
                _root_component_type_list_2_spec_for_ListResultData_listInfo,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ListResultData_listInfo(
                /* SET_CONSTRUCTOR_CALL */ name,
                subordinates,
                partialOutcomeQualifier,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ListResultData_listInfo(el);
}
/**
 * @summary Encodes a(n) ListResultData_listInfo into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ListResultData_listInfo, encoded as an ASN.1 Element.
 */
export function _encode_ListResultData_listInfo(
    value: ListResultData_listInfo,
    elGetter: $.ASN1Encoder<ListResultData_listInfo>
) {
    if (!_cached_encoder_for_ListResultData_listInfo) {
        _cached_encoder_for_ListResultData_listInfo = function (
            value: ListResultData_listInfo,
            elGetter: $.ASN1Encoder<ListResultData_listInfo>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.name === undefined
                                ? undefined
                                : _encode_Name(value.name, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () =>
                                    $._encodeSetOf<
                                        ListResultData_listInfo_subordinates_Item
                                    >(
                                        () =>
                                            _encode_ListResultData_listInfo_subordinates_Item,
                                        $.BER
                                    ),
                                $.BER
                            )(value.subordinates, $.BER),
                            /* IF_ABSENT  */ value.partialOutcomeQualifier ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_PartialOutcomeQualifier,
                                      $.BER
                                  )(value.partialOutcomeQualifier, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ListResultData_listInfo._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ListResultData_listInfo(value, elGetter);
}

/**
 * @summary ListResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ListResultData  ::=  CHOICE {
 *   listInfo                     SET {
 *     name                         Name OPTIONAL,
 *     subordinates            [1]  SET OF SEQUENCE {
 *       rdn                          RelativeDistinguishedName,
 *       aliasEntry              [0]  BOOLEAN DEFAULT FALSE,
 *       fromEntry               [1]  BOOLEAN DEFAULT TRUE,
 *       ... },
 *     partialOutcomeQualifier [2]  PartialOutcomeQualifier OPTIONAL,
 *     ...,
 *     ...,
 *     COMPONENTS OF                CommonResults
 *     },
 *   uncorrelatedListInfo    [0]  SET OF ListResult,
 *   ... }
 * ```
 */
export type ListResultData =
    | { listInfo: ListResultData_listInfo } /* CHOICE_ALT_ROOT */
    | { uncorrelatedListInfo: ListResult[] } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_ListResultData: $.ASN1Decoder<
    ListResultData
> | null = null;
let _cached_encoder_for_ListResultData: $.ASN1Encoder<
    ListResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ListResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ListResultData} The decoded data structure.
 */
export function _decode_ListResultData(el: _Element) {
    if (!_cached_decoder_for_ListResultData) {
        _cached_decoder_for_ListResultData = $._decode_extensible_choice<
            ListResultData
        >({
            "UNIVERSAL 17": ["listInfo", _decode_ListResultData_listInfo],
            "CONTEXT 0": [
                "uncorrelatedListInfo",
                $._decode_explicit<ListResult[]>(() =>
                    $._decodeSetOf<ListResult>(() => _decode_ListResult)
                ),
            ],
        });
    }
    return _cached_decoder_for_ListResultData(el);
}
/**
 * @summary Encodes a(n) ListResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ListResultData, encoded as an ASN.1 Element.
 */
export function _encode_ListResultData(
    value: ListResultData,
    elGetter: $.ASN1Encoder<ListResultData>
) {
    if (!_cached_encoder_for_ListResultData) {
        _cached_encoder_for_ListResultData = $._encode_choice<ListResultData>(
            {
                listInfo: _encode_ListResultData_listInfo,
                uncorrelatedListInfo: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () =>
                        $._encodeSetOf<ListResult>(
                            () => _encode_ListResult,
                            $.BER
                        ),
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_ListResultData(value, elGetter);
}

export type ListResult<> = OPTIONALLY_PROTECTED<ListResultData>; // DefinedType
let _cached_decoder_for_ListResult: $.ASN1Decoder<ListResult> | null = null;
let _cached_encoder_for_ListResult: $.ASN1Encoder<ListResult> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ListResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ListResult} The decoded data structure.
 */
export function _decode_ListResult(el: _Element) {
    if (!_cached_decoder_for_ListResult) {
        _cached_decoder_for_ListResult = _get_decoder_for_OPTIONALLY_PROTECTED<
            ListResultData
        >(_decode_ListResultData);
    }
    return _cached_decoder_for_ListResult(el);
}
/**
 * @summary Encodes a(n) ListResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ListResult, encoded as an ASN.1 Element.
 */
export function _encode_ListResult(
    value: ListResult,
    elGetter: $.ASN1Encoder<ListResult>
) {
    if (!_cached_encoder_for_ListResult) {
        _cached_encoder_for_ListResult = _get_encoder_for_OPTIONALLY_PROTECTED<
            ListResultData
        >(_encode_ListResultData);
    }
    return _cached_encoder_for_ListResult(value, elGetter);
}

/**
 * @summary list
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * list OPERATION ::= {
 *   ARGUMENT  ListArgument
 *   RESULT    ListResult
 *   ERRORS    {nameError |
 *              serviceError |
 *              referral |
 *              abandoned |
 *              securityError}
 *   CODE      id-opcode-list }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const list: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_ListArgument,
        "&ResultType": _decode_ListResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_ListArgument,
        "&ResultType": _encode_ListResult,
    },
    "&Errors": [
        nameError,
        serviceError,
        referral,
        abandoned,
        securityError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_list /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary SearchArgumentData_subset
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SearchArgumentData-subset ::= INTEGER { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type SearchArgumentData_subset = INTEGER;
/**
 * @summary SearchArgumentData_subset_baseObject
 * @constant
 * @type {number}
 */
export const SearchArgumentData_subset_baseObject: SearchArgumentData_subset = 0; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SearchArgumentData_subset_oneLevel
 * @constant
 * @type {number}
 */
export const SearchArgumentData_subset_oneLevel: SearchArgumentData_subset = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary SearchArgumentData_subset_wholeSubtree
 * @constant
 * @type {number}
 */
export const SearchArgumentData_subset_wholeSubtree: SearchArgumentData_subset = 2; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_SearchArgumentData_subset: $.ASN1Decoder<
    SearchArgumentData_subset
> | null = null;
let _cached_encoder_for_SearchArgumentData_subset: $.ASN1Encoder<
    SearchArgumentData_subset
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchArgumentData_subset
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchArgumentData_subset} The decoded data structure.
 */
export function _decode_SearchArgumentData_subset(el: _Element) {
    if (!_cached_decoder_for_SearchArgumentData_subset) {
        _cached_decoder_for_SearchArgumentData_subset = $._decodeInteger;
    }
    return _cached_decoder_for_SearchArgumentData_subset(el);
}
/**
 * @summary Encodes a(n) SearchArgumentData_subset into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchArgumentData_subset, encoded as an ASN.1 Element.
 */
export function _encode_SearchArgumentData_subset(
    value: SearchArgumentData_subset,
    elGetter: $.ASN1Encoder<SearchArgumentData_subset>
) {
    if (!_cached_encoder_for_SearchArgumentData_subset) {
        _cached_encoder_for_SearchArgumentData_subset = $._encodeInteger;
    }
    return _cached_encoder_for_SearchArgumentData_subset(value, elGetter);
}

/**
 * @summary HierarchySelections
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * HierarchySelections  ::=  BIT STRING {
 *   self                  (0),
 *   children              (1),
 *   parent                (2),
 *   hierarchy             (3),
 *   top                   (4),
 *   subtree               (5),
 *   siblings              (6),
 *   siblingChildren       (7),
 *   siblingSubtree        (8),
 *   all                   (9) }
 * ```
 */
export type HierarchySelections = BIT_STRING;
/**
 * @summary HierarchySelections_self
 * @constant
 */
export const HierarchySelections_self: number = 0; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_children
 * @constant
 */
export const HierarchySelections_children: number = 1; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_parent
 * @constant
 */
export const HierarchySelections_parent: number = 2; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_hierarchy
 * @constant
 */
export const HierarchySelections_hierarchy: number = 3; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_top
 * @constant
 */
export const HierarchySelections_top: number = 4; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_subtree
 * @constant
 */
export const HierarchySelections_subtree: number = 5; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_siblings
 * @constant
 */
export const HierarchySelections_siblings: number = 6; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_siblingChildren
 * @constant
 */
export const HierarchySelections_siblingChildren: number = 7; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_siblingSubtree
 * @constant
 */
export const HierarchySelections_siblingSubtree: number = 8; /* LONG_NAMED_BIT */
/**
 * @summary HierarchySelections_all
 * @constant
 */
export const HierarchySelections_all: number = 9; /* LONG_NAMED_BIT */
let _cached_decoder_for_HierarchySelections: $.ASN1Decoder<
    HierarchySelections
> | null = null;
let _cached_encoder_for_HierarchySelections: $.ASN1Encoder<
    HierarchySelections
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) HierarchySelections
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {HierarchySelections} The decoded data structure.
 */
export function _decode_HierarchySelections(el: _Element) {
    if (!_cached_decoder_for_HierarchySelections) {
        _cached_decoder_for_HierarchySelections = $._decodeBitString;
    }
    return _cached_decoder_for_HierarchySelections(el);
}
/**
 * @summary Encodes a(n) HierarchySelections into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The HierarchySelections, encoded as an ASN.1 Element.
 */
export function _encode_HierarchySelections(
    value: HierarchySelections,
    elGetter: $.ASN1Encoder<HierarchySelections>
) {
    if (!_cached_encoder_for_HierarchySelections) {
        _cached_encoder_for_HierarchySelections = $._encodeBitString;
    }
    return _cached_encoder_for_HierarchySelections(value, elGetter);
}

/**
 * @summary SearchControlOptions
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SearchControlOptions  ::=  BIT STRING {
 *   searchAliases         (0),
 *   matchedValuesOnly     (1),
 *   checkOverspecified    (2),
 *   performExactly        (3),
 *   includeAllAreas       (4),
 *   noSystemRelaxation    (5),
 *   dnAttribute           (6),
 *   matchOnResidualName   (7),
 *   entryCount            (8),
 *   useSubset             (9),
 *   separateFamilyMembers (10),
 *   searchFamily          (11) }
 * ```
 */
export type SearchControlOptions = BIT_STRING;
/**
 * @summary SearchControlOptions_searchAliases
 * @constant
 */
export const SearchControlOptions_searchAliases: number = 0; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_matchedValuesOnly
 * @constant
 */
export const SearchControlOptions_matchedValuesOnly: number = 1; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_checkOverspecified
 * @constant
 */
export const SearchControlOptions_checkOverspecified: number = 2; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_performExactly
 * @constant
 */
export const SearchControlOptions_performExactly: number = 3; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_includeAllAreas
 * @constant
 */
export const SearchControlOptions_includeAllAreas: number = 4; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_noSystemRelaxation
 * @constant
 */
export const SearchControlOptions_noSystemRelaxation: number = 5; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_dnAttribute
 * @constant
 */
export const SearchControlOptions_dnAttribute: number = 6; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_matchOnResidualName
 * @constant
 */
export const SearchControlOptions_matchOnResidualName: number = 7; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_entryCount
 * @constant
 */
export const SearchControlOptions_entryCount: number = 8; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_useSubset
 * @constant
 */
export const SearchControlOptions_useSubset: number = 9; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_separateFamilyMembers
 * @constant
 */
export const SearchControlOptions_separateFamilyMembers: number = 10; /* LONG_NAMED_BIT */
/**
 * @summary SearchControlOptions_searchFamily
 * @constant
 */
export const SearchControlOptions_searchFamily: number = 11; /* LONG_NAMED_BIT */
let _cached_decoder_for_SearchControlOptions: $.ASN1Decoder<
    SearchControlOptions
> | null = null;
let _cached_encoder_for_SearchControlOptions: $.ASN1Encoder<
    SearchControlOptions
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchControlOptions
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchControlOptions} The decoded data structure.
 */
export function _decode_SearchControlOptions(el: _Element) {
    if (!_cached_decoder_for_SearchControlOptions) {
        _cached_decoder_for_SearchControlOptions = $._decodeBitString;
    }
    return _cached_decoder_for_SearchControlOptions(el);
}
/**
 * @summary Encodes a(n) SearchControlOptions into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchControlOptions, encoded as an ASN.1 Element.
 */
export function _encode_SearchControlOptions(
    value: SearchControlOptions,
    elGetter: $.ASN1Encoder<SearchControlOptions>
) {
    if (!_cached_encoder_for_SearchControlOptions) {
        _cached_encoder_for_SearchControlOptions = $._encodeBitString;
    }
    return _cached_encoder_for_SearchControlOptions(value, elGetter);
}

export type DomainLocalID<> = UnboundedDirectoryString; // DefinedType
let _cached_decoder_for_DomainLocalID: $.ASN1Decoder<
    DomainLocalID
> | null = null;
let _cached_encoder_for_DomainLocalID: $.ASN1Encoder<
    DomainLocalID
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) DomainLocalID
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {DomainLocalID} The decoded data structure.
 */
export function _decode_DomainLocalID(el: _Element) {
    if (!_cached_decoder_for_DomainLocalID) {
        _cached_decoder_for_DomainLocalID = _decode_UnboundedDirectoryString;
    }
    return _cached_decoder_for_DomainLocalID(el);
}
/**
 * @summary Encodes a(n) DomainLocalID into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The DomainLocalID, encoded as an ASN.1 Element.
 */
export function _encode_DomainLocalID(
    value: DomainLocalID,
    elGetter: $.ASN1Encoder<DomainLocalID>
) {
    if (!_cached_encoder_for_DomainLocalID) {
        _cached_encoder_for_DomainLocalID = _encode_UnboundedDirectoryString;
    }
    return _cached_encoder_for_DomainLocalID(value, elGetter);
}

/**
 * @summary JoinArgument_joinSubset
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * JoinArgument-joinSubset ::= ENUMERATED { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @enum {number}
 */
export enum _enum_for_JoinArgument_joinSubset {
    baseObject = 0,
    oneLevel = 1,
    wholeSubtree = 2,
}
/**
 * @summary JoinArgument_joinSubset
 */
export type JoinArgument_joinSubset =
    | _enum_for_JoinArgument_joinSubset
    | ENUMERATED;
/**
 * @summary JoinArgument_joinSubset_baseObject
 * @constant
 * @type {number}
 */
export const JoinArgument_joinSubset_baseObject: JoinArgument_joinSubset = 0; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary JoinArgument_joinSubset_oneLevel
 * @constant
 * @type {number}
 */
export const JoinArgument_joinSubset_oneLevel: JoinArgument_joinSubset = 1; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary JoinArgument_joinSubset_wholeSubtree
 * @constant
 * @type {number}
 */
export const JoinArgument_joinSubset_wholeSubtree: JoinArgument_joinSubset = 2; /* LONG_NAMED_ENUMERATED_VALUE */
let _cached_decoder_for_JoinArgument_joinSubset: $.ASN1Decoder<
    JoinArgument_joinSubset
> | null = null;
let _cached_encoder_for_JoinArgument_joinSubset: $.ASN1Encoder<
    JoinArgument_joinSubset
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) JoinArgument_joinSubset
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {JoinArgument_joinSubset} The decoded data structure.
 */
export function _decode_JoinArgument_joinSubset(el: _Element) {
    if (!_cached_decoder_for_JoinArgument_joinSubset) {
        _cached_decoder_for_JoinArgument_joinSubset = $._decodeEnumerated;
    }
    return _cached_decoder_for_JoinArgument_joinSubset(el);
}
/**
 * @summary Encodes a(n) JoinArgument_joinSubset into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The JoinArgument_joinSubset, encoded as an ASN.1 Element.
 */
export function _encode_JoinArgument_joinSubset(
    value: JoinArgument_joinSubset,
    elGetter: $.ASN1Encoder<JoinArgument_joinSubset>
) {
    if (!_cached_encoder_for_JoinArgument_joinSubset) {
        _cached_encoder_for_JoinArgument_joinSubset = $._encodeEnumerated;
    }
    return _cached_encoder_for_JoinArgument_joinSubset(value, elGetter);
}

export type JoinContextType<> = OBJECT_IDENTIFIER; // ObjectClassFieldType
let _cached_decoder_for_JoinContextType: $.ASN1Decoder<
    JoinContextType
> | null = null;
let _cached_encoder_for_JoinContextType: $.ASN1Encoder<
    JoinContextType
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) JoinContextType
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {JoinContextType} The decoded data structure.
 */
export function _decode_JoinContextType(el: _Element) {
    if (!_cached_decoder_for_JoinContextType) {
        _cached_decoder_for_JoinContextType = $._decodeObjectIdentifier;
    }
    return _cached_decoder_for_JoinContextType(el);
}
/**
 * @summary Encodes a(n) JoinContextType into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The JoinContextType, encoded as an ASN.1 Element.
 */
export function _encode_JoinContextType(
    value: JoinContextType,
    elGetter: $.ASN1Encoder<JoinContextType>
) {
    if (!_cached_encoder_for_JoinContextType) {
        _cached_encoder_for_JoinContextType = $._encodeObjectIdentifier;
    }
    return _cached_encoder_for_JoinContextType(value, elGetter);
}

/**
 * @summary JoinAttPair
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * JoinAttPair ::= SEQUENCE {
 *   baseAtt      AttributeType,
 *   joinAtt      AttributeType,
 *   joinContext  SEQUENCE SIZE (1..MAX) OF JoinContextType OPTIONAL,
 *   ... }
 * ```
 *
 * @class
 */
export class JoinAttPair {
    constructor(
        /**
         * @summary `baseAtt`.
         * @public
         * @readonly
         */
        readonly baseAtt: AttributeType,
        /**
         * @summary `joinAtt`.
         * @public
         * @readonly
         */
        readonly joinAtt: AttributeType,
        /**
         * @summary `joinContext`.
         * @public
         * @readonly
         */
        readonly joinContext: OPTIONAL<JoinContextType[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a JoinAttPair
     * @description
     *
     * This takes an `object` and converts it to a `JoinAttPair`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `JoinAttPair`.
     * @returns {JoinAttPair}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof JoinAttPair]: JoinAttPair[_K] }>
    ): JoinAttPair {
        return new JoinAttPair(
            _o.baseAtt,
            _o.joinAtt,
            _o.joinContext,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of JoinAttPair
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_JoinAttPair: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "baseAtt",
        false,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinAtt",
        false,
        $.hasTag(_TagClass.universal, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinContext",
        true,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of JoinAttPair
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_JoinAttPair: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of JoinAttPair
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_JoinAttPair: $.ComponentSpec[] = [];
let _cached_decoder_for_JoinAttPair: $.ASN1Decoder<JoinAttPair> | null = null;
let _cached_encoder_for_JoinAttPair: $.ASN1Encoder<JoinAttPair> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) JoinAttPair
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {JoinAttPair} The decoded data structure.
 */
export function _decode_JoinAttPair(el: _Element) {
    if (!_cached_decoder_for_JoinAttPair) {
        _cached_decoder_for_JoinAttPair = function (el: _Element): JoinAttPair {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let baseAtt!: AttributeType;
            let joinAtt!: AttributeType;
            let joinContext: OPTIONAL<JoinContextType[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                baseAtt: (_el: _Element): void => {
                    baseAtt = _decode_AttributeType(_el);
                },
                joinAtt: (_el: _Element): void => {
                    joinAtt = _decode_AttributeType(_el);
                },
                joinContext: (_el: _Element): void => {
                    joinContext = $._decodeSequenceOf<JoinContextType>(
                        () => _decode_JoinContextType
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_JoinAttPair,
                _extension_additions_list_spec_for_JoinAttPair,
                _root_component_type_list_2_spec_for_JoinAttPair,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new JoinAttPair(
                /* SEQUENCE_CONSTRUCTOR_CALL */ baseAtt,
                joinAtt,
                joinContext,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_JoinAttPair(el);
}
/**
 * @summary Encodes a(n) JoinAttPair into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The JoinAttPair, encoded as an ASN.1 Element.
 */
export function _encode_JoinAttPair(
    value: JoinAttPair,
    elGetter: $.ASN1Encoder<JoinAttPair>
) {
    if (!_cached_encoder_for_JoinAttPair) {
        _cached_encoder_for_JoinAttPair = function (
            value: JoinAttPair,
            elGetter: $.ASN1Encoder<JoinAttPair>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_AttributeType(
                                value.baseAtt,
                                $.BER
                            ),
                            /* REQUIRED   */ _encode_AttributeType(
                                value.joinAtt,
                                $.BER
                            ),
                            /* IF_ABSENT  */ value.joinContext === undefined
                                ? undefined
                                : $._encodeSequenceOf<JoinContextType>(
                                      () => _encode_JoinContextType,
                                      $.BER
                                  )(value.joinContext, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_JoinAttPair(value, elGetter);
}

/**
 * @summary JoinArgument
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * JoinArgument ::= SEQUENCE {
 *   joinBaseObject  [0]  Name,
 *   domainLocalID   [1]  DomainLocalID OPTIONAL,
 *   joinSubset      [2]  ENUMERATED {
 *     baseObject   (0),
 *     oneLevel     (1),
 *     wholeSubtree (2),
 *     ... } DEFAULT baseObject,
 *   joinFilter      [3]  Filter OPTIONAL,
 *   joinAttributes  [4]  SEQUENCE SIZE (1..MAX) OF JoinAttPair OPTIONAL,
 *   joinSelection   [5]  EntryInformationSelection,
 *   ... }
 * ```
 *
 * @class
 */
export class JoinArgument {
    constructor(
        /**
         * @summary `joinBaseObject`.
         * @public
         * @readonly
         */
        readonly joinBaseObject: Name,
        /**
         * @summary `domainLocalID`.
         * @public
         * @readonly
         */
        readonly domainLocalID: OPTIONAL<DomainLocalID>,
        /**
         * @summary `joinSubset`.
         * @public
         * @readonly
         */
        readonly joinSubset: OPTIONAL<JoinArgument_joinSubset>,
        /**
         * @summary `joinFilter`.
         * @public
         * @readonly
         */
        readonly joinFilter: OPTIONAL<Filter>,
        /**
         * @summary `joinAttributes`.
         * @public
         * @readonly
         */
        readonly joinAttributes: OPTIONAL<JoinAttPair[]>,
        /**
         * @summary `joinSelection`.
         * @public
         * @readonly
         */
        readonly joinSelection: EntryInformationSelection,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a JoinArgument
     * @description
     *
     * This takes an `object` and converts it to a `JoinArgument`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `JoinArgument`.
     * @returns {JoinArgument}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof JoinArgument]: JoinArgument[_K] }>
    ): JoinArgument {
        return new JoinArgument(
            _o.joinBaseObject,
            _o.domainLocalID,
            _o.joinSubset,
            _o.joinFilter,
            _o.joinAttributes,
            _o.joinSelection,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `joinSubset`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_joinSubset() {
        return JoinArgument_joinSubset_baseObject;
    }
    /**
     * @summary The enum used as the type of the component `joinSubset`
     * @public
     * @static
     */

    public static _enum_for_joinSubset = _enum_for_JoinArgument_joinSubset;
}
/**
 * @summary The Leading Root Component Types of JoinArgument
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_JoinArgument: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "joinBaseObject",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "domainLocalID",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinSubset",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinFilter",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinAttributes",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinSelection",
        false,
        $.hasTag(_TagClass.context, 5),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of JoinArgument
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_JoinArgument: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of JoinArgument
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_JoinArgument: $.ComponentSpec[] = [];
let _cached_decoder_for_JoinArgument: $.ASN1Decoder<JoinArgument> | null = null;
let _cached_encoder_for_JoinArgument: $.ASN1Encoder<JoinArgument> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) JoinArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {JoinArgument} The decoded data structure.
 */
export function _decode_JoinArgument(el: _Element) {
    if (!_cached_decoder_for_JoinArgument) {
        _cached_decoder_for_JoinArgument = function (
            el: _Element
        ): JoinArgument {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let joinBaseObject!: Name;
            let domainLocalID: OPTIONAL<DomainLocalID>;
            let joinSubset: OPTIONAL<JoinArgument_joinSubset> =
                JoinArgument._default_value_for_joinSubset;
            let joinFilter: OPTIONAL<Filter>;
            let joinAttributes: OPTIONAL<JoinAttPair[]>;
            let joinSelection!: EntryInformationSelection;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                joinBaseObject: (_el: _Element): void => {
                    joinBaseObject = $._decode_explicit<Name>(
                        () => _decode_Name
                    )(_el);
                },
                domainLocalID: (_el: _Element): void => {
                    domainLocalID = $._decode_explicit<DomainLocalID>(
                        () => _decode_DomainLocalID
                    )(_el);
                },
                joinSubset: (_el: _Element): void => {
                    joinSubset = $._decode_explicit<JoinArgument_joinSubset>(
                        () => _decode_JoinArgument_joinSubset
                    )(_el);
                },
                joinFilter: (_el: _Element): void => {
                    joinFilter = $._decode_explicit<Filter>(
                        () => _decode_Filter
                    )(_el);
                },
                joinAttributes: (_el: _Element): void => {
                    joinAttributes = $._decode_explicit<JoinAttPair[]>(() =>
                        $._decodeSequenceOf<JoinAttPair>(
                            () => _decode_JoinAttPair
                        )
                    )(_el);
                },
                joinSelection: (_el: _Element): void => {
                    joinSelection = $._decode_explicit<
                        EntryInformationSelection
                    >(() => _decode_EntryInformationSelection)(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_JoinArgument,
                _extension_additions_list_spec_for_JoinArgument,
                _root_component_type_list_2_spec_for_JoinArgument,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new JoinArgument(
                /* SEQUENCE_CONSTRUCTOR_CALL */ joinBaseObject,
                domainLocalID,
                joinSubset,
                joinFilter,
                joinAttributes,
                joinSelection,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_JoinArgument(el);
}
/**
 * @summary Encodes a(n) JoinArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The JoinArgument, encoded as an ASN.1 Element.
 */
export function _encode_JoinArgument(
    value: JoinArgument,
    elGetter: $.ASN1Encoder<JoinArgument>
) {
    if (!_cached_encoder_for_JoinArgument) {
        _cached_encoder_for_JoinArgument = function (
            value: JoinArgument,
            elGetter: $.ASN1Encoder<JoinArgument>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.joinBaseObject, $.BER),
                            /* IF_ABSENT  */ value.domainLocalID === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_DomainLocalID,
                                      $.BER
                                  )(value.domainLocalID, $.BER),
                            /* IF_DEFAULT */ value.joinSubset === undefined ||
                            $.deepEq(
                                value.joinSubset,
                                JoinArgument._default_value_for_joinSubset
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_JoinArgument_joinSubset,
                                      $.BER
                                  )(value.joinSubset, $.BER),
                            /* IF_ABSENT  */ value.joinFilter === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => _encode_Filter,
                                      $.BER
                                  )(value.joinFilter, $.BER),
                            /* IF_ABSENT  */ value.joinAttributes === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () =>
                                          $._encodeSequenceOf<JoinAttPair>(
                                              () => _encode_JoinAttPair,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.joinAttributes, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                5,
                                () => _encode_EntryInformationSelection,
                                $.BER
                            )(value.joinSelection, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_JoinArgument(value, elGetter);
}

/**
 * @summary SearchArgumentData_joinType
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SearchArgumentData-joinType ::= ENUMERATED { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @enum {number}
 */
export enum _enum_for_SearchArgumentData_joinType {
    innerJoin = 0,
    leftOuterJoin = 1,
    fullOuterJoin = 2,
}
/**
 * @summary SearchArgumentData_joinType
 */
export type SearchArgumentData_joinType = _enum_for_SearchArgumentData_joinType;
/**
 * @summary SearchArgumentData_joinType
 * @constant
 */
export const SearchArgumentData_joinType = _enum_for_SearchArgumentData_joinType;
/**
 * @summary SearchArgumentData_joinType_innerJoin
 * @constant
 * @type {number}
 */
export const SearchArgumentData_joinType_innerJoin: SearchArgumentData_joinType =
    SearchArgumentData_joinType.innerJoin; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary SearchArgumentData_joinType_leftOuterJoin
 * @constant
 * @type {number}
 */
export const SearchArgumentData_joinType_leftOuterJoin: SearchArgumentData_joinType =
    SearchArgumentData_joinType.leftOuterJoin; /* LONG_NAMED_ENUMERATED_VALUE */
/**
 * @summary SearchArgumentData_joinType_fullOuterJoin
 * @constant
 * @type {number}
 */
export const SearchArgumentData_joinType_fullOuterJoin: SearchArgumentData_joinType =
    SearchArgumentData_joinType.fullOuterJoin; /* LONG_NAMED_ENUMERATED_VALUE */
let _cached_decoder_for_SearchArgumentData_joinType: $.ASN1Decoder<
    SearchArgumentData_joinType
> | null = null;
let _cached_encoder_for_SearchArgumentData_joinType: $.ASN1Encoder<
    SearchArgumentData_joinType
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchArgumentData_joinType
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchArgumentData_joinType} The decoded data structure.
 */
export function _decode_SearchArgumentData_joinType(el: _Element) {
    if (!_cached_decoder_for_SearchArgumentData_joinType) {
        _cached_decoder_for_SearchArgumentData_joinType = $._decodeEnumerated;
    }
    return _cached_decoder_for_SearchArgumentData_joinType(el);
}
/**
 * @summary Encodes a(n) SearchArgumentData_joinType into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchArgumentData_joinType, encoded as an ASN.1 Element.
 */
export function _encode_SearchArgumentData_joinType(
    value: SearchArgumentData_joinType,
    elGetter: $.ASN1Encoder<SearchArgumentData_joinType>
) {
    if (!_cached_encoder_for_SearchArgumentData_joinType) {
        _cached_encoder_for_SearchArgumentData_joinType = $._encodeEnumerated;
    }
    return _cached_encoder_for_SearchArgumentData_joinType(value, elGetter);
}

/**
 * @summary SearchArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SearchArgumentData ::= SET {
 *   baseObject            [0]  Name,
 *   subset                [1]  INTEGER {
 *     baseObject    (0),
 *     oneLevel      (1),
 *     wholeSubtree  (2)} DEFAULT baseObject,
 *   filter                [2]  Filter DEFAULT and:{},
 *   searchAliases         [3]  BOOLEAN DEFAULT TRUE,
 *   selection             [4]  EntryInformationSelection DEFAULT {},
 *   pagedResults          [5]  PagedResultsRequest OPTIONAL,
 *   matchedValuesOnly     [6]  BOOLEAN DEFAULT FALSE,
 *   extendedFilter        [7]  Filter OPTIONAL,
 *   checkOverspecified    [8]  BOOLEAN DEFAULT FALSE,
 *   relaxation            [9]  RelaxationPolicy OPTIONAL,
 *   extendedArea          [10] INTEGER OPTIONAL,
 *   hierarchySelections   [11] HierarchySelections DEFAULT {self},
 *   searchControlOptions  [12] SearchControlOptions DEFAULT {searchAliases},
 *   joinArguments         [13] SEQUENCE SIZE (1..MAX) OF JoinArgument OPTIONAL,
 *   joinType              [14] ENUMERATED {
 *     innerJoin      (0),
 *     leftOuterJoin  (1),
 *     fullOuterJoin  (2)} DEFAULT leftOuterJoin,
 *   ...,
 *   ...,
 *   COMPONENTS OF              CommonArguments }
 * ```
 *
 * @class
 */
export class SearchArgumentData {
    constructor(
        /**
         * @summary `baseObject`.
         * @public
         * @readonly
         */
        readonly baseObject: Name,
        /**
         * @summary `subset`.
         * @public
         * @readonly
         */
        readonly subset: OPTIONAL<SearchArgumentData_subset>,
        /**
         * @summary `filter`.
         * @public
         * @readonly
         */
        readonly filter: OPTIONAL<Filter>,
        /**
         * @summary `searchAliases`.
         * @public
         * @readonly
         */
        readonly searchAliases: OPTIONAL<BOOLEAN>,
        /**
         * @summary `selection`.
         * @public
         * @readonly
         */
        readonly selection: OPTIONAL<EntryInformationSelection>,
        /**
         * @summary `pagedResults`.
         * @public
         * @readonly
         */
        readonly pagedResults: OPTIONAL<PagedResultsRequest>,
        /**
         * @summary `matchedValuesOnly`.
         * @public
         * @readonly
         */
        readonly matchedValuesOnly: OPTIONAL<BOOLEAN>,
        /**
         * @summary `extendedFilter`.
         * @public
         * @readonly
         */
        readonly extendedFilter: OPTIONAL<Filter>,
        /**
         * @summary `checkOverspecified`.
         * @public
         * @readonly
         */
        readonly checkOverspecified: OPTIONAL<BOOLEAN>,
        /**
         * @summary `relaxation`.
         * @public
         * @readonly
         */
        readonly relaxation: OPTIONAL<RelaxationPolicy>,
        /**
         * @summary `extendedArea`.
         * @public
         * @readonly
         */
        readonly extendedArea: OPTIONAL<INTEGER>,
        /**
         * @summary `hierarchySelections`.
         * @public
         * @readonly
         */
        readonly hierarchySelections: OPTIONAL<HierarchySelections>,
        /**
         * @summary `searchControlOptions`.
         * @public
         * @readonly
         */
        readonly searchControlOptions: OPTIONAL<SearchControlOptions>,
        /**
         * @summary `joinArguments`.
         * @public
         * @readonly
         */
        readonly joinArguments: OPTIONAL<JoinArgument[]>,
        /**
         * @summary `joinType`.
         * @public
         * @readonly
         */
        readonly joinType: OPTIONAL<SearchArgumentData_joinType>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a SearchArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `SearchArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SearchArgumentData`.
     * @returns {SearchArgumentData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof SearchArgumentData]: SearchArgumentData[_K] }
        >
    ): SearchArgumentData {
        return new SearchArgumentData(
            _o.baseObject,
            _o.subset,
            _o.filter,
            _o.searchAliases,
            _o.selection,
            _o.pagedResults,
            _o.matchedValuesOnly,
            _o.extendedFilter,
            _o.checkOverspecified,
            _o.relaxation,
            _o.extendedArea,
            _o.hierarchySelections,
            _o.searchControlOptions,
            _o.joinArguments,
            _o.joinType,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `subset`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_subset() {
        return SearchArgumentData_subset_baseObject;
    }
    /**
     * @summary Getter that returns the default value for `filter`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_filter() {
        return { and: [] };
    }
    /**
     * @summary Getter that returns the default value for `searchAliases`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_searchAliases() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `selection`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_selection() {
        return EntryInformationSelection._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `matchedValuesOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_matchedValuesOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `checkOverspecified`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_checkOverspecified() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `hierarchySelections`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_hierarchySelections() {
        return (() => {
            const _ret = new Uint8ClampedArray(
                Math.max(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
            );
            _ret[HierarchySelections_self] = TRUE_BIT;
            return _ret;
        })();
    }
    /**
     * @summary Getter that returns the default value for `searchControlOptions`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_searchControlOptions() {
        return (() => {
            const _ret = new Uint8ClampedArray(
                Math.max(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
            );
            _ret[SearchControlOptions_searchAliases] = TRUE_BIT;
            return _ret;
        })();
    }
    /**
     * @summary Getter that returns the default value for `joinType`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_joinType() {
        return SearchArgumentData_joinType_leftOuterJoin;
    }
    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `joinType`
     * @public
     * @static
     */

    public static _enum_for_joinType = _enum_for_SearchArgumentData_joinType;
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of SearchArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SearchArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "baseObject",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "subset",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "filter",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "searchAliases",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "selection",
        true,
        $.hasTag(_TagClass.context, 4),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "pagedResults",
        true,
        $.hasTag(_TagClass.context, 5),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "matchedValuesOnly",
        true,
        $.hasTag(_TagClass.context, 6),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "extendedFilter",
        true,
        $.hasTag(_TagClass.context, 7),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "checkOverspecified",
        true,
        $.hasTag(_TagClass.context, 8),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "relaxation",
        true,
        $.hasTag(_TagClass.context, 9),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "extendedArea",
        true,
        $.hasTag(_TagClass.context, 10),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "hierarchySelections",
        true,
        $.hasTag(_TagClass.context, 11),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "searchControlOptions",
        true,
        $.hasTag(_TagClass.context, 12),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinArguments",
        true,
        $.hasTag(_TagClass.context, 13),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "joinType",
        true,
        $.hasTag(_TagClass.context, 14),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SearchArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SearchArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of SearchArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SearchArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_SearchArgumentData: $.ASN1Decoder<
    SearchArgumentData
> | null = null;
let _cached_encoder_for_SearchArgumentData: $.ASN1Encoder<
    SearchArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchArgumentData} The decoded data structure.
 */
export function _decode_SearchArgumentData(el: _Element) {
    if (!_cached_decoder_for_SearchArgumentData) {
        _cached_decoder_for_SearchArgumentData = function (
            el: _Element
        ): SearchArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let baseObject!: Name;
            let subset: OPTIONAL<SearchArgumentData_subset> =
                SearchArgumentData._default_value_for_subset;
            let filter: OPTIONAL<Filter> =
                SearchArgumentData._default_value_for_filter;
            let searchAliases: OPTIONAL<BOOLEAN> =
                SearchArgumentData._default_value_for_searchAliases;
            let selection: OPTIONAL<EntryInformationSelection> =
                SearchArgumentData._default_value_for_selection;
            let pagedResults: OPTIONAL<PagedResultsRequest>;
            let matchedValuesOnly: OPTIONAL<BOOLEAN> =
                SearchArgumentData._default_value_for_matchedValuesOnly;
            let extendedFilter: OPTIONAL<Filter>;
            let checkOverspecified: OPTIONAL<BOOLEAN> =
                SearchArgumentData._default_value_for_checkOverspecified;
            let relaxation: OPTIONAL<RelaxationPolicy>;
            let extendedArea: OPTIONAL<INTEGER>;
            let hierarchySelections: OPTIONAL<HierarchySelections> =
                SearchArgumentData._default_value_for_hierarchySelections;
            let searchControlOptions: OPTIONAL<SearchControlOptions> =
                SearchArgumentData._default_value_for_searchControlOptions;
            let joinArguments: OPTIONAL<JoinArgument[]>;
            let joinType: OPTIONAL<SearchArgumentData_joinType> =
                SearchArgumentData._default_value_for_joinType;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                SearchArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                SearchArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                SearchArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                SearchArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                SearchArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                baseObject: (_el: _Element): void => {
                    baseObject = $._decode_explicit<Name>(() => _decode_Name)(
                        _el
                    );
                },
                subset: (_el: _Element): void => {
                    subset = $._decode_explicit<SearchArgumentData_subset>(
                        () => _decode_SearchArgumentData_subset
                    )(_el);
                },
                filter: (_el: _Element): void => {
                    filter = $._decode_explicit<Filter>(() => _decode_Filter)(
                        _el
                    );
                },
                searchAliases: (_el: _Element): void => {
                    searchAliases = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                selection: (_el: _Element): void => {
                    selection = $._decode_explicit<EntryInformationSelection>(
                        () => _decode_EntryInformationSelection
                    )(_el);
                },
                pagedResults: (_el: _Element): void => {
                    pagedResults = $._decode_explicit<PagedResultsRequest>(
                        () => _decode_PagedResultsRequest
                    )(_el);
                },
                matchedValuesOnly: (_el: _Element): void => {
                    matchedValuesOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                extendedFilter: (_el: _Element): void => {
                    extendedFilter = $._decode_explicit<Filter>(
                        () => _decode_Filter
                    )(_el);
                },
                checkOverspecified: (_el: _Element): void => {
                    checkOverspecified = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                relaxation: (_el: _Element): void => {
                    relaxation = $._decode_explicit<RelaxationPolicy>(
                        () => _decode_RelaxationPolicy
                    )(_el);
                },
                extendedArea: (_el: _Element): void => {
                    extendedArea = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                hierarchySelections: (_el: _Element): void => {
                    hierarchySelections = $._decode_explicit<
                        HierarchySelections
                    >(() => _decode_HierarchySelections)(_el);
                },
                searchControlOptions: (_el: _Element): void => {
                    searchControlOptions = $._decode_explicit<
                        SearchControlOptions
                    >(() => _decode_SearchControlOptions)(_el);
                },
                joinArguments: (_el: _Element): void => {
                    joinArguments = $._decode_explicit<JoinArgument[]>(() =>
                        $._decodeSequenceOf<JoinArgument>(
                            () => _decode_JoinArgument
                        )
                    )(_el);
                },
                joinType: (_el: _Element): void => {
                    joinType = $._decode_explicit<SearchArgumentData_joinType>(
                        () => _decode_SearchArgumentData_joinType
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SearchArgumentData,
                _extension_additions_list_spec_for_SearchArgumentData,
                _root_component_type_list_2_spec_for_SearchArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new SearchArgumentData(
                /* SET_CONSTRUCTOR_CALL */ baseObject,
                subset,
                filter,
                searchAliases,
                selection,
                pagedResults,
                matchedValuesOnly,
                extendedFilter,
                checkOverspecified,
                relaxation,
                extendedArea,
                hierarchySelections,
                searchControlOptions,
                joinArguments,
                joinType,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_SearchArgumentData(el);
}
/**
 * @summary Encodes a(n) SearchArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_SearchArgumentData(
    value: SearchArgumentData,
    elGetter: $.ASN1Encoder<SearchArgumentData>
) {
    if (!_cached_encoder_for_SearchArgumentData) {
        _cached_encoder_for_SearchArgumentData = function (
            value: SearchArgumentData,
            elGetter: $.ASN1Encoder<SearchArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.baseObject, $.BER),
                            /* IF_DEFAULT */ value.subset === undefined ||
                            $.deepEq(
                                value.subset,
                                SearchArgumentData._default_value_for_subset
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () => _encode_SearchArgumentData_subset,
                                      $.BER
                                  )(value.subset, $.BER),
                            /* IF_DEFAULT */ value.filter === undefined ||
                            $.deepEq(
                                value.filter,
                                SearchArgumentData._default_value_for_filter
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_Filter,
                                      $.BER
                                  )(value.filter, $.BER),
                            /* IF_DEFAULT */ value.searchAliases ===
                                undefined ||
                            $.deepEq(
                                value.searchAliases,
                                SearchArgumentData._default_value_for_searchAliases
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.searchAliases, $.BER),
                            /* IF_DEFAULT */ value.selection === undefined ||
                            $.deepEq(
                                value.selection,
                                SearchArgumentData._default_value_for_selection
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      4,
                                      () => _encode_EntryInformationSelection,
                                      $.BER
                                  )(value.selection, $.BER),
                            /* IF_ABSENT  */ value.pagedResults === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      5,
                                      () => _encode_PagedResultsRequest,
                                      $.BER
                                  )(value.pagedResults, $.BER),
                            /* IF_DEFAULT */ value.matchedValuesOnly ===
                                undefined ||
                            $.deepEq(
                                value.matchedValuesOnly,
                                SearchArgumentData._default_value_for_matchedValuesOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      6,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.matchedValuesOnly, $.BER),
                            /* IF_ABSENT  */ value.extendedFilter === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      7,
                                      () => _encode_Filter,
                                      $.BER
                                  )(value.extendedFilter, $.BER),
                            /* IF_DEFAULT */ value.checkOverspecified ===
                                undefined ||
                            $.deepEq(
                                value.checkOverspecified,
                                SearchArgumentData._default_value_for_checkOverspecified
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      8,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.checkOverspecified, $.BER),
                            /* IF_ABSENT  */ value.relaxation === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      9,
                                      () => _encode_RelaxationPolicy,
                                      $.BER
                                  )(value.relaxation, $.BER),
                            /* IF_ABSENT  */ value.extendedArea === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      10,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.extendedArea, $.BER),
                            /* IF_DEFAULT */ value.hierarchySelections ===
                                undefined ||
                            $.deepEq(
                                value.hierarchySelections,
                                SearchArgumentData._default_value_for_hierarchySelections
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      11,
                                      () => _encode_HierarchySelections,
                                      $.BER
                                  )(value.hierarchySelections, $.BER),
                            /* IF_DEFAULT */ value.searchControlOptions ===
                                undefined ||
                            $.deepEq(
                                value.searchControlOptions,
                                SearchArgumentData._default_value_for_searchControlOptions
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      12,
                                      () => _encode_SearchControlOptions,
                                      $.BER
                                  )(value.searchControlOptions, $.BER),
                            /* IF_ABSENT  */ value.joinArguments === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      13,
                                      () =>
                                          $._encodeSequenceOf<JoinArgument>(
                                              () => _encode_JoinArgument,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.joinArguments, $.BER),
                            /* IF_DEFAULT */ value.joinType === undefined ||
                            $.deepEq(
                                value.joinType,
                                SearchArgumentData._default_value_for_joinType
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      14,
                                      () => _encode_SearchArgumentData_joinType,
                                      $.BER
                                  )(value.joinType, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                SearchArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                SearchArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                SearchArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                SearchArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                SearchArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SearchArgumentData(value, elGetter);
}

export type SearchArgument<> = OPTIONALLY_PROTECTED<SearchArgumentData>; // DefinedType
let _cached_decoder_for_SearchArgument: $.ASN1Decoder<
    SearchArgument
> | null = null;
let _cached_encoder_for_SearchArgument: $.ASN1Encoder<
    SearchArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchArgument} The decoded data structure.
 */
export function _decode_SearchArgument(el: _Element) {
    if (!_cached_decoder_for_SearchArgument) {
        _cached_decoder_for_SearchArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            SearchArgumentData
        >(_decode_SearchArgumentData);
    }
    return _cached_decoder_for_SearchArgument(el);
}
/**
 * @summary Encodes a(n) SearchArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchArgument, encoded as an ASN.1 Element.
 */
export function _encode_SearchArgument(
    value: SearchArgument,
    elGetter: $.ASN1Encoder<SearchArgument>
) {
    if (!_cached_encoder_for_SearchArgument) {
        _cached_encoder_for_SearchArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            SearchArgumentData
        >(_encode_SearchArgumentData);
    }
    return _cached_encoder_for_SearchArgument(value, elGetter);
}

/**
 * @summary SearchResultData_searchInfo
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SearchResultData-searchInfo ::= SEQUENCE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 *
 * @class
 */
export class SearchResultData_searchInfo {
    constructor(
        /**
         * @summary `name`.
         * @public
         * @readonly
         */
        readonly name: OPTIONAL<Name>,
        /**
         * @summary `entries`.
         * @public
         * @readonly
         */
        readonly entries: EntryInformation[],
        /**
         * @summary `partialOutcomeQualifier`.
         * @public
         * @readonly
         */
        readonly partialOutcomeQualifier: OPTIONAL<PartialOutcomeQualifier>,
        /**
         * @summary `altMatching`.
         * @public
         * @readonly
         */
        readonly altMatching: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a SearchResultData_searchInfo
     * @description
     *
     * This takes an `object` and converts it to a `SearchResultData_searchInfo`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `SearchResultData_searchInfo`.
     * @returns {SearchResultData_searchInfo}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof SearchResultData_searchInfo]: SearchResultData_searchInfo[_K];
            }
        >
    ): SearchResultData_searchInfo {
        return new SearchResultData_searchInfo(
            _o.name,
            _o.entries,
            _o.partialOutcomeQualifier,
            _o.altMatching,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `altMatching`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_altMatching() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of SearchResultData_searchInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_SearchResultData_searchInfo: $.ComponentSpec[] = [
    new $.ComponentSpec("name", true, $.hasAnyTag, undefined, undefined),
    new $.ComponentSpec(
        "entries",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "partialOutcomeQualifier",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "altMatching",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of SearchResultData_searchInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_SearchResultData_searchInfo: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of SearchResultData_searchInfo
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_SearchResultData_searchInfo: $.ComponentSpec[] = [];
let _cached_decoder_for_SearchResultData_searchInfo: $.ASN1Decoder<
    SearchResultData_searchInfo
> | null = null;
let _cached_encoder_for_SearchResultData_searchInfo: $.ASN1Encoder<
    SearchResultData_searchInfo
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchResultData_searchInfo
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchResultData_searchInfo} The decoded data structure.
 */
export function _decode_SearchResultData_searchInfo(el: _Element) {
    if (!_cached_decoder_for_SearchResultData_searchInfo) {
        _cached_decoder_for_SearchResultData_searchInfo = function (
            el: _Element
        ): SearchResultData_searchInfo {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let name: OPTIONAL<Name>;
            let entries!: EntryInformation[];
            let partialOutcomeQualifier: OPTIONAL<PartialOutcomeQualifier>;
            let altMatching: OPTIONAL<BOOLEAN> =
                SearchResultData_searchInfo._default_value_for_altMatching;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                SearchResultData_searchInfo._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                name: (_el: _Element): void => {
                    name = _decode_Name(_el);
                },
                entries: (_el: _Element): void => {
                    entries = $._decode_explicit<EntryInformation[]>(() =>
                        $._decodeSetOf<EntryInformation>(
                            () => _decode_EntryInformation
                        )
                    )(_el);
                },
                partialOutcomeQualifier: (_el: _Element): void => {
                    partialOutcomeQualifier = $._decode_explicit<
                        PartialOutcomeQualifier
                    >(() => _decode_PartialOutcomeQualifier)(_el);
                },
                altMatching: (_el: _Element): void => {
                    altMatching = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_SearchResultData_searchInfo,
                _extension_additions_list_spec_for_SearchResultData_searchInfo,
                _root_component_type_list_2_spec_for_SearchResultData_searchInfo,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new SearchResultData_searchInfo(
                /* SET_CONSTRUCTOR_CALL */ name,
                entries,
                partialOutcomeQualifier,
                altMatching,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_SearchResultData_searchInfo(el);
}
/**
 * @summary Encodes a(n) SearchResultData_searchInfo into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchResultData_searchInfo, encoded as an ASN.1 Element.
 */
export function _encode_SearchResultData_searchInfo(
    value: SearchResultData_searchInfo,
    elGetter: $.ASN1Encoder<SearchResultData_searchInfo>
) {
    if (!_cached_encoder_for_SearchResultData_searchInfo) {
        _cached_encoder_for_SearchResultData_searchInfo = function (
            value: SearchResultData_searchInfo,
            elGetter: $.ASN1Encoder<SearchResultData_searchInfo>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.name === undefined
                                ? undefined
                                : _encode_Name(value.name, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () =>
                                    $._encodeSetOf<EntryInformation>(
                                        () => _encode_EntryInformation,
                                        $.BER
                                    ),
                                $.BER
                            )(value.entries, $.BER),
                            /* IF_ABSENT  */ value.partialOutcomeQualifier ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_PartialOutcomeQualifier,
                                      $.BER
                                  )(value.partialOutcomeQualifier, $.BER),
                            /* IF_DEFAULT */ value.altMatching === undefined ||
                            $.deepEq(
                                value.altMatching,
                                SearchResultData_searchInfo._default_value_for_altMatching
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.altMatching, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                SearchResultData_searchInfo._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_SearchResultData_searchInfo(value, elGetter);
}

/**
 * @summary SearchResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * SearchResultData  ::=  CHOICE {
 *   searchInfo                    SET {
 *     name                          Name OPTIONAL,
 *     entries                  [0]  SET OF EntryInformation,
 *     partialOutcomeQualifier  [2]  PartialOutcomeQualifier OPTIONAL,
 *     altMatching              [3]  BOOLEAN DEFAULT FALSE,
 *     ...,
 *     ...,
 *     COMPONENTS OF                 CommonResults
 *     },
 *   uncorrelatedSearchInfo   [0]  SET OF SearchResult,
 *   ... }
 * ```
 */
export type SearchResultData =
    | { searchInfo: SearchResultData_searchInfo } /* CHOICE_ALT_ROOT */
    | { uncorrelatedSearchInfo: SearchResult[] } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_SearchResultData: $.ASN1Decoder<
    SearchResultData
> | null = null;
let _cached_encoder_for_SearchResultData: $.ASN1Encoder<
    SearchResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchResultData} The decoded data structure.
 */
export function _decode_SearchResultData(el: _Element) {
    if (!_cached_decoder_for_SearchResultData) {
        _cached_decoder_for_SearchResultData = $._decode_extensible_choice<
            SearchResultData
        >({
            "UNIVERSAL 17": ["searchInfo", _decode_SearchResultData_searchInfo],
            "CONTEXT 0": [
                "uncorrelatedSearchInfo",
                $._decode_explicit<SearchResult[]>(() =>
                    $._decodeSetOf<SearchResult>(() => _decode_SearchResult)
                ),
            ],
        });
    }
    return _cached_decoder_for_SearchResultData(el);
}
/**
 * @summary Encodes a(n) SearchResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchResultData, encoded as an ASN.1 Element.
 */
export function _encode_SearchResultData(
    value: SearchResultData,
    elGetter: $.ASN1Encoder<SearchResultData>
) {
    if (!_cached_encoder_for_SearchResultData) {
        _cached_encoder_for_SearchResultData = $._encode_choice<
            SearchResultData
        >(
            {
                searchInfo: _encode_SearchResultData_searchInfo,
                uncorrelatedSearchInfo: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () =>
                        $._encodeSetOf<SearchResult>(
                            () => _encode_SearchResult,
                            $.BER
                        ),
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_SearchResultData(value, elGetter);
}

export type SearchResult<> = OPTIONALLY_PROTECTED<SearchResultData>; // DefinedType
let _cached_decoder_for_SearchResult: $.ASN1Decoder<SearchResult> | null = null;
let _cached_encoder_for_SearchResult: $.ASN1Encoder<SearchResult> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) SearchResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {SearchResult} The decoded data structure.
 */
export function _decode_SearchResult(el: _Element) {
    if (!_cached_decoder_for_SearchResult) {
        _cached_decoder_for_SearchResult = _get_decoder_for_OPTIONALLY_PROTECTED<
            SearchResultData
        >(_decode_SearchResultData);
    }
    return _cached_decoder_for_SearchResult(el);
}
/**
 * @summary Encodes a(n) SearchResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The SearchResult, encoded as an ASN.1 Element.
 */
export function _encode_SearchResult(
    value: SearchResult,
    elGetter: $.ASN1Encoder<SearchResult>
) {
    if (!_cached_encoder_for_SearchResult) {
        _cached_encoder_for_SearchResult = _get_encoder_for_OPTIONALLY_PROTECTED<
            SearchResultData
        >(_encode_SearchResultData);
    }
    return _cached_encoder_for_SearchResult(value, elGetter);
}

/**
 * @summary search
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * search OPERATION ::= {
 *   ARGUMENT  SearchArgument
 *   RESULT    SearchResult
 *   ERRORS    {attributeError |
 *              nameError |
 *              serviceError |
 *              referral |
 *              abandoned |
 *              securityError}
 *   CODE      id-opcode-search }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const search: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_SearchArgument,
        "&ResultType": _decode_SearchResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_SearchArgument,
        "&ResultType": _encode_SearchResult,
    },
    "&Errors": [
        attributeError,
        nameError,
        serviceError,
        referral,
        abandoned,
        securityError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_search /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary AddEntryArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AddEntryArgumentData ::= SET {
 *   object        [0]  Name,
 *   entry         [1]  SET OF Attribute{{SupportedAttributes}},
 *   targetSystem  [2]  AccessPoint OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF      CommonArguments }
 * ```
 *
 * @class
 */
export class AddEntryArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary `entry`.
         * @public
         * @readonly
         */
        readonly entry: Attribute[],
        /**
         * @summary `targetSystem`.
         * @public
         * @readonly
         */
        readonly targetSystem: OPTIONAL<AccessPoint>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AddEntryArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `AddEntryArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AddEntryArgumentData`.
     * @returns {AddEntryArgumentData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof AddEntryArgumentData]: AddEntryArgumentData[_K] }
        >
    ): AddEntryArgumentData {
        return new AddEntryArgumentData(
            _o.object,
            _o.entry,
            _o.targetSystem,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of AddEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AddEntryArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entry",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "targetSystem",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AddEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AddEntryArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AddEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AddEntryArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_AddEntryArgumentData: $.ASN1Decoder<
    AddEntryArgumentData
> | null = null;
let _cached_encoder_for_AddEntryArgumentData: $.ASN1Encoder<
    AddEntryArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AddEntryArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AddEntryArgumentData} The decoded data structure.
 */
export function _decode_AddEntryArgumentData(el: _Element) {
    if (!_cached_decoder_for_AddEntryArgumentData) {
        _cached_decoder_for_AddEntryArgumentData = function (
            el: _Element
        ): AddEntryArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let entry!: Attribute[];
            let targetSystem: OPTIONAL<AccessPoint>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                AddEntryArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                AddEntryArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                AddEntryArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                AddEntryArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                AddEntryArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                entry: (_el: _Element): void => {
                    entry = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSetOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
                targetSystem: (_el: _Element): void => {
                    targetSystem = $._decode_explicit<AccessPoint>(
                        () => _decode_AccessPoint
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AddEntryArgumentData,
                _extension_additions_list_spec_for_AddEntryArgumentData,
                _root_component_type_list_2_spec_for_AddEntryArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AddEntryArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                entry,
                targetSystem,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_AddEntryArgumentData(el);
}
/**
 * @summary Encodes a(n) AddEntryArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AddEntryArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_AddEntryArgumentData(
    value: AddEntryArgumentData,
    elGetter: $.ASN1Encoder<AddEntryArgumentData>
) {
    if (!_cached_encoder_for_AddEntryArgumentData) {
        _cached_encoder_for_AddEntryArgumentData = function (
            value: AddEntryArgumentData,
            elGetter: $.ASN1Encoder<AddEntryArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () =>
                                    $._encodeSetOf<Attribute>(
                                        () => _encode_Attribute,
                                        $.BER
                                    ),
                                $.BER
                            )(value.entry, $.BER),
                            /* IF_ABSENT  */ value.targetSystem === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_AccessPoint,
                                      $.BER
                                  )(value.targetSystem, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                AddEntryArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                AddEntryArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                AddEntryArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                AddEntryArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                AddEntryArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AddEntryArgumentData(value, elGetter);
}

export type AddEntryArgument<> = OPTIONALLY_PROTECTED<AddEntryArgumentData>; // DefinedType
let _cached_decoder_for_AddEntryArgument: $.ASN1Decoder<
    AddEntryArgument
> | null = null;
let _cached_encoder_for_AddEntryArgument: $.ASN1Encoder<
    AddEntryArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AddEntryArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AddEntryArgument} The decoded data structure.
 */
export function _decode_AddEntryArgument(el: _Element) {
    if (!_cached_decoder_for_AddEntryArgument) {
        _cached_decoder_for_AddEntryArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            AddEntryArgumentData
        >(_decode_AddEntryArgumentData);
    }
    return _cached_decoder_for_AddEntryArgument(el);
}
/**
 * @summary Encodes a(n) AddEntryArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AddEntryArgument, encoded as an ASN.1 Element.
 */
export function _encode_AddEntryArgument(
    value: AddEntryArgument,
    elGetter: $.ASN1Encoder<AddEntryArgument>
) {
    if (!_cached_encoder_for_AddEntryArgument) {
        _cached_encoder_for_AddEntryArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            AddEntryArgumentData
        >(_encode_AddEntryArgumentData);
    }
    return _cached_encoder_for_AddEntryArgument(value, elGetter);
}

/**
 * @summary AddEntryResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AddEntryResultData ::= SEQUENCE {
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class AddEntryResultData {
    constructor(
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AddEntryResultData
     * @description
     *
     * This takes an `object` and converts it to a `AddEntryResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AddEntryResultData`.
     * @returns {AddEntryResultData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof AddEntryResultData]: AddEntryResultData[_K] }
        >
    ): AddEntryResultData {
        return new AddEntryResultData(
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of AddEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AddEntryResultData: $.ComponentSpec[] = [];
/**
 * @summary The Trailing Root Component Types of AddEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AddEntryResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AddEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AddEntryResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_AddEntryResultData: $.ASN1Decoder<
    AddEntryResultData
> | null = null;
let _cached_encoder_for_AddEntryResultData: $.ASN1Encoder<
    AddEntryResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AddEntryResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AddEntryResultData} The decoded data structure.
 */
export function _decode_AddEntryResultData(el: _Element) {
    if (!_cached_decoder_for_AddEntryResultData) {
        _cached_decoder_for_AddEntryResultData = function (
            el: _Element
        ): AddEntryResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                AddEntryResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AddEntryResultData,
                _extension_additions_list_spec_for_AddEntryResultData,
                _root_component_type_list_2_spec_for_AddEntryResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AddEntryResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_AddEntryResultData(el);
}
/**
 * @summary Encodes a(n) AddEntryResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AddEntryResultData, encoded as an ASN.1 Element.
 */
export function _encode_AddEntryResultData(
    value: AddEntryResultData,
    elGetter: $.ASN1Encoder<AddEntryResultData>
) {
    if (!_cached_encoder_for_AddEntryResultData) {
        _cached_encoder_for_AddEntryResultData = function (
            value: AddEntryResultData,
            elGetter: $.ASN1Encoder<AddEntryResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                AddEntryResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AddEntryResultData(value, elGetter);
}

/**
 * @summary AddEntryResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AddEntryResult  ::=  CHOICE {
 *   null          NULL,
 *   information   OPTIONALLY-PROTECTED-SEQ { AddEntryResultData },
 *   ... }
 * ```
 */
export type AddEntryResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<AddEntryResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_AddEntryResult: $.ASN1Decoder<
    AddEntryResult
> | null = null;
let _cached_encoder_for_AddEntryResult: $.ASN1Encoder<
    AddEntryResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AddEntryResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AddEntryResult} The decoded data structure.
 */
export function _decode_AddEntryResult(el: _Element) {
    if (!_cached_decoder_for_AddEntryResult) {
        _cached_decoder_for_AddEntryResult = $._decode_extensible_choice<
            AddEntryResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<AddEntryResultData>(
                    _decode_AddEntryResultData
                ),
            ],
        });
    }
    return _cached_decoder_for_AddEntryResult(el);
}
/**
 * @summary Encodes a(n) AddEntryResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AddEntryResult, encoded as an ASN.1 Element.
 */
export function _encode_AddEntryResult(
    value: AddEntryResult,
    elGetter: $.ASN1Encoder<AddEntryResult>
) {
    if (!_cached_encoder_for_AddEntryResult) {
        _cached_encoder_for_AddEntryResult = $._encode_choice<AddEntryResult>(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    AddEntryResultData
                >(_encode_AddEntryResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_AddEntryResult(value, elGetter);
}

/**
 * @summary UpdateProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * UpdateProblem  ::=  INTEGER {
 *   namingViolation                   (1),
 *   objectClassViolation              (2),
 *   notAllowedOnNonLeaf               (3),
 *   notAllowedOnRDN                   (4),
 *   entryAlreadyExists                (5),
 *   affectsMultipleDSAs               (6),
 *   objectClassModificationProhibited (7),
 *   noSuchSuperior                    (8),
 *   notAncestor                       (9),
 *   parentNotAncestor                 (10),
 *   hierarchyRuleViolation            (11),
 *   familyRuleViolation               (12),
 *   insufficientPasswordQuality       (13),
 *   passwordInHistory                 (14),
 *   noPasswordSlot                    (15) }
 * ```
 */
export type UpdateProblem = INTEGER;
/**
 * @summary UpdateProblem_namingViolation
 * @constant
 * @type {number}
 */
export const UpdateProblem_namingViolation: UpdateProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_objectClassViolation
 * @constant
 * @type {number}
 */
export const UpdateProblem_objectClassViolation: UpdateProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_notAllowedOnNonLeaf
 * @constant
 * @type {number}
 */
export const UpdateProblem_notAllowedOnNonLeaf: UpdateProblem = 3; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_notAllowedOnRDN
 * @constant
 * @type {number}
 */
export const UpdateProblem_notAllowedOnRDN: UpdateProblem = 4; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_entryAlreadyExists
 * @constant
 * @type {number}
 */
export const UpdateProblem_entryAlreadyExists: UpdateProblem = 5; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_affectsMultipleDSAs
 * @constant
 * @type {number}
 */
export const UpdateProblem_affectsMultipleDSAs: UpdateProblem = 6; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_objectClassModificationProhibited
 * @constant
 * @type {number}
 */
export const UpdateProblem_objectClassModificationProhibited: UpdateProblem = 7; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_noSuchSuperior
 * @constant
 * @type {number}
 */
export const UpdateProblem_noSuchSuperior: UpdateProblem = 8; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_notAncestor
 * @constant
 * @type {number}
 */
export const UpdateProblem_notAncestor: UpdateProblem = 9; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_parentNotAncestor
 * @constant
 * @type {number}
 */
export const UpdateProblem_parentNotAncestor: UpdateProblem = 10; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_hierarchyRuleViolation
 * @constant
 * @type {number}
 */
export const UpdateProblem_hierarchyRuleViolation: UpdateProblem = 11; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_familyRuleViolation
 * @constant
 * @type {number}
 */
export const UpdateProblem_familyRuleViolation: UpdateProblem = 12; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_insufficientPasswordQuality
 * @constant
 * @type {number}
 */
export const UpdateProblem_insufficientPasswordQuality: UpdateProblem = 13; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_passwordInHistory
 * @constant
 * @type {number}
 */
export const UpdateProblem_passwordInHistory: UpdateProblem = 14; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary UpdateProblem_noPasswordSlot
 * @constant
 * @type {number}
 */
export const UpdateProblem_noPasswordSlot: UpdateProblem = 15; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_UpdateProblem: $.ASN1Decoder<
    UpdateProblem
> | null = null;
let _cached_encoder_for_UpdateProblem: $.ASN1Encoder<
    UpdateProblem
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) UpdateProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {UpdateProblem} The decoded data structure.
 */
export function _decode_UpdateProblem(el: _Element) {
    if (!_cached_decoder_for_UpdateProblem) {
        _cached_decoder_for_UpdateProblem = $._decodeInteger;
    }
    return _cached_decoder_for_UpdateProblem(el);
}
/**
 * @summary Encodes a(n) UpdateProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The UpdateProblem, encoded as an ASN.1 Element.
 */
export function _encode_UpdateProblem(
    value: UpdateProblem,
    elGetter: $.ASN1Encoder<UpdateProblem>
) {
    if (!_cached_encoder_for_UpdateProblem) {
        _cached_encoder_for_UpdateProblem = $._encodeInteger;
    }
    return _cached_encoder_for_UpdateProblem(value, elGetter);
}

/**
 * @summary UpdateErrorData_attributeInfo_Item
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * UpdateErrorData-attributeInfo-Item ::= CHOICE { -- REMOVED_FROM_UNNESTING -- }
 * ```
 */
export type UpdateErrorData_attributeInfo_Item =
    | { attributeType: AttributeType } /* CHOICE_ALT_ROOT */
    | { attribute: Attribute } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_UpdateErrorData_attributeInfo_Item: $.ASN1Decoder<
    UpdateErrorData_attributeInfo_Item
> | null = null;
let _cached_encoder_for_UpdateErrorData_attributeInfo_Item: $.ASN1Encoder<
    UpdateErrorData_attributeInfo_Item
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) UpdateErrorData_attributeInfo_Item
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {UpdateErrorData_attributeInfo_Item} The decoded data structure.
 */
export function _decode_UpdateErrorData_attributeInfo_Item(el: _Element) {
    if (!_cached_decoder_for_UpdateErrorData_attributeInfo_Item) {
        _cached_decoder_for_UpdateErrorData_attributeInfo_Item = $._decode_extensible_choice<
            UpdateErrorData_attributeInfo_Item
        >({
            "UNIVERSAL 6": ["attributeType", _decode_AttributeType],
            "UNIVERSAL 16": ["attribute", _decode_Attribute],
        });
    }
    return _cached_decoder_for_UpdateErrorData_attributeInfo_Item(el);
}
/**
 * @summary Encodes a(n) UpdateErrorData_attributeInfo_Item into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The UpdateErrorData_attributeInfo_Item, encoded as an ASN.1 Element.
 */
export function _encode_UpdateErrorData_attributeInfo_Item(
    value: UpdateErrorData_attributeInfo_Item,
    elGetter: $.ASN1Encoder<UpdateErrorData_attributeInfo_Item>
) {
    if (!_cached_encoder_for_UpdateErrorData_attributeInfo_Item) {
        _cached_encoder_for_UpdateErrorData_attributeInfo_Item = $._encode_choice<
            UpdateErrorData_attributeInfo_Item
        >(
            {
                attributeType: _encode_AttributeType,
                attribute: _encode_Attribute,
            },
            $.BER
        );
    }
    return _cached_encoder_for_UpdateErrorData_attributeInfo_Item(
        value,
        elGetter
    );
}

/**
 * @summary UpdateErrorData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * UpdateErrorData ::= SET {
 *   problem        [0]  UpdateProblem,
 *   attributeInfo  [1]  SET SIZE (1..MAX) OF CHOICE {
 *     attributeType       AttributeType,
 *     attribute           Attribute{{SupportedAttributes}},
 *     ... } OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF       CommonResults }
 * ```
 *
 * @class
 */
export class UpdateErrorData {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: UpdateProblem,
        /**
         * @summary `attributeInfo`.
         * @public
         * @readonly
         */
        readonly attributeInfo: OPTIONAL<UpdateErrorData_attributeInfo_Item[]>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a UpdateErrorData
     * @description
     *
     * This takes an `object` and converts it to a `UpdateErrorData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `UpdateErrorData`.
     * @returns {UpdateErrorData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof UpdateErrorData]: UpdateErrorData[_K] }>
    ): UpdateErrorData {
        return new UpdateErrorData(
            _o.problem,
            _o.attributeInfo,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of UpdateErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_UpdateErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "attributeInfo",
        true,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of UpdateErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_UpdateErrorData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of UpdateErrorData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_UpdateErrorData: $.ComponentSpec[] = [];
let _cached_decoder_for_UpdateErrorData: $.ASN1Decoder<
    UpdateErrorData
> | null = null;
let _cached_encoder_for_UpdateErrorData: $.ASN1Encoder<
    UpdateErrorData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) UpdateErrorData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {UpdateErrorData} The decoded data structure.
 */
export function _decode_UpdateErrorData(el: _Element) {
    if (!_cached_decoder_for_UpdateErrorData) {
        _cached_decoder_for_UpdateErrorData = function (
            el: _Element
        ): UpdateErrorData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let problem!: UpdateProblem;
            let attributeInfo: OPTIONAL<UpdateErrorData_attributeInfo_Item[]>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                UpdateErrorData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = $._decode_explicit<UpdateProblem>(
                        () => _decode_UpdateProblem
                    )(_el);
                },
                attributeInfo: (_el: _Element): void => {
                    attributeInfo = $._decode_explicit<
                        UpdateErrorData_attributeInfo_Item[]
                    >(() =>
                        $._decodeSetOf<UpdateErrorData_attributeInfo_Item>(
                            () => _decode_UpdateErrorData_attributeInfo_Item
                        )
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_UpdateErrorData,
                _extension_additions_list_spec_for_UpdateErrorData,
                _root_component_type_list_2_spec_for_UpdateErrorData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new UpdateErrorData(
                /* SET_CONSTRUCTOR_CALL */ problem,
                attributeInfo,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_UpdateErrorData(el);
}
/**
 * @summary Encodes a(n) UpdateErrorData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The UpdateErrorData, encoded as an ASN.1 Element.
 */
export function _encode_UpdateErrorData(
    value: UpdateErrorData,
    elGetter: $.ASN1Encoder<UpdateErrorData>
) {
    if (!_cached_encoder_for_UpdateErrorData) {
        _cached_encoder_for_UpdateErrorData = function (
            value: UpdateErrorData,
            elGetter: $.ASN1Encoder<UpdateErrorData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_UpdateProblem,
                                $.BER
                            )(value.problem, $.BER),
                            /* IF_ABSENT  */ value.attributeInfo === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      1,
                                      () =>
                                          $._encodeSetOf<
                                              UpdateErrorData_attributeInfo_Item
                                          >(
                                              () =>
                                                  _encode_UpdateErrorData_attributeInfo_Item,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.attributeInfo, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                UpdateErrorData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_UpdateErrorData(value, elGetter);
}

/**
 * @summary updateError
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * updateError ERROR ::= {
 *   PARAMETER   OPTIONALLY-PROTECTED { UpdateErrorData }
 *   CODE        id-errcode-updateError }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const updateError: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<
            UpdateErrorData
        >(_decode_UpdateErrorData),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<
            UpdateErrorData
        >(_encode_UpdateErrorData),
    },
    "&errorCode": id_errcode_updateError /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary addEntry
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * addEntry OPERATION ::= {
 *   ARGUMENT  AddEntryArgument
 *   RESULT    AddEntryResult
 *   ERRORS    {attributeError |
 *              nameError |
 *              serviceError |
 *              referral |
 *              securityError |
 *              updateError}
 *   CODE      id-opcode-addEntry }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const addEntry: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_AddEntryArgument,
        "&ResultType": _decode_AddEntryResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_AddEntryArgument,
        "&ResultType": _encode_AddEntryResult,
    },
    "&Errors": [
        attributeError,
        nameError,
        serviceError,
        referral,
        securityError,
        updateError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_addEntry /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary RemoveEntryArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * RemoveEntryArgumentData ::= SET {
 *   object     [0]  Name,
 *   ...,
 *   ...,
 *   COMPONENTS OF   CommonArguments
 *   }
 * ```
 *
 * @class
 */
export class RemoveEntryArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a RemoveEntryArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `RemoveEntryArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `RemoveEntryArgumentData`.
     * @returns {RemoveEntryArgumentData}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof RemoveEntryArgumentData]: RemoveEntryArgumentData[_K];
            }
        >
    ): RemoveEntryArgumentData {
        return new RemoveEntryArgumentData(
            _o.object,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of RemoveEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_RemoveEntryArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of RemoveEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_RemoveEntryArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of RemoveEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_RemoveEntryArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_RemoveEntryArgumentData: $.ASN1Decoder<
    RemoveEntryArgumentData
> | null = null;
let _cached_encoder_for_RemoveEntryArgumentData: $.ASN1Encoder<
    RemoveEntryArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) RemoveEntryArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {RemoveEntryArgumentData} The decoded data structure.
 */
export function _decode_RemoveEntryArgumentData(el: _Element) {
    if (!_cached_decoder_for_RemoveEntryArgumentData) {
        _cached_decoder_for_RemoveEntryArgumentData = function (
            el: _Element
        ): RemoveEntryArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                RemoveEntryArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                RemoveEntryArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                RemoveEntryArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                RemoveEntryArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                RemoveEntryArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_RemoveEntryArgumentData,
                _extension_additions_list_spec_for_RemoveEntryArgumentData,
                _root_component_type_list_2_spec_for_RemoveEntryArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new RemoveEntryArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_RemoveEntryArgumentData(el);
}
/**
 * @summary Encodes a(n) RemoveEntryArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The RemoveEntryArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_RemoveEntryArgumentData(
    value: RemoveEntryArgumentData,
    elGetter: $.ASN1Encoder<RemoveEntryArgumentData>
) {
    if (!_cached_encoder_for_RemoveEntryArgumentData) {
        _cached_encoder_for_RemoveEntryArgumentData = function (
            value: RemoveEntryArgumentData,
            elGetter: $.ASN1Encoder<RemoveEntryArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                RemoveEntryArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                RemoveEntryArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                RemoveEntryArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                RemoveEntryArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                RemoveEntryArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_RemoveEntryArgumentData(value, elGetter);
}

export type RemoveEntryArgument<> = OPTIONALLY_PROTECTED<
    RemoveEntryArgumentData
>; // DefinedType
let _cached_decoder_for_RemoveEntryArgument: $.ASN1Decoder<
    RemoveEntryArgument
> | null = null;
let _cached_encoder_for_RemoveEntryArgument: $.ASN1Encoder<
    RemoveEntryArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) RemoveEntryArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {RemoveEntryArgument} The decoded data structure.
 */
export function _decode_RemoveEntryArgument(el: _Element) {
    if (!_cached_decoder_for_RemoveEntryArgument) {
        _cached_decoder_for_RemoveEntryArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            RemoveEntryArgumentData
        >(_decode_RemoveEntryArgumentData);
    }
    return _cached_decoder_for_RemoveEntryArgument(el);
}
/**
 * @summary Encodes a(n) RemoveEntryArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The RemoveEntryArgument, encoded as an ASN.1 Element.
 */
export function _encode_RemoveEntryArgument(
    value: RemoveEntryArgument,
    elGetter: $.ASN1Encoder<RemoveEntryArgument>
) {
    if (!_cached_encoder_for_RemoveEntryArgument) {
        _cached_encoder_for_RemoveEntryArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            RemoveEntryArgumentData
        >(_encode_RemoveEntryArgumentData);
    }
    return _cached_encoder_for_RemoveEntryArgument(value, elGetter);
}

/**
 * @summary RemoveEntryResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * RemoveEntryResultData ::= SEQUENCE {
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class RemoveEntryResultData {
    constructor(
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a RemoveEntryResultData
     * @description
     *
     * This takes an `object` and converts it to a `RemoveEntryResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `RemoveEntryResultData`.
     * @returns {RemoveEntryResultData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof RemoveEntryResultData]: RemoveEntryResultData[_K] }
        >
    ): RemoveEntryResultData {
        return new RemoveEntryResultData(
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of RemoveEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_RemoveEntryResultData: $.ComponentSpec[] = [];
/**
 * @summary The Trailing Root Component Types of RemoveEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_RemoveEntryResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of RemoveEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_RemoveEntryResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_RemoveEntryResultData: $.ASN1Decoder<
    RemoveEntryResultData
> | null = null;
let _cached_encoder_for_RemoveEntryResultData: $.ASN1Encoder<
    RemoveEntryResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) RemoveEntryResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {RemoveEntryResultData} The decoded data structure.
 */
export function _decode_RemoveEntryResultData(el: _Element) {
    if (!_cached_decoder_for_RemoveEntryResultData) {
        _cached_decoder_for_RemoveEntryResultData = function (
            el: _Element
        ): RemoveEntryResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                RemoveEntryResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_RemoveEntryResultData,
                _extension_additions_list_spec_for_RemoveEntryResultData,
                _root_component_type_list_2_spec_for_RemoveEntryResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new RemoveEntryResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_RemoveEntryResultData(el);
}
/**
 * @summary Encodes a(n) RemoveEntryResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The RemoveEntryResultData, encoded as an ASN.1 Element.
 */
export function _encode_RemoveEntryResultData(
    value: RemoveEntryResultData,
    elGetter: $.ASN1Encoder<RemoveEntryResultData>
) {
    if (!_cached_encoder_for_RemoveEntryResultData) {
        _cached_encoder_for_RemoveEntryResultData = function (
            value: RemoveEntryResultData,
            elGetter: $.ASN1Encoder<RemoveEntryResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                RemoveEntryResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_RemoveEntryResultData(value, elGetter);
}

/**
 * @summary RemoveEntryResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * RemoveEntryResult  ::=  CHOICE {
 *   null          NULL,
 *   information   OPTIONALLY-PROTECTED-SEQ { RemoveEntryResultData },
 *   ... }
 * ```
 */
export type RemoveEntryResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<RemoveEntryResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_RemoveEntryResult: $.ASN1Decoder<
    RemoveEntryResult
> | null = null;
let _cached_encoder_for_RemoveEntryResult: $.ASN1Encoder<
    RemoveEntryResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) RemoveEntryResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {RemoveEntryResult} The decoded data structure.
 */
export function _decode_RemoveEntryResult(el: _Element) {
    if (!_cached_decoder_for_RemoveEntryResult) {
        _cached_decoder_for_RemoveEntryResult = $._decode_extensible_choice<
            RemoveEntryResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
                    RemoveEntryResultData
                >(_decode_RemoveEntryResultData),
            ],
        });
    }
    return _cached_decoder_for_RemoveEntryResult(el);
}
/**
 * @summary Encodes a(n) RemoveEntryResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The RemoveEntryResult, encoded as an ASN.1 Element.
 */
export function _encode_RemoveEntryResult(
    value: RemoveEntryResult,
    elGetter: $.ASN1Encoder<RemoveEntryResult>
) {
    if (!_cached_encoder_for_RemoveEntryResult) {
        _cached_encoder_for_RemoveEntryResult = $._encode_choice<
            RemoveEntryResult
        >(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    RemoveEntryResultData
                >(_encode_RemoveEntryResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_RemoveEntryResult(value, elGetter);
}

/**
 * @summary removeEntry
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * removeEntry OPERATION ::= {
 *   ARGUMENT  RemoveEntryArgument
 *   RESULT    RemoveEntryResult
 *   ERRORS    {nameError |
 *              serviceError |
 *              referral |
 *              securityError |
 *              updateError}
 *   CODE      id-opcode-removeEntry }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const removeEntry: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_RemoveEntryArgument,
        "&ResultType": _decode_RemoveEntryResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_RemoveEntryArgument,
        "&ResultType": _encode_RemoveEntryResult,
    },
    "&Errors": [
        nameError,
        serviceError,
        referral,
        securityError,
        updateError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_removeEntry /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary EntryModification
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * EntryModification  ::=  CHOICE {
 *   addAttribute     [0]  Attribute{{SupportedAttributes}},
 *   removeAttribute  [1]  AttributeType,
 *   addValues        [2]  Attribute{{SupportedAttributes}},
 *   removeValues     [3]  Attribute{{SupportedAttributes}},
 *   alterValues      [4]  AttributeTypeAndValue,
 *   resetValue       [5]  AttributeType,
 *   replaceValues    [6]  Attribute{{SupportedAttributes}},
 *   ... }
 * ```
 */
export type EntryModification =
    | { addAttribute: Attribute } /* CHOICE_ALT_ROOT */
    | { removeAttribute: AttributeType } /* CHOICE_ALT_ROOT */
    | { addValues: Attribute } /* CHOICE_ALT_ROOT */
    | { removeValues: Attribute } /* CHOICE_ALT_ROOT */
    | { alterValues: AttributeTypeAndValue } /* CHOICE_ALT_ROOT */
    | { resetValue: AttributeType } /* CHOICE_ALT_ROOT */
    | { replaceValues: Attribute } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_EntryModification: $.ASN1Decoder<
    EntryModification
> | null = null;
let _cached_encoder_for_EntryModification: $.ASN1Encoder<
    EntryModification
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) EntryModification
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {EntryModification} The decoded data structure.
 */
export function _decode_EntryModification(el: _Element) {
    if (!_cached_decoder_for_EntryModification) {
        _cached_decoder_for_EntryModification = $._decode_extensible_choice<
            EntryModification
        >({
            "CONTEXT 0": [
                "addAttribute",
                $._decode_explicit<Attribute>(() => _decode_Attribute),
            ],
            "CONTEXT 1": [
                "removeAttribute",
                $._decode_explicit<AttributeType>(() => _decode_AttributeType),
            ],
            "CONTEXT 2": [
                "addValues",
                $._decode_explicit<Attribute>(() => _decode_Attribute),
            ],
            "CONTEXT 3": [
                "removeValues",
                $._decode_explicit<Attribute>(() => _decode_Attribute),
            ],
            "CONTEXT 4": [
                "alterValues",
                $._decode_explicit<AttributeTypeAndValue>(
                    () => _decode_AttributeTypeAndValue
                ),
            ],
            "CONTEXT 5": [
                "resetValue",
                $._decode_explicit<AttributeType>(() => _decode_AttributeType),
            ],
            "CONTEXT 6": [
                "replaceValues",
                $._decode_explicit<Attribute>(() => _decode_Attribute),
            ],
        });
    }
    return _cached_decoder_for_EntryModification(el);
}
/**
 * @summary Encodes a(n) EntryModification into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The EntryModification, encoded as an ASN.1 Element.
 */
export function _encode_EntryModification(
    value: EntryModification,
    elGetter: $.ASN1Encoder<EntryModification>
) {
    if (!_cached_encoder_for_EntryModification) {
        _cached_encoder_for_EntryModification = $._encode_choice<
            EntryModification
        >(
            {
                addAttribute: $._encode_explicit(
                    _TagClass.context,
                    0,
                    () => _encode_Attribute,
                    $.BER
                ),
                removeAttribute: $._encode_explicit(
                    _TagClass.context,
                    1,
                    () => _encode_AttributeType,
                    $.BER
                ),
                addValues: $._encode_explicit(
                    _TagClass.context,
                    2,
                    () => _encode_Attribute,
                    $.BER
                ),
                removeValues: $._encode_explicit(
                    _TagClass.context,
                    3,
                    () => _encode_Attribute,
                    $.BER
                ),
                alterValues: $._encode_explicit(
                    _TagClass.context,
                    4,
                    () => _encode_AttributeTypeAndValue,
                    $.BER
                ),
                resetValue: $._encode_explicit(
                    _TagClass.context,
                    5,
                    () => _encode_AttributeType,
                    $.BER
                ),
                replaceValues: $._encode_explicit(
                    _TagClass.context,
                    6,
                    () => _encode_Attribute,
                    $.BER
                ),
            },
            $.BER
        );
    }
    return _cached_encoder_for_EntryModification(value, elGetter);
}

/**
 * @summary ModifyEntryArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyEntryArgumentData ::= SET {
 *   object     [0]  Name,
 *   changes    [1]  SEQUENCE OF EntryModification,
 *   selection  [2]  EntryInformationSelection OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF   CommonArguments }
 * ```
 *
 * @class
 */
export class ModifyEntryArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: Name,
        /**
         * @summary `changes`.
         * @public
         * @readonly
         */
        readonly changes: EntryModification[],
        /**
         * @summary `selection`.
         * @public
         * @readonly
         */
        readonly selection: OPTIONAL<EntryInformationSelection>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ModifyEntryArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `ModifyEntryArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ModifyEntryArgumentData`.
     * @returns {ModifyEntryArgumentData}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof ModifyEntryArgumentData]: ModifyEntryArgumentData[_K];
            }
        >
    ): ModifyEntryArgumentData {
        return new ModifyEntryArgumentData(
            _o.object,
            _o.changes,
            _o.selection,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of ModifyEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ModifyEntryArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "changes",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "selection",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ModifyEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ModifyEntryArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ModifyEntryArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ModifyEntryArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_ModifyEntryArgumentData: $.ASN1Decoder<
    ModifyEntryArgumentData
> | null = null;
let _cached_encoder_for_ModifyEntryArgumentData: $.ASN1Encoder<
    ModifyEntryArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyEntryArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyEntryArgumentData} The decoded data structure.
 */
export function _decode_ModifyEntryArgumentData(el: _Element) {
    if (!_cached_decoder_for_ModifyEntryArgumentData) {
        _cached_decoder_for_ModifyEntryArgumentData = function (
            el: _Element
        ): ModifyEntryArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: Name;
            let changes!: EntryModification[];
            let selection: OPTIONAL<EntryInformationSelection>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                ModifyEntryArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                ModifyEntryArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                ModifyEntryArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                ModifyEntryArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                ModifyEntryArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<Name>(() => _decode_Name)(_el);
                },
                changes: (_el: _Element): void => {
                    changes = $._decode_explicit<EntryModification[]>(() =>
                        $._decodeSequenceOf<EntryModification>(
                            () => _decode_EntryModification
                        )
                    )(_el);
                },
                selection: (_el: _Element): void => {
                    selection = $._decode_explicit<EntryInformationSelection>(
                        () => _decode_EntryInformationSelection
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ModifyEntryArgumentData,
                _extension_additions_list_spec_for_ModifyEntryArgumentData,
                _root_component_type_list_2_spec_for_ModifyEntryArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ModifyEntryArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                changes,
                selection,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_ModifyEntryArgumentData(el);
}
/**
 * @summary Encodes a(n) ModifyEntryArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyEntryArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_ModifyEntryArgumentData(
    value: ModifyEntryArgumentData,
    elGetter: $.ASN1Encoder<ModifyEntryArgumentData>
) {
    if (!_cached_encoder_for_ModifyEntryArgumentData) {
        _cached_encoder_for_ModifyEntryArgumentData = function (
            value: ModifyEntryArgumentData,
            elGetter: $.ASN1Encoder<ModifyEntryArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_Name,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () =>
                                    $._encodeSequenceOf<EntryModification>(
                                        () => _encode_EntryModification,
                                        $.BER
                                    ),
                                $.BER
                            )(value.changes, $.BER),
                            /* IF_ABSENT  */ value.selection === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => _encode_EntryInformationSelection,
                                      $.BER
                                  )(value.selection, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                ModifyEntryArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                ModifyEntryArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                ModifyEntryArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                ModifyEntryArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                ModifyEntryArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ModifyEntryArgumentData(value, elGetter);
}

export type ModifyEntryArgument<> = OPTIONALLY_PROTECTED<
    ModifyEntryArgumentData
>; // DefinedType
let _cached_decoder_for_ModifyEntryArgument: $.ASN1Decoder<
    ModifyEntryArgument
> | null = null;
let _cached_encoder_for_ModifyEntryArgument: $.ASN1Encoder<
    ModifyEntryArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyEntryArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyEntryArgument} The decoded data structure.
 */
export function _decode_ModifyEntryArgument(el: _Element) {
    if (!_cached_decoder_for_ModifyEntryArgument) {
        _cached_decoder_for_ModifyEntryArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            ModifyEntryArgumentData
        >(_decode_ModifyEntryArgumentData);
    }
    return _cached_decoder_for_ModifyEntryArgument(el);
}
/**
 * @summary Encodes a(n) ModifyEntryArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyEntryArgument, encoded as an ASN.1 Element.
 */
export function _encode_ModifyEntryArgument(
    value: ModifyEntryArgument,
    elGetter: $.ASN1Encoder<ModifyEntryArgument>
) {
    if (!_cached_encoder_for_ModifyEntryArgument) {
        _cached_encoder_for_ModifyEntryArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            ModifyEntryArgumentData
        >(_encode_ModifyEntryArgumentData);
    }
    return _cached_encoder_for_ModifyEntryArgument(value, elGetter);
}

/**
 * @summary ModifyEntryResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyEntryResultData ::= SEQUENCE {
 *   entry    [0]  EntryInformation OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class ModifyEntryResultData {
    constructor(
        /**
         * @summary `entry`.
         * @public
         * @readonly
         */
        readonly entry: OPTIONAL<EntryInformation>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ModifyEntryResultData
     * @description
     *
     * This takes an `object` and converts it to a `ModifyEntryResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ModifyEntryResultData`.
     * @returns {ModifyEntryResultData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof ModifyEntryResultData]: ModifyEntryResultData[_K] }
        >
    ): ModifyEntryResultData {
        return new ModifyEntryResultData(
            _o.entry,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ModifyEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ModifyEntryResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "entry",
        true,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ModifyEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ModifyEntryResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ModifyEntryResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ModifyEntryResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_ModifyEntryResultData: $.ASN1Decoder<
    ModifyEntryResultData
> | null = null;
let _cached_encoder_for_ModifyEntryResultData: $.ASN1Encoder<
    ModifyEntryResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyEntryResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyEntryResultData} The decoded data structure.
 */
export function _decode_ModifyEntryResultData(el: _Element) {
    if (!_cached_decoder_for_ModifyEntryResultData) {
        _cached_decoder_for_ModifyEntryResultData = function (
            el: _Element
        ): ModifyEntryResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let entry: OPTIONAL<EntryInformation>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ModifyEntryResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                entry: (_el: _Element): void => {
                    entry = $._decode_explicit<EntryInformation>(
                        () => _decode_EntryInformation
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ModifyEntryResultData,
                _extension_additions_list_spec_for_ModifyEntryResultData,
                _root_component_type_list_2_spec_for_ModifyEntryResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ModifyEntryResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ entry,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ModifyEntryResultData(el);
}
/**
 * @summary Encodes a(n) ModifyEntryResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyEntryResultData, encoded as an ASN.1 Element.
 */
export function _encode_ModifyEntryResultData(
    value: ModifyEntryResultData,
    elGetter: $.ASN1Encoder<ModifyEntryResultData>
) {
    if (!_cached_encoder_for_ModifyEntryResultData) {
        _cached_encoder_for_ModifyEntryResultData = function (
            value: ModifyEntryResultData,
            elGetter: $.ASN1Encoder<ModifyEntryResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.entry === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      0,
                                      () => _encode_EntryInformation,
                                      $.BER
                                  )(value.entry, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ModifyEntryResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ModifyEntryResultData(value, elGetter);
}

/**
 * @summary ModifyEntryResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyEntryResult  ::=  CHOICE {
 *   null         NULL,
 *   information  OPTIONALLY-PROTECTED-SEQ { ModifyEntryResultData },
 *   ... }
 * ```
 */
export type ModifyEntryResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<ModifyEntryResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_ModifyEntryResult: $.ASN1Decoder<
    ModifyEntryResult
> | null = null;
let _cached_encoder_for_ModifyEntryResult: $.ASN1Encoder<
    ModifyEntryResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyEntryResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyEntryResult} The decoded data structure.
 */
export function _decode_ModifyEntryResult(el: _Element) {
    if (!_cached_decoder_for_ModifyEntryResult) {
        _cached_decoder_for_ModifyEntryResult = $._decode_extensible_choice<
            ModifyEntryResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
                    ModifyEntryResultData
                >(_decode_ModifyEntryResultData),
            ],
        });
    }
    return _cached_decoder_for_ModifyEntryResult(el);
}
/**
 * @summary Encodes a(n) ModifyEntryResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyEntryResult, encoded as an ASN.1 Element.
 */
export function _encode_ModifyEntryResult(
    value: ModifyEntryResult,
    elGetter: $.ASN1Encoder<ModifyEntryResult>
) {
    if (!_cached_encoder_for_ModifyEntryResult) {
        _cached_encoder_for_ModifyEntryResult = $._encode_choice<
            ModifyEntryResult
        >(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    ModifyEntryResultData
                >(_encode_ModifyEntryResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_ModifyEntryResult(value, elGetter);
}

/**
 * @summary modifyEntry
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * modifyEntry OPERATION ::= {
 *   ARGUMENT  ModifyEntryArgument
 *   RESULT    ModifyEntryResult
 *   ERRORS    {attributeError |
 *              nameError |
 *              serviceError |
 *              referral |
 *              securityError |
 *              updateError}
 *   CODE      id-opcode-modifyEntry }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const modifyEntry: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_ModifyEntryArgument,
        "&ResultType": _decode_ModifyEntryResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_ModifyEntryArgument,
        "&ResultType": _encode_ModifyEntryResult,
    },
    "&Errors": [
        attributeError,
        nameError,
        serviceError,
        referral,
        securityError,
        updateError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_modifyEntry /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary ModifyDNArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyDNArgumentData ::= SET {
 *   object        [0]  DistinguishedName,
 *   newRDN        [1]  RelativeDistinguishedName,
 *   deleteOldRDN  [2]  BOOLEAN DEFAULT FALSE,
 *   newSuperior   [3]  DistinguishedName OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF      CommonArguments }
 * ```
 *
 * @class
 */
export class ModifyDNArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: DistinguishedName,
        /**
         * @summary `newRDN`.
         * @public
         * @readonly
         */
        readonly newRDN: RelativeDistinguishedName,
        /**
         * @summary `deleteOldRDN`.
         * @public
         * @readonly
         */
        readonly deleteOldRDN: OPTIONAL<BOOLEAN>,
        /**
         * @summary `newSuperior`.
         * @public
         * @readonly
         */
        readonly newSuperior: OPTIONAL<DistinguishedName>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ModifyDNArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `ModifyDNArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ModifyDNArgumentData`.
     * @returns {ModifyDNArgumentData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof ModifyDNArgumentData]: ModifyDNArgumentData[_K] }
        >
    ): ModifyDNArgumentData {
        return new ModifyDNArgumentData(
            _o.object,
            _o.newRDN,
            _o.deleteOldRDN,
            _o.newSuperior,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `deleteOldRDN`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_deleteOldRDN() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of ModifyDNArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ModifyDNArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "newRDN",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "deleteOldRDN",
        true,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "newSuperior",
        true,
        $.hasTag(_TagClass.context, 3),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ModifyDNArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ModifyDNArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ModifyDNArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ModifyDNArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_ModifyDNArgumentData: $.ASN1Decoder<
    ModifyDNArgumentData
> | null = null;
let _cached_encoder_for_ModifyDNArgumentData: $.ASN1Encoder<
    ModifyDNArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyDNArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyDNArgumentData} The decoded data structure.
 */
export function _decode_ModifyDNArgumentData(el: _Element) {
    if (!_cached_decoder_for_ModifyDNArgumentData) {
        _cached_decoder_for_ModifyDNArgumentData = function (
            el: _Element
        ): ModifyDNArgumentData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let object!: DistinguishedName;
            let newRDN!: RelativeDistinguishedName;
            let deleteOldRDN: OPTIONAL<BOOLEAN> =
                ModifyDNArgumentData._default_value_for_deleteOldRDN;
            let newSuperior: OPTIONAL<DistinguishedName>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                ModifyDNArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                ModifyDNArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                ModifyDNArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                ModifyDNArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                ModifyDNArgumentData._default_value_for_familyGrouping;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                newRDN: (_el: _Element): void => {
                    newRDN = $._decode_explicit<RelativeDistinguishedName>(
                        () => _decode_RelativeDistinguishedName
                    )(_el);
                },
                deleteOldRDN: (_el: _Element): void => {
                    deleteOldRDN = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                newSuperior: (_el: _Element): void => {
                    newSuperior = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ModifyDNArgumentData,
                _extension_additions_list_spec_for_ModifyDNArgumentData,
                _root_component_type_list_2_spec_for_ModifyDNArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ModifyDNArgumentData(
                /* SET_CONSTRUCTOR_CALL */ object,
                newRDN,
                deleteOldRDN,
                newSuperior,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_ModifyDNArgumentData(el);
}
/**
 * @summary Encodes a(n) ModifyDNArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyDNArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_ModifyDNArgumentData(
    value: ModifyDNArgumentData,
    elGetter: $.ASN1Encoder<ModifyDNArgumentData>
) {
    if (!_cached_encoder_for_ModifyDNArgumentData) {
        _cached_encoder_for_ModifyDNArgumentData = function (
            value: ModifyDNArgumentData,
            elGetter: $.ASN1Encoder<ModifyDNArgumentData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_DistinguishedName,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_RelativeDistinguishedName,
                                $.BER
                            )(value.newRDN, $.BER),
                            /* IF_DEFAULT */ value.deleteOldRDN === undefined ||
                            $.deepEq(
                                value.deleteOldRDN,
                                ModifyDNArgumentData._default_value_for_deleteOldRDN
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      2,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.deleteOldRDN, $.BER),
                            /* IF_ABSENT  */ value.newSuperior === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      3,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.newSuperior, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                ModifyDNArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                ModifyDNArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                ModifyDNArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                ModifyDNArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                ModifyDNArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ModifyDNArgumentData(value, elGetter);
}

export type ModifyDNArgument<> = OPTIONALLY_PROTECTED<ModifyDNArgumentData>; // DefinedType
let _cached_decoder_for_ModifyDNArgument: $.ASN1Decoder<
    ModifyDNArgument
> | null = null;
let _cached_encoder_for_ModifyDNArgument: $.ASN1Encoder<
    ModifyDNArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyDNArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyDNArgument} The decoded data structure.
 */
export function _decode_ModifyDNArgument(el: _Element) {
    if (!_cached_decoder_for_ModifyDNArgument) {
        _cached_decoder_for_ModifyDNArgument = _get_decoder_for_OPTIONALLY_PROTECTED<
            ModifyDNArgumentData
        >(_decode_ModifyDNArgumentData);
    }
    return _cached_decoder_for_ModifyDNArgument(el);
}
/**
 * @summary Encodes a(n) ModifyDNArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyDNArgument, encoded as an ASN.1 Element.
 */
export function _encode_ModifyDNArgument(
    value: ModifyDNArgument,
    elGetter: $.ASN1Encoder<ModifyDNArgument>
) {
    if (!_cached_encoder_for_ModifyDNArgument) {
        _cached_encoder_for_ModifyDNArgument = _get_encoder_for_OPTIONALLY_PROTECTED<
            ModifyDNArgumentData
        >(_encode_ModifyDNArgumentData);
    }
    return _cached_encoder_for_ModifyDNArgument(value, elGetter);
}

/**
 * @summary ModifyDNResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyDNResultData ::= SEQUENCE {
 *   newRDN        RelativeDistinguishedName,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class ModifyDNResultData {
    constructor(
        /**
         * @summary `newRDN`.
         * @public
         * @readonly
         */
        readonly newRDN: RelativeDistinguishedName,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ModifyDNResultData
     * @description
     *
     * This takes an `object` and converts it to a `ModifyDNResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ModifyDNResultData`.
     * @returns {ModifyDNResultData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof ModifyDNResultData]: ModifyDNResultData[_K] }
        >
    ): ModifyDNResultData {
        return new ModifyDNResultData(
            _o.newRDN,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ModifyDNResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ModifyDNResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "newRDN",
        false,
        $.hasTag(_TagClass.universal, 17),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ModifyDNResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ModifyDNResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ModifyDNResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ModifyDNResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_ModifyDNResultData: $.ASN1Decoder<
    ModifyDNResultData
> | null = null;
let _cached_encoder_for_ModifyDNResultData: $.ASN1Encoder<
    ModifyDNResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyDNResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyDNResultData} The decoded data structure.
 */
export function _decode_ModifyDNResultData(el: _Element) {
    if (!_cached_decoder_for_ModifyDNResultData) {
        _cached_decoder_for_ModifyDNResultData = function (
            el: _Element
        ): ModifyDNResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let newRDN!: RelativeDistinguishedName;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ModifyDNResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                newRDN: (_el: _Element): void => {
                    newRDN = _decode_RelativeDistinguishedName(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ModifyDNResultData,
                _extension_additions_list_spec_for_ModifyDNResultData,
                _root_component_type_list_2_spec_for_ModifyDNResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ModifyDNResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ newRDN,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ModifyDNResultData(el);
}
/**
 * @summary Encodes a(n) ModifyDNResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyDNResultData, encoded as an ASN.1 Element.
 */
export function _encode_ModifyDNResultData(
    value: ModifyDNResultData,
    elGetter: $.ASN1Encoder<ModifyDNResultData>
) {
    if (!_cached_encoder_for_ModifyDNResultData) {
        _cached_encoder_for_ModifyDNResultData = function (
            value: ModifyDNResultData,
            elGetter: $.ASN1Encoder<ModifyDNResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_RelativeDistinguishedName(
                                value.newRDN,
                                $.BER
                            ),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ModifyDNResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ModifyDNResultData(value, elGetter);
}

/**
 * @summary ModifyDNResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ModifyDNResult  ::=  CHOICE {
 *   null         NULL,
 *   information  OPTIONALLY-PROTECTED-SEQ { ModifyDNResultData },
 *   ... }
 * ```
 */
export type ModifyDNResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<ModifyDNResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_ModifyDNResult: $.ASN1Decoder<
    ModifyDNResult
> | null = null;
let _cached_encoder_for_ModifyDNResult: $.ASN1Encoder<
    ModifyDNResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ModifyDNResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ModifyDNResult} The decoded data structure.
 */
export function _decode_ModifyDNResult(el: _Element) {
    if (!_cached_decoder_for_ModifyDNResult) {
        _cached_decoder_for_ModifyDNResult = $._decode_extensible_choice<
            ModifyDNResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<ModifyDNResultData>(
                    _decode_ModifyDNResultData
                ),
            ],
        });
    }
    return _cached_decoder_for_ModifyDNResult(el);
}
/**
 * @summary Encodes a(n) ModifyDNResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ModifyDNResult, encoded as an ASN.1 Element.
 */
export function _encode_ModifyDNResult(
    value: ModifyDNResult,
    elGetter: $.ASN1Encoder<ModifyDNResult>
) {
    if (!_cached_encoder_for_ModifyDNResult) {
        _cached_encoder_for_ModifyDNResult = $._encode_choice<ModifyDNResult>(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    ModifyDNResultData
                >(_encode_ModifyDNResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_ModifyDNResult(value, elGetter);
}

/**
 * @summary modifyDN
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * modifyDN OPERATION ::= {
 *   ARGUMENT  ModifyDNArgument
 *   RESULT    ModifyDNResult
 *   ERRORS    {nameError |
 *              serviceError |
 *              referral |
 *              securityError |
 *              updateError}
 *   CODE      id-opcode-modifyDN }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const modifyDN: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_ModifyDNArgument,
        "&ResultType": _decode_ModifyDNResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_ModifyDNArgument,
        "&ResultType": _encode_ModifyDNResult,
    },
    "&Errors": [
        nameError,
        serviceError,
        referral,
        securityError,
        updateError,
    ] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_modifyDN /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary ChangePasswordArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ChangePasswordArgumentData ::= SEQUENCE {
 *   object   [0]  DistinguishedName,
 *   oldPwd   [1]  UserPwd,
 *   newPwd   [2]  UserPwd,
 *   ... }
 * ```
 *
 * @class
 */
export class ChangePasswordArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: DistinguishedName,
        /**
         * @summary `oldPwd`.
         * @public
         * @readonly
         */
        readonly oldPwd: UserPwd,
        /**
         * @summary `newPwd`.
         * @public
         * @readonly
         */
        readonly newPwd: UserPwd,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a ChangePasswordArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `ChangePasswordArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ChangePasswordArgumentData`.
     * @returns {ChangePasswordArgumentData}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof ChangePasswordArgumentData]: ChangePasswordArgumentData[_K];
            }
        >
    ): ChangePasswordArgumentData {
        return new ChangePasswordArgumentData(
            _o.object,
            _o.oldPwd,
            _o.newPwd,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of ChangePasswordArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ChangePasswordArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "oldPwd",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "newPwd",
        false,
        $.hasTag(_TagClass.context, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of ChangePasswordArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ChangePasswordArgumentData: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of ChangePasswordArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ChangePasswordArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_ChangePasswordArgumentData: $.ASN1Decoder<
    ChangePasswordArgumentData
> | null = null;
let _cached_encoder_for_ChangePasswordArgumentData: $.ASN1Encoder<
    ChangePasswordArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ChangePasswordArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ChangePasswordArgumentData} The decoded data structure.
 */
export function _decode_ChangePasswordArgumentData(el: _Element) {
    if (!_cached_decoder_for_ChangePasswordArgumentData) {
        _cached_decoder_for_ChangePasswordArgumentData = function (
            el: _Element
        ): ChangePasswordArgumentData {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 3) {
                throw new _ConstructionError(
                    "ChangePasswordArgumentData contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "object";
            sequence[1].name = "oldPwd";
            sequence[2].name = "newPwd";
            let object!: DistinguishedName;
            let oldPwd!: UserPwd;
            let newPwd!: UserPwd;
            object = $._decode_explicit<DistinguishedName>(
                () => _decode_DistinguishedName
            )(sequence[0]);
            oldPwd = $._decode_explicit<UserPwd>(() => _decode_UserPwd)(
                sequence[1]
            );
            newPwd = $._decode_explicit<UserPwd>(() => _decode_UserPwd)(
                sequence[2]
            );
            return new ChangePasswordArgumentData(
                object,
                oldPwd,
                newPwd,
                sequence.slice(3)
            );
        };
    }
    return _cached_decoder_for_ChangePasswordArgumentData(el);
}
/**
 * @summary Encodes a(n) ChangePasswordArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ChangePasswordArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_ChangePasswordArgumentData(
    value: ChangePasswordArgumentData,
    elGetter: $.ASN1Encoder<ChangePasswordArgumentData>
) {
    if (!_cached_encoder_for_ChangePasswordArgumentData) {
        _cached_encoder_for_ChangePasswordArgumentData = function (
            value: ChangePasswordArgumentData,
            elGetter: $.ASN1Encoder<ChangePasswordArgumentData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_DistinguishedName,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_UserPwd,
                                $.BER
                            )(value.oldPwd, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                2,
                                () => _encode_UserPwd,
                                $.BER
                            )(value.newPwd, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ChangePasswordArgumentData(value, elGetter);
}

export type ChangePasswordArgument<> = OPTIONALLY_PROTECTED_SEQ<
    ChangePasswordArgumentData
>; // DefinedType
let _cached_decoder_for_ChangePasswordArgument: $.ASN1Decoder<
    ChangePasswordArgument
> | null = null;
let _cached_encoder_for_ChangePasswordArgument: $.ASN1Encoder<
    ChangePasswordArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ChangePasswordArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ChangePasswordArgument} The decoded data structure.
 */
export function _decode_ChangePasswordArgument(el: _Element) {
    if (!_cached_decoder_for_ChangePasswordArgument) {
        _cached_decoder_for_ChangePasswordArgument = _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
            ChangePasswordArgumentData
        >(_decode_ChangePasswordArgumentData);
    }
    return _cached_decoder_for_ChangePasswordArgument(el);
}
/**
 * @summary Encodes a(n) ChangePasswordArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ChangePasswordArgument, encoded as an ASN.1 Element.
 */
export function _encode_ChangePasswordArgument(
    value: ChangePasswordArgument,
    elGetter: $.ASN1Encoder<ChangePasswordArgument>
) {
    if (!_cached_encoder_for_ChangePasswordArgument) {
        _cached_encoder_for_ChangePasswordArgument = _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
            ChangePasswordArgumentData
        >(_encode_ChangePasswordArgumentData);
    }
    return _cached_encoder_for_ChangePasswordArgument(value, elGetter);
}

/**
 * @summary ChangePasswordResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ChangePasswordResultData ::= SEQUENCE {
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class ChangePasswordResultData {
    constructor(
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a ChangePasswordResultData
     * @description
     *
     * This takes an `object` and converts it to a `ChangePasswordResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `ChangePasswordResultData`.
     * @returns {ChangePasswordResultData}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof ChangePasswordResultData]: ChangePasswordResultData[_K];
            }
        >
    ): ChangePasswordResultData {
        return new ChangePasswordResultData(
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of ChangePasswordResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_ChangePasswordResultData: $.ComponentSpec[] = [];
/**
 * @summary The Trailing Root Component Types of ChangePasswordResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_ChangePasswordResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of ChangePasswordResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_ChangePasswordResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_ChangePasswordResultData: $.ASN1Decoder<
    ChangePasswordResultData
> | null = null;
let _cached_encoder_for_ChangePasswordResultData: $.ASN1Encoder<
    ChangePasswordResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ChangePasswordResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ChangePasswordResultData} The decoded data structure.
 */
export function _decode_ChangePasswordResultData(el: _Element) {
    if (!_cached_decoder_for_ChangePasswordResultData) {
        _cached_decoder_for_ChangePasswordResultData = function (
            el: _Element
        ): ChangePasswordResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                ChangePasswordResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_ChangePasswordResultData,
                _extension_additions_list_spec_for_ChangePasswordResultData,
                _root_component_type_list_2_spec_for_ChangePasswordResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new ChangePasswordResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_ChangePasswordResultData(el);
}
/**
 * @summary Encodes a(n) ChangePasswordResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ChangePasswordResultData, encoded as an ASN.1 Element.
 */
export function _encode_ChangePasswordResultData(
    value: ChangePasswordResultData,
    elGetter: $.ASN1Encoder<ChangePasswordResultData>
) {
    if (!_cached_encoder_for_ChangePasswordResultData) {
        _cached_encoder_for_ChangePasswordResultData = function (
            value: ChangePasswordResultData,
            elGetter: $.ASN1Encoder<ChangePasswordResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                ChangePasswordResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_ChangePasswordResultData(value, elGetter);
}

/**
 * @summary ChangePasswordResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ChangePasswordResult  ::=  CHOICE {
 *   null        NULL,
 *   information OPTIONALLY-PROTECTED-SEQ { ChangePasswordResultData },
 *   ...}
 * ```
 */
export type ChangePasswordResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<ChangePasswordResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_ChangePasswordResult: $.ASN1Decoder<
    ChangePasswordResult
> | null = null;
let _cached_encoder_for_ChangePasswordResult: $.ASN1Encoder<
    ChangePasswordResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) ChangePasswordResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {ChangePasswordResult} The decoded data structure.
 */
export function _decode_ChangePasswordResult(el: _Element) {
    if (!_cached_decoder_for_ChangePasswordResult) {
        _cached_decoder_for_ChangePasswordResult = $._decode_extensible_choice<
            ChangePasswordResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
                    ChangePasswordResultData
                >(_decode_ChangePasswordResultData),
            ],
        });
    }
    return _cached_decoder_for_ChangePasswordResult(el);
}
/**
 * @summary Encodes a(n) ChangePasswordResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The ChangePasswordResult, encoded as an ASN.1 Element.
 */
export function _encode_ChangePasswordResult(
    value: ChangePasswordResult,
    elGetter: $.ASN1Encoder<ChangePasswordResult>
) {
    if (!_cached_encoder_for_ChangePasswordResult) {
        _cached_encoder_for_ChangePasswordResult = $._encode_choice<
            ChangePasswordResult
        >(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    ChangePasswordResultData
                >(_encode_ChangePasswordResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_ChangePasswordResult(value, elGetter);
}

/**
 * @summary changePassword
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * changePassword OPERATION ::= {
 *   ARGUMENT  ChangePasswordArgument
 *   RESULT    ChangePasswordResult
 *   ERRORS    {securityError |
 *              updateError }
 *   CODE      id-opcode-changePassword }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const changePassword: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_ChangePasswordArgument,
        "&ResultType": _decode_ChangePasswordResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_ChangePasswordArgument,
        "&ResultType": _encode_ChangePasswordResult,
    },
    "&Errors": [securityError, updateError] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_changePassword /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary AdministerPasswordArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AdministerPasswordArgumentData ::= SEQUENCE {
 *   object  [0]  DistinguishedName,
 *   newPwd  [1]  UserPwd,
 *   ... }
 * ```
 *
 * @class
 */
export class AdministerPasswordArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: DistinguishedName,
        /**
         * @summary `newPwd`.
         * @public
         * @readonly
         */
        readonly newPwd: UserPwd,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a AdministerPasswordArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `AdministerPasswordArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AdministerPasswordArgumentData`.
     * @returns {AdministerPasswordArgumentData}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof AdministerPasswordArgumentData]: AdministerPasswordArgumentData[_K];
            }
        >
    ): AdministerPasswordArgumentData {
        return new AdministerPasswordArgumentData(
            _o.object,
            _o.newPwd,
            _o._unrecognizedExtensionsList
        );
    }
}
/**
 * @summary The Leading Root Component Types of AdministerPasswordArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AdministerPasswordArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "newPwd",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AdministerPasswordArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AdministerPasswordArgumentData: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of AdministerPasswordArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AdministerPasswordArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_AdministerPasswordArgumentData: $.ASN1Decoder<
    AdministerPasswordArgumentData
> | null = null;
let _cached_encoder_for_AdministerPasswordArgumentData: $.ASN1Encoder<
    AdministerPasswordArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AdministerPasswordArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AdministerPasswordArgumentData} The decoded data structure.
 */
export function _decode_AdministerPasswordArgumentData(el: _Element) {
    if (!_cached_decoder_for_AdministerPasswordArgumentData) {
        _cached_decoder_for_AdministerPasswordArgumentData = function (
            el: _Element
        ): AdministerPasswordArgumentData {
            const sequence: _Element[] = el.sequence;
            if (sequence.length < 2) {
                throw new _ConstructionError(
                    "AdministerPasswordArgumentData contained only " +
                        sequence.length.toString() +
                        " elements."
                );
            }
            sequence[0].name = "object";
            sequence[1].name = "newPwd";
            let object!: DistinguishedName;
            let newPwd!: UserPwd;
            object = $._decode_explicit<DistinguishedName>(
                () => _decode_DistinguishedName
            )(sequence[0]);
            newPwd = $._decode_explicit<UserPwd>(() => _decode_UserPwd)(
                sequence[1]
            );
            return new AdministerPasswordArgumentData(
                object,
                newPwd,
                sequence.slice(2)
            );
        };
    }
    return _cached_decoder_for_AdministerPasswordArgumentData(el);
}
/**
 * @summary Encodes a(n) AdministerPasswordArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AdministerPasswordArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_AdministerPasswordArgumentData(
    value: AdministerPasswordArgumentData,
    elGetter: $.ASN1Encoder<AdministerPasswordArgumentData>
) {
    if (!_cached_encoder_for_AdministerPasswordArgumentData) {
        _cached_encoder_for_AdministerPasswordArgumentData = function (
            value: AdministerPasswordArgumentData,
            elGetter: $.ASN1Encoder<AdministerPasswordArgumentData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_DistinguishedName,
                                $.BER
                            )(value.object, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_UserPwd,
                                $.BER
                            )(value.newPwd, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AdministerPasswordArgumentData(value, elGetter);
}

export type AdministerPasswordArgument<> = OPTIONALLY_PROTECTED_SEQ<
    AdministerPasswordArgumentData
>; // DefinedType
let _cached_decoder_for_AdministerPasswordArgument: $.ASN1Decoder<
    AdministerPasswordArgument
> | null = null;
let _cached_encoder_for_AdministerPasswordArgument: $.ASN1Encoder<
    AdministerPasswordArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AdministerPasswordArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AdministerPasswordArgument} The decoded data structure.
 */
export function _decode_AdministerPasswordArgument(el: _Element) {
    if (!_cached_decoder_for_AdministerPasswordArgument) {
        _cached_decoder_for_AdministerPasswordArgument = _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
            AdministerPasswordArgumentData
        >(_decode_AdministerPasswordArgumentData);
    }
    return _cached_decoder_for_AdministerPasswordArgument(el);
}
/**
 * @summary Encodes a(n) AdministerPasswordArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AdministerPasswordArgument, encoded as an ASN.1 Element.
 */
export function _encode_AdministerPasswordArgument(
    value: AdministerPasswordArgument,
    elGetter: $.ASN1Encoder<AdministerPasswordArgument>
) {
    if (!_cached_encoder_for_AdministerPasswordArgument) {
        _cached_encoder_for_AdministerPasswordArgument = _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
            AdministerPasswordArgumentData
        >(_encode_AdministerPasswordArgumentData);
    }
    return _cached_encoder_for_AdministerPasswordArgument(value, elGetter);
}

/**
 * @summary AdministerPasswordResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AdministerPasswordResultData ::= SEQUENCE {
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class AdministerPasswordResultData {
    constructor(
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AdministerPasswordResultData
     * @description
     *
     * This takes an `object` and converts it to a `AdministerPasswordResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AdministerPasswordResultData`.
     * @returns {AdministerPasswordResultData}
     */
    public static _from_object(
        _o: Partial<
            {
                [_K in keyof AdministerPasswordResultData]: AdministerPasswordResultData[_K];
            }
        >
    ): AdministerPasswordResultData {
        return new AdministerPasswordResultData(
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of AdministerPasswordResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AdministerPasswordResultData: $.ComponentSpec[] = [];
/**
 * @summary The Trailing Root Component Types of AdministerPasswordResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AdministerPasswordResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AdministerPasswordResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AdministerPasswordResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_AdministerPasswordResultData: $.ASN1Decoder<
    AdministerPasswordResultData
> | null = null;
let _cached_encoder_for_AdministerPasswordResultData: $.ASN1Encoder<
    AdministerPasswordResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AdministerPasswordResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AdministerPasswordResultData} The decoded data structure.
 */
export function _decode_AdministerPasswordResultData(el: _Element) {
    if (!_cached_decoder_for_AdministerPasswordResultData) {
        _cached_decoder_for_AdministerPasswordResultData = function (
            el: _Element
        ): AdministerPasswordResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                AdministerPasswordResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AdministerPasswordResultData,
                _extension_additions_list_spec_for_AdministerPasswordResultData,
                _root_component_type_list_2_spec_for_AdministerPasswordResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AdministerPasswordResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_AdministerPasswordResultData(el);
}
/**
 * @summary Encodes a(n) AdministerPasswordResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AdministerPasswordResultData, encoded as an ASN.1 Element.
 */
export function _encode_AdministerPasswordResultData(
    value: AdministerPasswordResultData,
    elGetter: $.ASN1Encoder<AdministerPasswordResultData>
) {
    if (!_cached_encoder_for_AdministerPasswordResultData) {
        _cached_encoder_for_AdministerPasswordResultData = function (
            value: AdministerPasswordResultData,
            elGetter: $.ASN1Encoder<AdministerPasswordResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                AdministerPasswordResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AdministerPasswordResultData(value, elGetter);
}

/**
 * @summary AdministerPasswordResult
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AdministerPasswordResult  ::=  CHOICE {
 *   null NULL,
 *   information OPTIONALLY-PROTECTED-SEQ { AdministerPasswordResultData },
 *   ...}
 * ```
 */
export type AdministerPasswordResult =
    | { null_: NULL } /* CHOICE_ALT_ROOT */
    | {
          information: OPTIONALLY_PROTECTED_SEQ<AdministerPasswordResultData>;
      } /* CHOICE_ALT_ROOT */
    | _Element /* CHOICE_ALT_UNRECOGNIZED_EXT */;
let _cached_decoder_for_AdministerPasswordResult: $.ASN1Decoder<
    AdministerPasswordResult
> | null = null;
let _cached_encoder_for_AdministerPasswordResult: $.ASN1Encoder<
    AdministerPasswordResult
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AdministerPasswordResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AdministerPasswordResult} The decoded data structure.
 */
export function _decode_AdministerPasswordResult(el: _Element) {
    if (!_cached_decoder_for_AdministerPasswordResult) {
        _cached_decoder_for_AdministerPasswordResult = $._decode_extensible_choice<
            AdministerPasswordResult
        >({
            "UNIVERSAL 5": ["null_", $._decodeNull],
            "CONTEXT 0": [
                "information",
                _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
                    AdministerPasswordResultData
                >(_decode_AdministerPasswordResultData),
            ],
        });
    }
    return _cached_decoder_for_AdministerPasswordResult(el);
}
/**
 * @summary Encodes a(n) AdministerPasswordResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AdministerPasswordResult, encoded as an ASN.1 Element.
 */
export function _encode_AdministerPasswordResult(
    value: AdministerPasswordResult,
    elGetter: $.ASN1Encoder<AdministerPasswordResult>
) {
    if (!_cached_encoder_for_AdministerPasswordResult) {
        _cached_encoder_for_AdministerPasswordResult = $._encode_choice<
            AdministerPasswordResult
        >(
            {
                null_: $._encodeNull,
                information: _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
                    AdministerPasswordResultData
                >(_encode_AdministerPasswordResultData),
            },
            $.BER
        );
    }
    return _cached_encoder_for_AdministerPasswordResult(value, elGetter);
}

/**
 * @summary administerPassword
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * administerPassword OPERATION ::= {
 *   ARGUMENT  AdministerPasswordArgument
 *   RESULT    AdministerPasswordResult
 *   ERRORS    {securityError |
 *              updateError}
 *   CODE      id-opcode-administerPassword }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const administerPassword: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_AdministerPasswordArgument,
        "&ResultType": _decode_AdministerPasswordResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_AdministerPasswordArgument,
        "&ResultType": _encode_AdministerPasswordResult,
    },
    "&Errors": [securityError, updateError] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_administerPassword /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary LinkId
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * LinkId  ::=  INTEGER
 * ```
 */
export type LinkId = INTEGER;
let _cached_decoder_for_LinkId: $.ASN1Decoder<LinkId> | null = null;
let _cached_encoder_for_LinkId: $.ASN1Encoder<LinkId> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LinkId
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LinkId} The decoded data structure.
 */
export function _decode_LinkId(el: _Element) {
    if (!_cached_decoder_for_LinkId) {
        _cached_decoder_for_LinkId = $._decodeInteger;
    }
    return _cached_decoder_for_LinkId(el);
}
/**
 * @summary Encodes a(n) LinkId into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LinkId, encoded as an ASN.1 Element.
 */
export function _encode_LinkId(value: LinkId, elGetter: $.ASN1Encoder<LinkId>) {
    if (!_cached_encoder_for_LinkId) {
        _cached_encoder_for_LinkId = $._encodeInteger;
    }
    return _cached_encoder_for_LinkId(value, elGetter);
}

/**
 * @summary CommonArgumentsSeq
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * CommonArgumentsSeq ::= SEQUENCE {
 *   serviceControls      [30]  ServiceControls    DEFAULT {},
 *   securityParameters   [29]  SecurityParameters OPTIONAL,
 *   requestor            [28]  DistinguishedName  OPTIONAL,
 *   operationProgress    [27]  OperationProgress
 *                              DEFAULT {nameResolutionPhase notStarted},
 *   aliasedRDNs          [26]  INTEGER            OPTIONAL,
 *   criticalExtensions   [25]  BIT STRING         OPTIONAL,
 *   referenceType        [24]  ReferenceType      OPTIONAL,
 *   entryOnly            [23]  BOOLEAN            DEFAULT TRUE,
 *   exclusions           [22]  Exclusions         OPTIONAL,
 *   nameResolveOnMaster  [21]  BOOLEAN            DEFAULT FALSE,
 *   operationContexts    [20]  ContextSelection   OPTIONAL,
 *   familyGrouping       [19]  FamilyGrouping     DEFAULT entryOnly,
 *   ... }
 * ```
 *
 * @class
 */
export class CommonArgumentsSeq {
    constructor(
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<ServiceControls>,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<SecurityParameters>,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<DistinguishedName>,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<OperationProgress>,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER>,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<BIT_STRING>,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<ReferenceType>,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN>,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions>,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<BOOLEAN>,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<ContextSelection>,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<FamilyGrouping>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = []
    ) {}

    /**
     * @summary Restructures an object into a CommonArgumentsSeq
     * @description
     *
     * This takes an `object` and converts it to a `CommonArgumentsSeq`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `CommonArgumentsSeq`.
     * @returns {CommonArgumentsSeq}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof CommonArgumentsSeq]: CommonArgumentsSeq[_K] }
        >
    ): CommonArgumentsSeq {
        return new CommonArgumentsSeq(
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping,
            _o._unrecognizedExtensionsList
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of CommonArgumentsSeq
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_CommonArgumentsSeq: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of CommonArgumentsSeq
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_CommonArgumentsSeq: $.ComponentSpec[] = [];
/**
 * @summary The Extension Addition Component Types of CommonArgumentsSeq
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_CommonArgumentsSeq: $.ComponentSpec[] = [];
let _cached_decoder_for_CommonArgumentsSeq: $.ASN1Decoder<
    CommonArgumentsSeq
> | null = null;
let _cached_encoder_for_CommonArgumentsSeq: $.ASN1Encoder<
    CommonArgumentsSeq
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) CommonArgumentsSeq
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {CommonArgumentsSeq} The decoded data structure.
 */
export function _decode_CommonArgumentsSeq(el: _Element) {
    if (!_cached_decoder_for_CommonArgumentsSeq) {
        _cached_decoder_for_CommonArgumentsSeq = function (
            el: _Element
        ): CommonArgumentsSeq {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let serviceControls: OPTIONAL<ServiceControls> =
                CommonArgumentsSeq._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                CommonArgumentsSeq._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                CommonArgumentsSeq._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                CommonArgumentsSeq._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                CommonArgumentsSeq._default_value_for_familyGrouping;
            let _unrecognizedExtensionsList: _Element[] = [];
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_CommonArgumentsSeq,
                _extension_additions_list_spec_for_CommonArgumentsSeq,
                _root_component_type_list_2_spec_for_CommonArgumentsSeq,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new CommonArgumentsSeq(
                /* SEQUENCE_CONSTRUCTOR_CALL */ serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping,
                _unrecognizedExtensionsList
            );
        };
    }
    return _cached_decoder_for_CommonArgumentsSeq(el);
}
/**
 * @summary Encodes a(n) CommonArgumentsSeq into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The CommonArgumentsSeq, encoded as an ASN.1 Element.
 */
export function _encode_CommonArgumentsSeq(
    value: CommonArgumentsSeq,
    elGetter: $.ASN1Encoder<CommonArgumentsSeq>
) {
    if (!_cached_encoder_for_CommonArgumentsSeq) {
        _cached_encoder_for_CommonArgumentsSeq = function (
            value: CommonArgumentsSeq,
            elGetter: $.ASN1Encoder<CommonArgumentsSeq>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                CommonArgumentsSeq._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                CommonArgumentsSeq._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                CommonArgumentsSeq._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                CommonArgumentsSeq._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                CommonArgumentsSeq._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : []
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_CommonArgumentsSeq(value, elGetter);
}

/**
 * @summary LdapArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * LdapArgumentData ::= SEQUENCE {
 *   object        DistinguishedName,
 *   ldapMessage   LDAPMessage,
 *   linkId        LinkId  OPTIONAL,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonArgumentsSeq }
 * ```
 *
 * @class
 */
export class LdapArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: DistinguishedName,
        /**
         * @summary `ldapMessage`.
         * @public
         * @readonly
         */
        readonly ldapMessage: LDAPMessage,
        /**
         * @summary `linkId`.
         * @public
         * @readonly
         */
        readonly linkId: OPTIONAL<LinkId>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a LdapArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `LdapArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `LdapArgumentData`.
     * @returns {LdapArgumentData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof LdapArgumentData]: LdapArgumentData[_K] }>
    ): LdapArgumentData {
        return new LdapArgumentData(
            _o.object,
            _o.ldapMessage,
            _o.linkId,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of LdapArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_LdapArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "ldapMessage",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "linkId",
        true,
        $.hasTag(_TagClass.universal, 2),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of LdapArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_LdapArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of LdapArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_LdapArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_LdapArgumentData: $.ASN1Decoder<
    LdapArgumentData
> | null = null;
let _cached_encoder_for_LdapArgumentData: $.ASN1Encoder<
    LdapArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LdapArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LdapArgumentData} The decoded data structure.
 */
export function _decode_LdapArgumentData(el: _Element) {
    if (!_cached_decoder_for_LdapArgumentData) {
        _cached_decoder_for_LdapArgumentData = function (
            el: _Element
        ): LdapArgumentData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let object!: DistinguishedName;
            let ldapMessage!: LDAPMessage;
            let linkId: OPTIONAL<LinkId>;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                LdapArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                LdapArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                LdapArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                LdapArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                LdapArgumentData._default_value_for_familyGrouping;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = _decode_DistinguishedName(_el);
                },
                ldapMessage: (_el: _Element): void => {
                    ldapMessage = _decode_LDAPMessage(_el);
                },
                linkId: (_el: _Element): void => {
                    linkId = _decode_LinkId(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_LdapArgumentData,
                _extension_additions_list_spec_for_LdapArgumentData,
                _root_component_type_list_2_spec_for_LdapArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new LdapArgumentData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ object,
                ldapMessage,
                linkId,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_LdapArgumentData(el);
}
/**
 * @summary Encodes a(n) LdapArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LdapArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_LdapArgumentData(
    value: LdapArgumentData,
    elGetter: $.ASN1Encoder<LdapArgumentData>
) {
    if (!_cached_encoder_for_LdapArgumentData) {
        _cached_encoder_for_LdapArgumentData = function (
            value: LdapArgumentData,
            elGetter: $.ASN1Encoder<LdapArgumentData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_DistinguishedName(
                                value.object,
                                $.BER
                            ),
                            /* REQUIRED   */ _encode_LDAPMessage(
                                value.ldapMessage,
                                $.BER
                            ),
                            /* IF_ABSENT  */ value.linkId === undefined
                                ? undefined
                                : _encode_LinkId(value.linkId, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                LdapArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                LdapArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                LdapArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                LdapArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                LdapArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_LdapArgumentData(value, elGetter);
}

export type LdapArgument<> = OPTIONALLY_PROTECTED_SEQ<LdapArgumentData>; // DefinedType
let _cached_decoder_for_LdapArgument: $.ASN1Decoder<LdapArgument> | null = null;
let _cached_encoder_for_LdapArgument: $.ASN1Encoder<LdapArgument> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LdapArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LdapArgument} The decoded data structure.
 */
export function _decode_LdapArgument(el: _Element) {
    if (!_cached_decoder_for_LdapArgument) {
        _cached_decoder_for_LdapArgument = _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
            LdapArgumentData
        >(_decode_LdapArgumentData);
    }
    return _cached_decoder_for_LdapArgument(el);
}
/**
 * @summary Encodes a(n) LdapArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LdapArgument, encoded as an ASN.1 Element.
 */
export function _encode_LdapArgument(
    value: LdapArgument,
    elGetter: $.ASN1Encoder<LdapArgument>
) {
    if (!_cached_encoder_for_LdapArgument) {
        _cached_encoder_for_LdapArgument = _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
            LdapArgumentData
        >(_encode_LdapArgumentData);
    }
    return _cached_encoder_for_LdapArgument(value, elGetter);
}

/**
 * @summary AbandonProblem
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonProblem  ::=  INTEGER {
 *   noSuchOperation (1),
 *   tooLate         (2),
 *   cannotAbandon   (3) }
 * ```
 */
export type AbandonProblem = INTEGER;
/**
 * @summary AbandonProblem_noSuchOperation
 * @constant
 * @type {number}
 */
export const AbandonProblem_noSuchOperation: AbandonProblem = 1; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AbandonProblem_tooLate
 * @constant
 * @type {number}
 */
export const AbandonProblem_tooLate: AbandonProblem = 2; /* LONG_NAMED_INTEGER_VALUE */
/**
 * @summary AbandonProblem_cannotAbandon
 * @constant
 * @type {number}
 */
export const AbandonProblem_cannotAbandon: AbandonProblem = 3; /* LONG_NAMED_INTEGER_VALUE */
let _cached_decoder_for_AbandonProblem: $.ASN1Decoder<
    AbandonProblem
> | null = null;
let _cached_encoder_for_AbandonProblem: $.ASN1Encoder<
    AbandonProblem
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonProblem
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonProblem} The decoded data structure.
 */
export function _decode_AbandonProblem(el: _Element) {
    if (!_cached_decoder_for_AbandonProblem) {
        _cached_decoder_for_AbandonProblem = $._decodeInteger;
    }
    return _cached_decoder_for_AbandonProblem(el);
}
/**
 * @summary Encodes a(n) AbandonProblem into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonProblem, encoded as an ASN.1 Element.
 */
export function _encode_AbandonProblem(
    value: AbandonProblem,
    elGetter: $.ASN1Encoder<AbandonProblem>
) {
    if (!_cached_encoder_for_AbandonProblem) {
        _cached_encoder_for_AbandonProblem = $._encodeInteger;
    }
    return _cached_encoder_for_AbandonProblem(value, elGetter);
}

/**
 * @summary AbandonFailedData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * AbandonFailedData ::= SET {
 *   problem    [0]  AbandonProblem,
 *   operation  [1]  InvokeId,
 *   ...,
 *   ...,
 *   COMPONENTS OF   CommonResults }
 * ```
 *
 * @class
 */
export class AbandonFailedData {
    constructor(
        /**
         * @summary `problem`.
         * @public
         * @readonly
         */
        readonly problem: AbandonProblem,
        /**
         * @summary `operation`.
         * @public
         * @readonly
         */
        readonly operation: InvokeId,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a AbandonFailedData
     * @description
     *
     * This takes an `object` and converts it to a `AbandonFailedData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `AbandonFailedData`.
     * @returns {AbandonFailedData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof AbandonFailedData]: AbandonFailedData[_K] }>
    ): AbandonFailedData {
        return new AbandonFailedData(
            _o.problem,
            _o.operation,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of AbandonFailedData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_AbandonFailedData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "problem",
        false,
        $.hasTag(_TagClass.context, 0),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operation",
        false,
        $.hasTag(_TagClass.context, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of AbandonFailedData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_AbandonFailedData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of AbandonFailedData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_AbandonFailedData: $.ComponentSpec[] = [];
let _cached_decoder_for_AbandonFailedData: $.ASN1Decoder<
    AbandonFailedData
> | null = null;
let _cached_encoder_for_AbandonFailedData: $.ASN1Encoder<
    AbandonFailedData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) AbandonFailedData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {AbandonFailedData} The decoded data structure.
 */
export function _decode_AbandonFailedData(el: _Element) {
    if (!_cached_decoder_for_AbandonFailedData) {
        _cached_decoder_for_AbandonFailedData = function (
            el: _Element
        ): AbandonFailedData {
            /* START_OF_SET_COMPONENT_DECLARATIONS */
            let problem!: AbandonProblem;
            let operation!: InvokeId;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                AbandonFailedData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SET_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                problem: (_el: _Element): void => {
                    problem = $._decode_explicit<AbandonProblem>(
                        () => _decode_AbandonProblem
                    )(_el);
                },
                operation: (_el: _Element): void => {
                    operation = $._decode_explicit<InvokeId>(
                        () => _decode_InvokeId
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_set(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_AbandonFailedData,
                _extension_additions_list_spec_for_AbandonFailedData,
                _root_component_type_list_2_spec_for_AbandonFailedData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new AbandonFailedData(
                /* SET_CONSTRUCTOR_CALL */ problem,
                operation,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_AbandonFailedData(el);
}
/**
 * @summary Encodes a(n) AbandonFailedData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The AbandonFailedData, encoded as an ASN.1 Element.
 */
export function _encode_AbandonFailedData(
    value: AbandonFailedData,
    elGetter: $.ASN1Encoder<AbandonFailedData>
) {
    if (!_cached_encoder_for_AbandonFailedData) {
        _cached_encoder_for_AbandonFailedData = function (
            value: AbandonFailedData,
            elGetter: $.ASN1Encoder<AbandonFailedData>
        ): _Element {
            return $._encodeSet(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                0,
                                () => _encode_AbandonProblem,
                                $.BER
                            )(value.problem, $.BER),
                            /* REQUIRED   */ $._encode_explicit(
                                _TagClass.context,
                                1,
                                () => _encode_InvokeId,
                                $.BER
                            )(value.operation, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                AbandonFailedData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_AbandonFailedData(value, elGetter);
}

/**
 * @summary abandonFailed
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * abandonFailed ERROR ::= {
 *   PARAMETER OPTIONALLY-PROTECTED { AbandonFailedData }
 *   CODE      id-errcode-abandonFailed }
 * ```
 *
 * @constant
 * @type {ERROR}
 * @implements {ERROR}
 */
export const abandonFailed: ERROR = {
    class: "ERROR",
    decoderFor: {
        "&ParameterType": _get_decoder_for_OPTIONALLY_PROTECTED<
            AbandonFailedData
        >(_decode_AbandonFailedData),
    },
    encoderFor: {
        "&ParameterType": _get_encoder_for_OPTIONALLY_PROTECTED<
            AbandonFailedData
        >(_encode_AbandonFailedData),
    },
    "&errorCode": id_errcode_abandonFailed /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ParameterType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary ldapTransport
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * ldapTransport OPERATION ::= {
 *   ARGUMENT    LdapArgument
 *   RESULT      SEQUENCE OF LDAPMessage
 *   ERRORS      { abandonFailed | abandoned }
 *   CODE        id-opcode-ldapTransport }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const ldapTransport: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_LdapArgument,
        "&ResultType": $._decodeSequenceOf<LDAPMessage>(
            () => _decode_LDAPMessage
        ),
    },
    encoderFor: {
        "&ArgumentType": _encode_LdapArgument,
        "&ResultType": $._encodeSequenceOf<LDAPMessage>(
            () => _encode_LDAPMessage,
            $.BER
        ),
    },
    "&Errors": [abandonFailed, abandoned] /* OBJECT_FIELD_SETTING */,
    "&operationCode": id_opcode_ldapTransport /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/**
 * @summary LdapResultData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * LdapResultData ::= SEQUENCE {
 *   ldapMessages   SEQUENCE SIZE (1..MAX) OF LDAPMessage OPTIONAL,
 *   returnToClient BOOLEAN DEFAULT FALSE,
 *   ...,
 *   ...,
 *   COMPONENTS OF CommonResultsSeq }
 * ```
 *
 * @class
 */
export class LdapResultData {
    constructor(
        /**
         * @summary `ldapMessages`.
         * @public
         * @readonly
         */
        readonly ldapMessages: OPTIONAL<LDAPMessage[]>,
        /**
         * @summary `returnToClient`.
         * @public
         * @readonly
         */
        readonly returnToClient: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `performer`.
         * @public
         * @readonly
         */
        readonly performer: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasDereferenced`.
         * @public
         * @readonly
         */
        readonly aliasDereferenced: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `notification`.
         * @public
         * @readonly
         */
        readonly notification: OPTIONAL<Attribute[]> /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a LdapResultData
     * @description
     *
     * This takes an `object` and converts it to a `LdapResultData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `LdapResultData`.
     * @returns {LdapResultData}
     */
    public static _from_object(
        _o: Partial<{ [_K in keyof LdapResultData]: LdapResultData[_K] }>
    ): LdapResultData {
        return new LdapResultData(
            _o.ldapMessages,
            _o.returnToClient,
            _o._unrecognizedExtensionsList,
            _o.securityParameters,
            _o.performer,
            _o.aliasDereferenced,
            _o.notification
        );
    }

    /**
     * @summary Getter that returns the default value for `returnToClient`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_returnToClient() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `aliasDereferenced`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_aliasDereferenced() {
        return false;
    }
}
/**
 * @summary The Leading Root Component Types of LdapResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_LdapResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "ldapMessages",
        true,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "returnToClient",
        true,
        $.hasTag(_TagClass.universal, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of LdapResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_LdapResultData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "performer",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasDereferenced",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "notification",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of LdapResultData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_LdapResultData: $.ComponentSpec[] = [];
let _cached_decoder_for_LdapResultData: $.ASN1Decoder<
    LdapResultData
> | null = null;
let _cached_encoder_for_LdapResultData: $.ASN1Encoder<
    LdapResultData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LdapResultData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LdapResultData} The decoded data structure.
 */
export function _decode_LdapResultData(el: _Element) {
    if (!_cached_decoder_for_LdapResultData) {
        _cached_decoder_for_LdapResultData = function (
            el: _Element
        ): LdapResultData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let ldapMessages: OPTIONAL<LDAPMessage[]>;
            let returnToClient: OPTIONAL<BOOLEAN> =
                LdapResultData._default_value_for_returnToClient;
            let _unrecognizedExtensionsList: _Element[] = [];
            let securityParameters: OPTIONAL<SecurityParameters>;
            let performer: OPTIONAL<DistinguishedName>;
            let aliasDereferenced: OPTIONAL<BOOLEAN> =
                LdapResultData._default_value_for_aliasDereferenced;
            let notification: OPTIONAL<Attribute[]>;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                ldapMessages: (_el: _Element): void => {
                    ldapMessages = $._decodeSequenceOf<LDAPMessage>(
                        () => _decode_LDAPMessage
                    )(_el);
                },
                returnToClient: (_el: _Element): void => {
                    returnToClient = $._decodeBoolean(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                performer: (_el: _Element): void => {
                    performer = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                aliasDereferenced: (_el: _Element): void => {
                    aliasDereferenced = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                notification: (_el: _Element): void => {
                    notification = $._decode_explicit<Attribute[]>(() =>
                        $._decodeSequenceOf<Attribute>(() => _decode_Attribute)
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_LdapResultData,
                _extension_additions_list_spec_for_LdapResultData,
                _root_component_type_list_2_spec_for_LdapResultData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new LdapResultData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ ldapMessages,
                returnToClient,
                _unrecognizedExtensionsList,
                securityParameters,
                performer,
                aliasDereferenced,
                notification
            );
        };
    }
    return _cached_decoder_for_LdapResultData(el);
}
/**
 * @summary Encodes a(n) LdapResultData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LdapResultData, encoded as an ASN.1 Element.
 */
export function _encode_LdapResultData(
    value: LdapResultData,
    elGetter: $.ASN1Encoder<LdapResultData>
) {
    if (!_cached_encoder_for_LdapResultData) {
        _cached_encoder_for_LdapResultData = function (
            value: LdapResultData,
            elGetter: $.ASN1Encoder<LdapResultData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* IF_ABSENT  */ value.ldapMessages === undefined
                                ? undefined
                                : $._encodeSequenceOf<LDAPMessage>(
                                      () => _encode_LDAPMessage,
                                      $.BER
                                  )(value.ldapMessages, $.BER),
                            /* IF_DEFAULT */ value.returnToClient ===
                                undefined ||
                            $.deepEq(
                                value.returnToClient,
                                LdapResultData._default_value_for_returnToClient
                            )
                                ? undefined
                                : $._encodeBoolean(value.returnToClient, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.performer === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.performer, $.BER),
                            /* IF_DEFAULT */ value.aliasDereferenced ===
                                undefined ||
                            $.deepEq(
                                value.aliasDereferenced,
                                LdapResultData._default_value_for_aliasDereferenced
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.aliasDereferenced, $.BER),
                            /* IF_ABSENT  */ value.notification === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () =>
                                          $._encodeSequenceOf<Attribute>(
                                              () => _encode_Attribute,
                                              $.BER
                                          ),
                                      $.BER
                                  )(value.notification, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_LdapResultData(value, elGetter);
}

export type LdapResult<> = OPTIONALLY_PROTECTED_SEQ<LdapResultData>; // DefinedType
let _cached_decoder_for_LdapResult: $.ASN1Decoder<LdapResult> | null = null;
let _cached_encoder_for_LdapResult: $.ASN1Encoder<LdapResult> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LdapResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LdapResult} The decoded data structure.
 */
export function _decode_LdapResult(el: _Element) {
    if (!_cached_decoder_for_LdapResult) {
        _cached_decoder_for_LdapResult = _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
            LdapResultData
        >(_decode_LdapResultData);
    }
    return _cached_decoder_for_LdapResult(el);
}
/**
 * @summary Encodes a(n) LdapResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LdapResult, encoded as an ASN.1 Element.
 */
export function _encode_LdapResult(
    value: LdapResult,
    elGetter: $.ASN1Encoder<LdapResult>
) {
    if (!_cached_encoder_for_LdapResult) {
        _cached_encoder_for_LdapResult = _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
            LdapResultData
        >(_encode_LdapResultData);
    }
    return _cached_encoder_for_LdapResult(value, elGetter);
}

/**
 * @summary LinkedArgumentData
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * LinkedArgumentData ::= SEQUENCE {
 *   object         DistinguishedName,
 *   ldapMessage    LDAPMessage,
 *   linkId         LinkId,
 *   returnToClient BOOLEAN DEFAULT FALSE,
 *   ...,
 *   ...,
 *   COMPONENTS OF  CommonArgumentsSeq }
 * ```
 *
 * @class
 */
export class LinkedArgumentData {
    constructor(
        /**
         * @summary `object`.
         * @public
         * @readonly
         */
        readonly object: DistinguishedName,
        /**
         * @summary `ldapMessage`.
         * @public
         * @readonly
         */
        readonly ldapMessage: LDAPMessage,
        /**
         * @summary `linkId`.
         * @public
         * @readonly
         */
        readonly linkId: LinkId,
        /**
         * @summary `returnToClient`.
         * @public
         * @readonly
         */
        readonly returnToClient: OPTIONAL<BOOLEAN>,
        /**
         * @summary Extensions that are not recognized.
         * @public
         * @readonly
         */
        readonly _unrecognizedExtensionsList: _Element[] = [],
        /**
         * @summary `serviceControls`.
         * @public
         * @readonly
         */
        readonly serviceControls: OPTIONAL<
            ServiceControls
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `securityParameters`.
         * @public
         * @readonly
         */
        readonly securityParameters: OPTIONAL<
            SecurityParameters
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `requestor`.
         * @public
         * @readonly
         */
        readonly requestor: OPTIONAL<
            DistinguishedName
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationProgress`.
         * @public
         * @readonly
         */
        readonly operationProgress: OPTIONAL<
            OperationProgress
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `aliasedRDNs`.
         * @public
         * @readonly
         */
        readonly aliasedRDNs: OPTIONAL<INTEGER> /* REPLICATED_COMPONENT */,
        /**
         * @summary `criticalExtensions`.
         * @public
         * @readonly
         */
        readonly criticalExtensions: OPTIONAL<
            BIT_STRING
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `referenceType`.
         * @public
         * @readonly
         */
        readonly referenceType: OPTIONAL<
            ReferenceType
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `entryOnly`.
         * @public
         * @readonly
         */
        readonly entryOnly: OPTIONAL<BOOLEAN> /* REPLICATED_COMPONENT */,
        /**
         * @summary `exclusions`.
         * @public
         * @readonly
         */
        readonly exclusions: OPTIONAL<Exclusions> /* REPLICATED_COMPONENT */,
        /**
         * @summary `nameResolveOnMaster`.
         * @public
         * @readonly
         */
        readonly nameResolveOnMaster: OPTIONAL<
            BOOLEAN
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `operationContexts`.
         * @public
         * @readonly
         */
        readonly operationContexts: OPTIONAL<
            ContextSelection
        > /* REPLICATED_COMPONENT */,
        /**
         * @summary `familyGrouping`.
         * @public
         * @readonly
         */
        readonly familyGrouping: OPTIONAL<
            FamilyGrouping
        > /* REPLICATED_COMPONENT */
    ) {}

    /**
     * @summary Restructures an object into a LinkedArgumentData
     * @description
     *
     * This takes an `object` and converts it to a `LinkedArgumentData`.
     *
     * @public
     * @static
     * @method
     * @param {Object} _o An object having all of the keys and values of a `LinkedArgumentData`.
     * @returns {LinkedArgumentData}
     */
    public static _from_object(
        _o: Partial<
            { [_K in keyof LinkedArgumentData]: LinkedArgumentData[_K] }
        >
    ): LinkedArgumentData {
        return new LinkedArgumentData(
            _o.object,
            _o.ldapMessage,
            _o.linkId,
            _o.returnToClient,
            _o._unrecognizedExtensionsList,
            _o.serviceControls,
            _o.securityParameters,
            _o.requestor,
            _o.operationProgress,
            _o.aliasedRDNs,
            _o.criticalExtensions,
            _o.referenceType,
            _o.entryOnly,
            _o.exclusions,
            _o.nameResolveOnMaster,
            _o.operationContexts,
            _o.familyGrouping
        );
    }

    /**
     * @summary Getter that returns the default value for `returnToClient`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_returnToClient() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `serviceControls`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_serviceControls() {
        return ServiceControls._from_object({});
    }
    /**
     * @summary Getter that returns the default value for `operationProgress`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_operationProgress() {
        return OperationProgress._from_object({
            nameResolutionPhase:
                OperationProgress._enum_for_nameResolutionPhase.notStarted,
        });
    }
    /**
     * @summary Getter that returns the default value for `entryOnly`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_entryOnly() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `nameResolveOnMaster`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_nameResolveOnMaster() {
        return false;
    }
    /**
     * @summary Getter that returns the default value for `familyGrouping`.
     * @public
     * @static
     * @method
     */
    public static get _default_value_for_familyGrouping() {
        return FamilyGrouping_entryOnly;
    }
    /**
     * @summary The enum used as the type of the component `referenceType`
     * @public
     * @static
     */

    public static _enum_for_referenceType = _enum_for_ReferenceType;
    /**
     * @summary The enum used as the type of the component `familyGrouping`
     * @public
     * @static
     */

    public static _enum_for_familyGrouping = _enum_for_FamilyGrouping;
}
/**
 * @summary The Leading Root Component Types of LinkedArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the leading root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_1_spec_for_LinkedArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "object",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "ldapMessage",
        false,
        $.hasTag(_TagClass.universal, 16),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "linkId",
        false,
        $.hasTag(_TagClass.universal, 2),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "returnToClient",
        true,
        $.hasTag(_TagClass.universal, 1),
        undefined,
        undefined
    ),
];
/**
 * @summary The Trailing Root Component Types of LinkedArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the trailing root component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _root_component_type_list_2_spec_for_LinkedArgumentData: $.ComponentSpec[] = [
    new $.ComponentSpec(
        "serviceControls",
        true,
        $.hasTag(_TagClass.context, 30),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "securityParameters",
        true,
        $.hasTag(_TagClass.context, 29),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "requestor",
        true,
        $.hasTag(_TagClass.context, 28),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationProgress",
        true,
        $.hasTag(_TagClass.context, 27),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "aliasedRDNs",
        true,
        $.hasTag(_TagClass.context, 26),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "criticalExtensions",
        true,
        $.hasTag(_TagClass.context, 25),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "referenceType",
        true,
        $.hasTag(_TagClass.context, 24),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "entryOnly",
        true,
        $.hasTag(_TagClass.context, 23),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "exclusions",
        true,
        $.hasTag(_TagClass.context, 22),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "nameResolveOnMaster",
        true,
        $.hasTag(_TagClass.context, 21),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "operationContexts",
        true,
        $.hasTag(_TagClass.context, 20),
        undefined,
        undefined
    ),
    new $.ComponentSpec(
        "familyGrouping",
        true,
        $.hasTag(_TagClass.context, 19),
        undefined,
        undefined
    ),
];
/**
 * @summary The Extension Addition Component Types of LinkedArgumentData
 * @description
 *
 * This is an array of `ComponentSpec`s that define how to decode the extension addition component type list of a SET or SEQUENCE.
 *
 * @constant
 */
export const _extension_additions_list_spec_for_LinkedArgumentData: $.ComponentSpec[] = [];
let _cached_decoder_for_LinkedArgumentData: $.ASN1Decoder<
    LinkedArgumentData
> | null = null;
let _cached_encoder_for_LinkedArgumentData: $.ASN1Encoder<
    LinkedArgumentData
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LinkedArgumentData
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LinkedArgumentData} The decoded data structure.
 */
export function _decode_LinkedArgumentData(el: _Element) {
    if (!_cached_decoder_for_LinkedArgumentData) {
        _cached_decoder_for_LinkedArgumentData = function (
            el: _Element
        ): LinkedArgumentData {
            /* START_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            let object!: DistinguishedName;
            let ldapMessage!: LDAPMessage;
            let linkId!: LinkId;
            let returnToClient: OPTIONAL<BOOLEAN> =
                LinkedArgumentData._default_value_for_returnToClient;
            let _unrecognizedExtensionsList: _Element[] = [];
            let serviceControls: OPTIONAL<ServiceControls> =
                LinkedArgumentData._default_value_for_serviceControls;
            let securityParameters: OPTIONAL<SecurityParameters>;
            let requestor: OPTIONAL<DistinguishedName>;
            let operationProgress: OPTIONAL<OperationProgress> =
                LinkedArgumentData._default_value_for_operationProgress;
            let aliasedRDNs: OPTIONAL<INTEGER>;
            let criticalExtensions: OPTIONAL<BIT_STRING>;
            let referenceType: OPTIONAL<ReferenceType>;
            let entryOnly: OPTIONAL<BOOLEAN> =
                LinkedArgumentData._default_value_for_entryOnly;
            let exclusions: OPTIONAL<Exclusions>;
            let nameResolveOnMaster: OPTIONAL<BOOLEAN> =
                LinkedArgumentData._default_value_for_nameResolveOnMaster;
            let operationContexts: OPTIONAL<ContextSelection>;
            let familyGrouping: OPTIONAL<FamilyGrouping> =
                LinkedArgumentData._default_value_for_familyGrouping;
            /* END_OF_SEQUENCE_COMPONENT_DECLARATIONS */
            /* START_OF_CALLBACKS_MAP */
            const callbacks: $.DecodingMap = {
                object: (_el: _Element): void => {
                    object = _decode_DistinguishedName(_el);
                },
                ldapMessage: (_el: _Element): void => {
                    ldapMessage = _decode_LDAPMessage(_el);
                },
                linkId: (_el: _Element): void => {
                    linkId = _decode_LinkId(_el);
                },
                returnToClient: (_el: _Element): void => {
                    returnToClient = $._decodeBoolean(_el);
                },
                serviceControls: (_el: _Element): void => {
                    serviceControls = $._decode_explicit<ServiceControls>(
                        () => _decode_ServiceControls
                    )(_el);
                },
                securityParameters: (_el: _Element): void => {
                    securityParameters = $._decode_explicit<SecurityParameters>(
                        () => _decode_SecurityParameters
                    )(_el);
                },
                requestor: (_el: _Element): void => {
                    requestor = $._decode_explicit<DistinguishedName>(
                        () => _decode_DistinguishedName
                    )(_el);
                },
                operationProgress: (_el: _Element): void => {
                    operationProgress = $._decode_explicit<OperationProgress>(
                        () => _decode_OperationProgress
                    )(_el);
                },
                aliasedRDNs: (_el: _Element): void => {
                    aliasedRDNs = $._decode_explicit<INTEGER>(
                        () => $._decodeInteger
                    )(_el);
                },
                criticalExtensions: (_el: _Element): void => {
                    criticalExtensions = $._decode_explicit<BIT_STRING>(
                        () => $._decodeBitString
                    )(_el);
                },
                referenceType: (_el: _Element): void => {
                    referenceType = $._decode_explicit<ReferenceType>(
                        () => _decode_ReferenceType
                    )(_el);
                },
                entryOnly: (_el: _Element): void => {
                    entryOnly = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                exclusions: (_el: _Element): void => {
                    exclusions = $._decode_explicit<Exclusions>(
                        () => _decode_Exclusions
                    )(_el);
                },
                nameResolveOnMaster: (_el: _Element): void => {
                    nameResolveOnMaster = $._decode_explicit<BOOLEAN>(
                        () => $._decodeBoolean
                    )(_el);
                },
                operationContexts: (_el: _Element): void => {
                    operationContexts = $._decode_explicit<ContextSelection>(
                        () => _decode_ContextSelection
                    )(_el);
                },
                familyGrouping: (_el: _Element): void => {
                    familyGrouping = $._decode_explicit<FamilyGrouping>(
                        () => _decode_FamilyGrouping
                    )(_el);
                },
            };
            /* END_OF_CALLBACKS_MAP */
            $._parse_sequence(
                el,
                callbacks,
                _root_component_type_list_1_spec_for_LinkedArgumentData,
                _extension_additions_list_spec_for_LinkedArgumentData,
                _root_component_type_list_2_spec_for_LinkedArgumentData,
                (ext: _Element): void => {
                    _unrecognizedExtensionsList.push(ext);
                }
            );
            return new LinkedArgumentData(
                /* SEQUENCE_CONSTRUCTOR_CALL */ object,
                ldapMessage,
                linkId,
                returnToClient,
                _unrecognizedExtensionsList,
                serviceControls,
                securityParameters,
                requestor,
                operationProgress,
                aliasedRDNs,
                criticalExtensions,
                referenceType,
                entryOnly,
                exclusions,
                nameResolveOnMaster,
                operationContexts,
                familyGrouping
            );
        };
    }
    return _cached_decoder_for_LinkedArgumentData(el);
}
/**
 * @summary Encodes a(n) LinkedArgumentData into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LinkedArgumentData, encoded as an ASN.1 Element.
 */
export function _encode_LinkedArgumentData(
    value: LinkedArgumentData,
    elGetter: $.ASN1Encoder<LinkedArgumentData>
) {
    if (!_cached_encoder_for_LinkedArgumentData) {
        _cached_encoder_for_LinkedArgumentData = function (
            value: LinkedArgumentData,
            elGetter: $.ASN1Encoder<LinkedArgumentData>
        ): _Element {
            return $._encodeSequence(
                ([] as (_Element | undefined)[])
                    .concat(
                        [
                            /* REQUIRED   */ _encode_DistinguishedName(
                                value.object,
                                $.BER
                            ),
                            /* REQUIRED   */ _encode_LDAPMessage(
                                value.ldapMessage,
                                $.BER
                            ),
                            /* REQUIRED   */ _encode_LinkId(
                                value.linkId,
                                $.BER
                            ),
                            /* IF_DEFAULT */ value.returnToClient ===
                                undefined ||
                            $.deepEq(
                                value.returnToClient,
                                LinkedArgumentData._default_value_for_returnToClient
                            )
                                ? undefined
                                : $._encodeBoolean(value.returnToClient, $.BER),
                        ],
                        value._unrecognizedExtensionsList
                            ? value._unrecognizedExtensionsList
                            : [],
                        [
                            /* IF_DEFAULT */ value.serviceControls ===
                                undefined ||
                            $.deepEq(
                                value.serviceControls,
                                LinkedArgumentData._default_value_for_serviceControls
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      30,
                                      () => _encode_ServiceControls,
                                      $.BER
                                  )(value.serviceControls, $.BER),
                            /* IF_ABSENT  */ value.securityParameters ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      29,
                                      () => _encode_SecurityParameters,
                                      $.BER
                                  )(value.securityParameters, $.BER),
                            /* IF_ABSENT  */ value.requestor === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      28,
                                      () => _encode_DistinguishedName,
                                      $.BER
                                  )(value.requestor, $.BER),
                            /* IF_DEFAULT */ value.operationProgress ===
                                undefined ||
                            $.deepEq(
                                value.operationProgress,
                                LinkedArgumentData._default_value_for_operationProgress
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      27,
                                      () => _encode_OperationProgress,
                                      $.BER
                                  )(value.operationProgress, $.BER),
                            /* IF_ABSENT  */ value.aliasedRDNs === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      26,
                                      () => $._encodeInteger,
                                      $.BER
                                  )(value.aliasedRDNs, $.BER),
                            /* IF_ABSENT  */ value.criticalExtensions ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      25,
                                      () => $._encodeBitString,
                                      $.BER
                                  )(value.criticalExtensions, $.BER),
                            /* IF_ABSENT  */ value.referenceType === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      24,
                                      () => _encode_ReferenceType,
                                      $.BER
                                  )(value.referenceType, $.BER),
                            /* IF_DEFAULT */ value.entryOnly === undefined ||
                            $.deepEq(
                                value.entryOnly,
                                LinkedArgumentData._default_value_for_entryOnly
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      23,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.entryOnly, $.BER),
                            /* IF_ABSENT  */ value.exclusions === undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      22,
                                      () => _encode_Exclusions,
                                      $.BER
                                  )(value.exclusions, $.BER),
                            /* IF_DEFAULT */ value.nameResolveOnMaster ===
                                undefined ||
                            $.deepEq(
                                value.nameResolveOnMaster,
                                LinkedArgumentData._default_value_for_nameResolveOnMaster
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      21,
                                      () => $._encodeBoolean,
                                      $.BER
                                  )(value.nameResolveOnMaster, $.BER),
                            /* IF_ABSENT  */ value.operationContexts ===
                            undefined
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      20,
                                      () => _encode_ContextSelection,
                                      $.BER
                                  )(value.operationContexts, $.BER),
                            /* IF_DEFAULT */ value.familyGrouping ===
                                undefined ||
                            $.deepEq(
                                value.familyGrouping,
                                LinkedArgumentData._default_value_for_familyGrouping
                            )
                                ? undefined
                                : $._encode_explicit(
                                      _TagClass.context,
                                      19,
                                      () => _encode_FamilyGrouping,
                                      $.BER
                                  )(value.familyGrouping, $.BER),
                        ]
                    )
                    .filter((c: _Element | undefined): c is _Element => !!c),
                $.BER
            );
        };
    }
    return _cached_encoder_for_LinkedArgumentData(value, elGetter);
}

export type LinkedArgument<> = OPTIONALLY_PROTECTED_SEQ<LinkedArgumentData>; // DefinedType
let _cached_decoder_for_LinkedArgument: $.ASN1Decoder<
    LinkedArgument
> | null = null;
let _cached_encoder_for_LinkedArgument: $.ASN1Encoder<
    LinkedArgument
> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LinkedArgument
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LinkedArgument} The decoded data structure.
 */
export function _decode_LinkedArgument(el: _Element) {
    if (!_cached_decoder_for_LinkedArgument) {
        _cached_decoder_for_LinkedArgument = _get_decoder_for_OPTIONALLY_PROTECTED_SEQ<
            LinkedArgumentData
        >(_decode_LinkedArgumentData);
    }
    return _cached_decoder_for_LinkedArgument(el);
}
/**
 * @summary Encodes a(n) LinkedArgument into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LinkedArgument, encoded as an ASN.1 Element.
 */
export function _encode_LinkedArgument(
    value: LinkedArgument,
    elGetter: $.ASN1Encoder<LinkedArgument>
) {
    if (!_cached_encoder_for_LinkedArgument) {
        _cached_encoder_for_LinkedArgument = _get_encoder_for_OPTIONALLY_PROTECTED_SEQ<
            LinkedArgumentData
        >(_encode_LinkedArgumentData);
    }
    return _cached_encoder_for_LinkedArgument(value, elGetter);
}

export type LinkedResult<> = NULL; // NullType
let _cached_decoder_for_LinkedResult: $.ASN1Decoder<LinkedResult> | null = null;
let _cached_encoder_for_LinkedResult: $.ASN1Encoder<LinkedResult> | null = null;
/**
 * @summary Decodes an ASN.1 element into a(n) LinkedResult
 * @function
 * @param {_Element} el The element being decoded.
 * @returns {LinkedResult} The decoded data structure.
 */
export function _decode_LinkedResult(el: _Element) {
    if (!_cached_decoder_for_LinkedResult) {
        _cached_decoder_for_LinkedResult = $._decodeNull;
    }
    return _cached_decoder_for_LinkedResult(el);
}
/**
 * @summary Encodes a(n) LinkedResult into an ASN.1 Element.
 * @function
 * @param {value} el The element being decoded.
 * @param elGetter A function that can be used to get new ASN.1 elements.
 * @returns {_Element} The LinkedResult, encoded as an ASN.1 Element.
 */
export function _encode_LinkedResult(
    value: LinkedResult,
    elGetter: $.ASN1Encoder<LinkedResult>
) {
    if (!_cached_encoder_for_LinkedResult) {
        _cached_encoder_for_LinkedResult = $._encodeNull;
    }
    return _cached_encoder_for_LinkedResult(value, elGetter);
}

/**
 * @summary linkedLDAP
 * @description
 *
 * ### ASN.1 Definition:
 *
 * ```asn1
 * linkedLDAP OPERATION ::= {
 *   ARGUMENT    LinkedArgument
 *   RESULT      LinkedResult
 *   CODE        id-opcode-linkedLDAP }
 * ```
 *
 * @constant
 * @type {OPERATION}
 * @implements {OPERATION}
 */
export const linkedLDAP: OPERATION = {
    class: "OPERATION",
    decoderFor: {
        "&ArgumentType": _decode_LinkedArgument,
        "&ResultType": _decode_LinkedResult,
    },
    encoderFor: {
        "&ArgumentType": _encode_LinkedArgument,
        "&ResultType": _encode_LinkedResult,
    },
    "&operationCode": id_opcode_linkedLDAP /* OBJECT_FIELD_SETTING */ /* UNIQUE_OBJECT_FIELD_SETTING */,
    "&ArgumentType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
    "&ResultType": 0 as never /* OBJECT_FIELD_SETTING OBJECT_TYPE_FIELD_SETTING */,
};

/* END_MODULE DirectoryAbstractService */
/* eslint-enable */
