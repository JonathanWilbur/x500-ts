import { ObjectIdentifier } from "asn1-ts";

export type ID = ObjectIdentifier;

export const ds = new ObjectIdentifier([2, 5]);
export const id = new ObjectIdentifier([2, 17, 1, 2]);

export const internet            = new ObjectIdentifier([1, 3, 6, 1]);
export const ldap_dir            = new ObjectIdentifier([1, 3, 6, 1, 1]);
export const intSecurity         = new ObjectIdentifier([1, 3, 6, 1, 5]);
export const ldap_enterprise     = new ObjectIdentifier([1, 3, 6, 1, 4, 1]);
export const ldap_x509           = new ObjectIdentifier([1, 3, 6, 1, 1, 15]);
export const ldap_openLDAP       = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 4203, 1]);
export const openLDAP_attributes = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 4203, 1, 3]);
export const openLDAP_controls   = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 4203, 1, 10]);
export const ldap_wall           = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 1466]);
export const ldap_dynExt         = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 1466, 101, 119]);
export const ldap_attr           = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 1466, 101, 120]);
export const ldap_match          = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 1466, 109, 114]);
export const ldap_syntax         = new ObjectIdentifier([1, 3, 6, 1, 4, 1, 1466, 115, 121, 1]);
export const cosine              = new ObjectIdentifier([0, 9, 2342, 19200300, 100]);
export const cosineAttr          = new ObjectIdentifier([0, 9, 2342, 19200300, 100, 1]);

export const module                                   = new ObjectIdentifier([2, 5, 1]);
export const serviceElement                           = new ObjectIdentifier([2, 5, 2]);
export const applicationContext                       = new ObjectIdentifier([2, 5, 3]);
export const attributeType                            = new ObjectIdentifier([2, 5, 4]);
export const attributeSyntaxVendor                    = new ObjectIdentifier([2, 5, 5]);
export const objectClass                              = new ObjectIdentifier([2, 5, 6]);
export const attributeSet                             = new ObjectIdentifier([2, 5, 7]);
export const algorithm                                = new ObjectIdentifier([2, 5, 8]);
export const abstractSyntax                           = new ObjectIdentifier([2, 5, 9]);
export const object                                   = new ObjectIdentifier([2, 5, 10]);
export const port                                     = new ObjectIdentifier([2, 5, 11]);
export const dsaOperationalAttribute                  = new ObjectIdentifier([2, 5, 12]);
export const matchingRule                             = new ObjectIdentifier([2, 5, 13]);
export const knowledgeMatchingRule                    = new ObjectIdentifier([2, 5, 14]);
export const nameForm                                 = new ObjectIdentifier([2, 5, 15]);
export const group                                    = new ObjectIdentifier([2, 5, 16]);
export const subentry                                 = new ObjectIdentifier([2, 5, 17]);
export const operationalAttributeType                 = new ObjectIdentifier([2, 5, 18]);
export const operationalBinding                       = new ObjectIdentifier([2, 5, 19]);
export const schemaObjectClass                        = new ObjectIdentifier([2, 5, 20]);
export const schemaOperationalAttribute               = new ObjectIdentifier([2, 5, 21]);
export const administrativeRoles                      = new ObjectIdentifier([2, 5, 23]);
export const accessControlAttribute                   = new ObjectIdentifier([2, 5, 24]);
export const rosObject                                = new ObjectIdentifier([2, 5, 25]);
export const contract                                 = new ObjectIdentifier([2, 5, 26]);
export const package_                                 = new ObjectIdentifier([2, 5, 27]); // "package" is reserved.
export const accessControlSchemes                     = new ObjectIdentifier([2, 5, 28]);
export const certificateExtension                     = new ObjectIdentifier([2, 5, 29]);
export const managementObject                         = new ObjectIdentifier([2, 5, 30]);
export const attributeValueContext                    = new ObjectIdentifier([2, 5, 31]);
export const securityExchange                         = new ObjectIdentifier([2, 5, 32]);
export const idmProtocol                              = new ObjectIdentifier([2, 5, 33]);
export const problem                                  = new ObjectIdentifier([2, 5, 34]);
export const notification                             = new ObjectIdentifier([2, 5, 35]);
export const matchingRestriction                      = new ObjectIdentifier([2, 5, 36]); // None are currently defined
export const controlAttributeType                     = new ObjectIdentifier([2, 5, 37]);
export const keyPurposes                              = new ObjectIdentifier([2, 5, 38]);
export const passwordQuality                          = new ObjectIdentifier([2, 5, 39]);
export const attributeSyntax                          = new ObjectIdentifier([2, 5, 40]);
export const avRestriction                            = new ObjectIdentifier([2, 5, 41]);
export const cmsContentType                           = new ObjectIdentifier([2, 5, 42]);

// modules

export const usefulDefinitions                     = new ObjectIdentifier([2, 5, 1, 0, 8]);
export const informationFramework                  = new ObjectIdentifier([2, 5, 1, 1, 8]);
export const directoryAbstractService              = new ObjectIdentifier([2, 5, 1, 2, 8]);
export const distributedOperations                 = new ObjectIdentifier([2, 5, 1, 3, 8]);
export const protocolObjectIdentifiers             = new ObjectIdentifier([2, 5, 1, 4, 8]);
export const selectedAttributeTypes                = new ObjectIdentifier([2, 5, 1, 5, 8]);
export const selectedObjectClasses                 = new ObjectIdentifier([2, 5, 1, 6, 8]);
export const authenticationFramework               = new ObjectIdentifier([2, 5, 1, 7, 8]);
export const algorithmObjectIdentifiers            = new ObjectIdentifier([2, 5, 1, 8, 8]);
export const directoryObjectIdentifiers            = new ObjectIdentifier([2, 5, 1, 9, 8]);
export const upperBounds                           = new ObjectIdentifier([2, 5, 1, 10, 8]);
export const dap                                   = new ObjectIdentifier([2, 5, 1, 11, 8]);
export const dsp                                   = new ObjectIdentifier([2, 5, 1, 12, 8]);
export const distributedDirectoryOIDs              = new ObjectIdentifier([2, 5, 1, 13, 8]);
export const directoryShadowOIDs                   = new ObjectIdentifier([2, 5, 1, 14, 8]);
export const directoryShadowAbstractService        = new ObjectIdentifier([2, 5, 1, 15, 8]);
export const disp                                  = new ObjectIdentifier([2, 5, 1, 16, 7]);
export const dop                                   = new ObjectIdentifier([2, 5, 1, 17, 7]);
export const opBindingManagement                   = new ObjectIdentifier([2, 5, 1, 18, 8]);
export const opBindingOIDs                         = new ObjectIdentifier([2, 5, 1, 19, 8]);
export const hierarchicalOperationalBindings       = new ObjectIdentifier([2, 5, 1, 20, 8]);
export const dsaOperationalAttributeTypes          = new ObjectIdentifier([2, 5, 1, 22, 8]);
export const schemaAdministration                  = new ObjectIdentifier([2, 5, 1, 23, 8]);
export const basicAccessControl                    = new ObjectIdentifier([2, 5, 1, 24, 8]);
export const directoryOperationalBindingTypes      = new ObjectIdentifier([2, 5, 1, 25, 8]);
export const certificateExtensions                 = new ObjectIdentifier([2, 5, 1, 26, 8]);
export const directoryManagement                   = new ObjectIdentifier([2, 5, 1, 27, 8]);
export const enhancedSecurity                      = new ObjectIdentifier([2, 5, 1, 28, 8]);
export const directorySecurityExchanges            = new ObjectIdentifier([2, 5, 1, 29, 8]);
export const iDMProtocolSpecification              = new ObjectIdentifier([2, 5, 1, 30, 8]);
export const directoryIDMProtocols                 = new ObjectIdentifier([2, 5, 1, 31, 8]);
export const attributeCertificateDefinitions       = new ObjectIdentifier([2, 5, 1, 32, 8]);
export const serviceAdministration                 = new ObjectIdentifier([2, 5, 1, 33, 8]);
export const ldapAttributes                        = new ObjectIdentifier([2, 5, 1, 34, 8]);
export const commonProtocolSpecification           = new ObjectIdentifier([2, 5, 1, 35, 8]);
export const oSIProtocolSpecification              = new ObjectIdentifier([2, 5, 1, 36, 8]);
export const directoryOSIProtocols                 = new ObjectIdentifier([2, 5, 1, 37, 8]);
export const ldapSystemSchema                      = new ObjectIdentifier([2, 5, 1, 38, 8]);
export const passwordPolicy                        = new ObjectIdentifier([2, 5, 1, 39, 8]);
export const pkiPmiExternalDataTypes               = new ObjectIdentifier([2, 5, 1, 40, 8]);
export const extensionAttributes                   = new ObjectIdentifier([2, 5, 1, 41, 8]);
export const pkiPmiWrapper                         = new ObjectIdentifier([2, 5, 1, 42, 8]);
export const avlManagement                         = new ObjectIdentifier([2, 5, 1, 43, 8]);
export const trustBrokerProtocol                   = new ObjectIdentifier([2, 5, 1, 44, 8]);

// synonyms

export const id_oc          = objectClass;
export const id_at          = attributeType;
export const id_as          = abstractSyntax;
export const id_mr          = matchingRule;
export const id_nf          = nameForm;
export const id_sc          = subentry;
export const id_oa          = operationalAttributeType;
export const id_ob          = operationalBinding;
export const id_doa         = dsaOperationalAttribute;
export const id_kmr         = knowledgeMatchingRule;
export const id_soc         = schemaObjectClass;
export const id_soa         = schemaOperationalAttribute;
export const id_ar          = administrativeRoles;
export const id_aca         = accessControlAttribute;
export const id_ac          = applicationContext;
export const id_rosObject   = rosObject;
export const id_contract    = contract;
export const id_package     = package_;
export const id_acScheme    = accessControlSchemes;
export const id_ce          = certificateExtension;
export const id_mgt         = managementObject;
export const id_avc         = attributeValueContext;
export const id_se          = securityExchange;
export const id_idm         = idmProtocol;
export const id_pr          = problem;
export const id_not         = notification;
export const id_mre         = matchingRestriction;
export const id_cat         = controlAttributeType;
export const id_kp          = keyPurposes;
export const id_pq          = passwordQuality;
export const id_ats         = attributeSyntax;
// export const id_lc          = ldapControl;
export const id_asx         = attributeSyntax;
export const id_lsx         = ldap_syntax;
export const id_ldx         = ldap_x509;
export const id_lat         = ldap_attr;
export const id_lmr         = ldap_match;
export const id_oat         = openLDAP_attributes;
export const id_coat        = cosineAttr;
export const id_avr         = avRestriction;
export const id_cmsct       = cmsContentType;
