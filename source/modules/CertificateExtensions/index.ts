import { ObjectIdentifier } from "asn1-ts";
export const certificateExtensionsOID: ObjectIdentifier = new ObjectIdentifier([ 2, 5, 1, 26 ]);

export { default as AAIssuingDistPointSyntax } from "./AAIssuingDistPointSyntax";
export { default as AltName } from "./AltName";
export { default as AltNameType } from "./AltNameType";
export { default as AttributesSyntax } from "./AttributesSyntax";
export { default as AuthorityKeyIdentifier } from "./AuthorityKeyIdentifier";
export { default as BaseCRLNumber } from "./BaseCRLNumber";
export { default as BaseDistance } from "./BaseDistance";
export { default as BaseRevocationInfo } from "./BaseRevocationInfo";
export { default as BasicConstraintsSyntax } from "./BasicConstraintsSyntax";
export { default as CRLDistPointsSyntax } from "./CRLDistPointsSyntax";
export { default as CRLNumber } from "./CRLNumber";
export { default as CRLReason } from "./CRLReason";
export { default as CRLReferral } from "./CRLReferral";
export { default as CRLScopeSyntax } from "./CRLScopeSyntax";
export { default as CRLStreamIdentifier } from "./CRLStreamIdentifier";
export { default as CertPolicyId } from "./CertPolicyId";
export { default as CertPolicySet } from "./CertPolicySet";
export { default as CertificateAssertion } from "./CertificateAssertion";
export { default as CertificateExactAssertion } from "./CertificateExactAssertion";
export { default as CertificateGroup } from "./CertificateGroup";
export { default as CertificateGroupNumberRange } from "./CertificateGroupNumberRange";
export { default as CertificateListAssertion } from "./CertificateListAssertion";
export { default as CertificateListExactAssertion } from "./CertificateListExactAssertion";
export { default as CertificatePairAssertion } from "./CertificatePairAssertion";
export { default as CertificatePairExactAssertion } from "./CertificatePairExactAssertion";
export { default as CertificatePoliciesSyntax } from "./CertificatePoliciesSyntax";
export { default as CertificateSerialNumbers } from "./CertificateSerialNumbers";
export { default as DeltaInformation } from "./DeltaInformation";
export { default as DeltaRefInfo } from "./DeltaRefInfo";
export { default as DistributionPoint } from "./DistributionPoint";
export { default as DistributionPointName } from "./DistributionPointName";
export { default as EDIPartyName } from "./EDIPartyName";
export { default as EnhancedCertificateAssertion } from "./EnhancedCertificateAssertion";
export { default as ExpiredCertsOnCRL } from "./ExpiredCertsOnCRL";
export { default as GeneralName } from "./GeneralName";
export { default as GeneralNames } from "./GeneralNames";
export { default as GeneralSubtree } from "./GeneralSubtree";
export { default as GeneralSubtrees } from "./GeneralSubtrees";
export { default as HoldInstruction } from "./HoldInstruction";
export { default as IssuingDistPointSyntax } from "./IssuingDistPointSyntax";
export { default as KeyIdentifier } from "./KeyIdentifier";
export { default as KeyPurposeId } from "./KeyPurposeId";
export { default as KeyUsage } from "./KeyUsage";
export { default as NameConstraintsSyntax } from "./NameConstraintsSyntax";
export { default as NumberRange } from "./NumberRange";
export { default as OnlyCertificateTypes } from "./OnlyCertificateTypes";
export { default as OrderedListSyntax } from "./OrderedListSyntax";
export { default as PerAuthorityScope } from "./PerAuthorityScope";
export { default as PkiPathMatchSyntax } from "./PkiPathMatchSyntax";
export { default as PolicyConstraintsSyntax } from "./PolicyConstraintsSyntax";
export { default as PolicyInformation } from "./PolicyInformation";
export { default as PolicyMapping } from "./PolicyMapping";
export { default as PolicyMappingsSyntax } from "./PolicyMappingsSyntax";
export { default as PolicyQualifierInfo } from "./PolicyQualifierInfo";
export { default as PrivateKeyUsagePeriod } from "./PrivateKeyUsagePeriod";
export { default as ReasonFlags } from "./ReasonFlags";
export { default as ReasonInfo } from "./ReasonInfo";
export { default as RevokedCertificateGroup } from "./RevokedCertificateGroup";
export { default as RevokedGroup } from "./RevokedGroup";
export { default as RevokedGroupSyntax } from "./RevokedGroupSyntax";
export { default as SkipCerts } from "./SkipCerts";
export { default as StatusReferral } from "./StatusReferral";
export { default as StatusReferrals } from "./StatusReferrals";
export { default as SubjectKeyIdentifier } from "./SubjectKeyIdentifier";
export { default as ToBeRevokedGroup } from "./ToBeRevokedGroup";
export { default as ToBeRevokedSyntax } from "./ToBeRevokedSyntax";

export const id_ce_subjectDirectoryAttributes = new ObjectIdentifier([2, 5, 29, 9]);
export const id_ce_subjectKeyIdentifier = new ObjectIdentifier([2, 5, 29, 14]);
export const id_ce_keyUsage = new ObjectIdentifier([2, 5, 29, 15]);
export const id_ce_privateKeyUsagePeriod = new ObjectIdentifier([2, 5, 29, 16]);
export const id_ce_subjectAltName = new ObjectIdentifier([2, 5, 29, 17]);
export const id_ce_issuerAltName = new ObjectIdentifier([2, 5, 29, 18]);
export const id_ce_basicConstraints = new ObjectIdentifier([2, 5, 29, 19]);
export const id_ce_cRLNumber = new ObjectIdentifier([2, 5, 29, 20]);
export const id_ce_reasonCode = new ObjectIdentifier([2, 5, 29, 21]);
export const id_ce_instructionCode = new ObjectIdentifier([2, 5, 29, 23]);
export const id_ce_invalidityDate = new ObjectIdentifier([2, 5, 29, 24]);
export const id_ce_deltaCRLIndicator = new ObjectIdentifier([2, 5, 29, 27]);
export const id_ce_issuingDistributionPoint = new ObjectIdentifier([2, 5, 29, 28]);
export const id_ce_certificateIssuer = new ObjectIdentifier([2, 5, 29, 29]);
export const id_ce_nameConstraints = new ObjectIdentifier([2, 5, 29, 30]);
export const id_ce_cRLDistributionPoints = new ObjectIdentifier([2, 5, 29, 31]);
export const id_ce_certificatePolicies = new ObjectIdentifier([2, 5, 29, 32]);
export const id_ce_policyMappings = new ObjectIdentifier([2, 5, 29, 33]);
export const id_ce_authorityKeyIdentifier = new ObjectIdentifier([2, 5, 29, 35]);
export const id_ce_policyConstraints = new ObjectIdentifier([2, 5, 29, 36]);
export const id_ce_extKeyUsage = new ObjectIdentifier([2, 5, 29, 37]);
export const id_ce_cRLStreamIdentifier = new ObjectIdentifier([2, 5, 29, 40]);
export const id_ce_cRLScope = new ObjectIdentifier([2, 5, 29, 44]);
export const id_ce_statusReferrals = new ObjectIdentifier([2, 5, 29, 45]);
export const id_ce_freshestCRL = new ObjectIdentifier([2, 5, 29, 46]);
export const id_ce_orderedList = new ObjectIdentifier([2, 5, 29, 47]);
export const id_ce_baseUpdateTime = new ObjectIdentifier([2, 5, 29, 51]);
export const id_ce_deltaInfo = new ObjectIdentifier([2, 5, 29, 53]);
export const id_ce_inhibitAnyPolicy = new ObjectIdentifier([2, 5, 29, 54]);
export const id_ce_toBeRevoked = new ObjectIdentifier([2, 5, 29, 58]);
export const id_ce_RevokedGroups = new ObjectIdentifier([2, 5, 29, 59]);
export const id_ce_expiredCertsOnCRL = new ObjectIdentifier([2, 5, 29, 60]);
export const id_ce_aAissuingDistributionPoint = new ObjectIdentifier([2, 5, 29, 63]);
export const id_mr_certificateExactMatch = new ObjectIdentifier([2, 5, 13, 34]);
export const id_mr_certificateMatch = new ObjectIdentifier([2, 5, 13, 35]);
export const id_mr_certificatePairExactMatch = new ObjectIdentifier([2, 5, 13, 36]);
export const id_mr_certificatePairMatch = new ObjectIdentifier([2, 5, 13, 37]);
export const id_mr_certificateListExactMatch = new ObjectIdentifier([2, 5, 13, 38]);
export const id_mr_certificateListMatch = new ObjectIdentifier([2, 5, 13, 39]);
export const id_mr_algorithmIdentifierMatch = new ObjectIdentifier([2, 5, 13, 40]);
export const id_mr_policyMatch = new ObjectIdentifier([2, 5, 13, 60]);
export const id_mr_pkiPathMatch = new ObjectIdentifier([2, 5, 13, 62]);
export const id_mr_enhancedCertificateMatch = new ObjectIdentifier([2, 5, 13, 65]);
export const id_ldx_certExactAssertion = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 1]);
export const id_ldx_certAssertion = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 2]);
export const id_ldx_certPairExactAssertion = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 3]);
export const id_ldx_certPairAssertion = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 4]);
export const id_ldx_certListExactAssertion = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 5]);
export const id_ldx_certListAssertion = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 6]);
export const id_ldx_algorithmIdentifier = new ObjectIdentifier([1, 3, 6, 1, 1, 15, 7]);
